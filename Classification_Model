{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9640bdd1",
   "metadata": {},
   "source": [
    "# Result Summary\n",
    "\n",
    "**(1) Models what I used**\n",
    "\n",
    "\n",
    "|Model         |AUC Score|TN, FP, FN, TP   |\n",
    "|:------------:|:-------:|:---------------:|\n",
    "|knn           |0.6295   |(23, 40, 14, 118)|\n",
    "|Logistic      |0.6016   |(19, 44, 13, 119)|\n",
    "|Cart          |0.5691   |(13, 50, 9, 123) |\n",
    "|Pruned Tree   |0.6216   |(22, 41, 14, 118)|\n",
    "|Random Forest |0.5649   |(12, 51, 8, 124) |\n",
    "\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**(2)My best result**\n",
    "\n",
    "|Model name|y_variable        |x_variables|Training ACCURACY|Testing ACCURACY|Train-Test Gap|AUC Score|confusion_matrix       |\n",
    "|:--------:|:----------------:|:---------:|:---------------:|:--------------:|:------------:|:-------:|:---------------------:|\n",
    "|knn       |CROSS_SELL_SUCCESS|logit_sig_2|0.7407           |0.7231          |0.0176        |0.6295   |TN:23 FP:40 FN:8 TP:124|\n",
    "\n",
    "<br>\n",
    "\n",
    "*In the modeling part, I put 'Model name', 'Training ACCURACY,'Testing  ACCURACY', 'Train-Test Gap','AUC Score' and 'confusion_matrix' by dynamic string.\n",
    "\n",
    "<br>\n",
    "\n",
    "**(3)Table for what I use for best result**\n",
    "\n",
    "|No. |          logit_sig_2         | \n",
    "|:--:|:----------------------------:|\n",
    "| 1  |AVG_TIME_PER_SITE_VISIT_LEVEL | \n",
    "| 2  |TOTAL_PHOTOS_VIEWED           | \n",
    "| 3  |CANCELLATION_SCALE            |\n",
    "| 4  |AVG_MEAN_RATING_SCALE         |\n",
    "| 5  |PERSONAL                      |\n",
    "| 6  |PROFESSIONAL                  |"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa1b7494",
   "metadata": {},
   "source": [
    "#  Result Analysis\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**Feature Engineering**\n",
    "<br>\n",
    "First, separated data into three things: 'CONTINUOUS','INTERVAL/COUNT' and 'CATEGORICAL/OTHER'. Based on see the result of descriptive analysis. When I confused, I checked scatter plot to make sure Continuous data or Interval/Count.\n",
    "\n",
    "Finally I have 57 variables. Based on my logic. In this markdown, I will explain only my optimal logit_sig_2. (You can check them in Result Summary)\n",
    "\n",
    "I will analyze the result.\n",
    "\n",
    "<br>\n",
    "\n",
    "**0. CROSS_SELL_SUCCESS (y_variable)**\n",
    "<br>\n",
    "Cross sell success success means by doing discount promotion, customer buy something to apply discount. If customer take that promotion, put 1, otherwise put 0. In this assignment, we want to predict the customer who apply this discount promotion and optimize the discount promotion in the future.\n",
    "\n",
    "<br>\n",
    "\n",
    "**1. AVG_TIME_PER_SITE_VISIT_LEVEL**\n",
    "<br>\n",
    "Avg Time Per Site Visit is how much spend time in the website. I assume the more spend time in the website, it means more think seriously to buy and look for what he or she will buy along their preference. In order to apply discount, customer need to check deeply about what kind of combinations of product or plan can use that promotion discount. It would take a time to figure out it for avoiding the regretting. So, I assume that the customer who apply CROSS SELL promotion, the more AVG TIME PER SITE VISIT will be more than the customer who did not apply CROSS SELL promotion.\n",
    "\n",
    "When I check the skewness, it was 1.20. If more than 1, it means huge skewness. To revise it, I did separate AVG_TIME_PER_SITE_VISIT into 1: <= 100, 2: <= 150, 3: <= 200, 4: <= 250, 5: <= 300, 6: > 300. \n",
    "\n",
    "<br>\n",
    "\n",
    "**2. TOTAL_PHOTOS_VIEWED**\n",
    "<br>\n",
    "Total Photos Viewed is total number of clicks on photos across all website or mobile app visits. If customer doesn't have interested in the meals or discount or plan, they don't click pictures. if customer consider to apply discount promotion, it means customer buy more than usual ordering or shopping. So customer would like to check detail of each meal for buying something without regretting. I assume that the customer who apply CROSS SELL promotion, the more TOTAL PHOTOS VIEWED will be more than the customer who did not apply CROSS SELL promotion.\n",
    "\n",
    "<br>\n",
    "\n",
    "**3. CANCELLATION_SCALE**\n",
    "<br>\n",
    "Cancellation is Number of meals canceled AFTER 12:00 PM (noon) as per cancellation policy. The customer who order something with something to apply discount promotion. But some customer think after ordering, I do not want to buy it anymore. I guess when people apply discount promotion, they apply it just to be able to buy something cheaper than usual. But after thinking, it is not necessary to buy it then cancel it later. So i assume that the customer who apply discount promotion has more number to cancel order of meals.\n",
    "\n",
    "When I compare with mean and median, there are 3 times gap. So in order to standardized, i use (value - min_value) / (max_value - min_value) to every value be in 0 ~ 1.\n",
    "\n",
    "<br>\n",
    "\n",
    "**4. AVG_MEAN_RATING_SCALE**\n",
    "<br>\n",
    "From last assignment:\n",
    "Ave mean rating is Average rating of meal sets by each customer. First I assumed that the more higher rating, the more revenue. Because if customer put higher rating, it means he or she liked meals and keep buying or try other meals. But actually, checking relation between REVENUE and Ave mean rating, the higher rating, the less revenue. So, I assumed the grading system in this company is different with usual. The less rating, the more satisfaction and buy same one or the other one. It means higher contribution to revenue.\n",
    "\n",
    "In this assignment, i assume that same with previous assignment like if customer apply discount promotion, they grade high grade (0: Bad ~ 10: good). But actually, the relationship between CROSS SELL SUCCESS and AVG MEAN RATING was negative coefficient. So I assume that this company's grade system is (10: Bad ~ 1: good).\n",
    "\n",
    "When I compare with mean and median, there are 1.5 times gap. So in order to standardized, i use (value - min_value) / (max_value - min_value) to every value be in 0 ~ 1.\n",
    "\n",
    "If so, the customer who apply discount promotion more than 1 time, they liked discount promotion and satisfied it and apply discount promotion several time.\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**5. PERSONAL**\n",
    "<br>\n",
    "Personal is the email address that not company's email address but use private email. I assume that the main customer of this services are women who has their own family. If so, they want to minimize the total cost of food. Discount promotion is great opportunity for them. So I assume that personal email people willing to apply discount promotion than others.\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**6. PROFESSIONAL**\n",
    "<br>\n",
    "Professional is the email address that company's email address. If using private email, i assume that PROFESSIONAL do not have much time to cook something because they are busy and their schedule would be changed easily because of work. It will lead cancellation and also they have more conscious about cost effectiveness. So, they willing to apply discount promotion to minimize the total cost and risk of food. So I assume that professional email people also willing to apply discount promotion than others.\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**Machine Learning Model**\n",
    "<br>\n",
    "My best score morel is KNN model. KNN model is that trying to predict the y_variable by looking at K nearest neighbors. This model is really easy to interpret the result of model\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**Interpretation result of confusion matrix**\n",
    "<br>\n",
    "TN: 23\n",
    "<br>\n",
    "=> True Negative. Machine learning model predicted some 23 customers would not apply discount promotion, that 23 customers did not apply discount promotion.\n",
    "<br>\n",
    "<br>\n",
    "FP: 40\n",
    "<br>\n",
    "=> False Positive. Machine learning model predicted some 40 customers would apply discount promotion, that 40 customers did not apply discount promotion.\n",
    "<br>\n",
    "<br>\n",
    "FN: 8\n",
    "<br>\n",
    "=> False Negative. Machine learning model predicted some 8 customers would not apply discount promotion, that 8 customers did apply discount promotion.\n",
    "<br>\n",
    "<br>\n",
    "TP:124\n",
    "<br>\n",
    "=> True Positive. Machine learning model predicted some 124 customers would apply discount promotion, that 124 customers did apply discount promotion.\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**An interpretation of each error from the confusion matrix**\n",
    "<br>\n",
    "In this result, Apprentice chef inc would face the some issue. \n",
    "<br>\n",
    "<br>\n",
    "FP: 40\n",
    "<br>\n",
    "Machine Learning predicted 40 customers would apply discount promotion. But actually, they did not apply discount promotion. In the future, if apprentice chef inc procure materials based on this model, they will prepare the stocks of meal more than actual needs. It gonna face too much stocks and it will be throw out or to avoid waste of meals, apprentice need to do discount more to sell it.\n",
    "\n",
    "<br>\n",
    "FN: 8\n",
    "<br>\n",
    "Machine Learning predicted 8 customers would not apply discount promotion. But actually, they did apply discount promotion. In the future, if apprentice chef inc procure materials based on this model, they will be faced lack of stocks of meal and they will loss opportunity to sell and revenue more.\n",
    "<br>\n",
    "<br>\n",
    "From this result, Apprentice chef inc need to have interested in mitigating the prediction of False positive. Because if Apprentice chef inc miss opportunity to sell, nothing happen. Just 0. No plus and minus in financially. On the other hand, if Apprentice chef inc procure material than actual needs and they could not sell it, they spend waste of money for material that does not make money. And just using money for useless things and increase expenses and pressure to profit.\n",
    "At the same time, when Apprentice chef inc do marketing campaign such as email marketing with discount promotion to specified customers who had been predicted as CROSS SELL SUCCESS, they would send email to customer who have no chance to use that discount promotion. Then they will lose opportunity to sell more and revenue.\n",
    "<br>\n",
    "<br>\n",
    "In conclusion, after this assignment, Apprentice chef inc and I need to tackle to mitigate the false positive more to avoid these situations.\n",
    "\n",
    "\n",
    "<br>\n",
    "\n",
    "**Reflection from this assignment**\n",
    "<br>\n",
    "In this assignment, I could not improve my AUC score from 0.6295 even having 72 variables. I need to learn how to optimize feature engineering and how to checking the which variables are needed to be changed through probability analysis. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26b87b2e",
   "metadata": {},
   "source": [
    "# Checking data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f4f29e8a",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: gender in /Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages (0.0.33)\n",
      "Requirement already satisfied: unidecode in /Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages (from gender) (1.2.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n",
      "Requirement already satisfied: gender_guesser in /Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages (0.4.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>LATE_DELIVERIES</th>\n",
       "      <th>AVG_PREP_VID_TIME</th>\n",
       "      <th>LARGEST_ORDER_SIZE</th>\n",
       "      <th>AVG_MEAN_RATING</th>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "      <td>4920.0</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>137.41</td>\n",
       "      <td>6</td>\n",
       "      <td>2.894737</td>\n",
       "      <td>456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>harlon.greyjoy@visa.com</td>\n",
       "      <td>6150.0</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>120.20</td>\n",
       "      <td>5</td>\n",
       "      <td>2.631579</td>\n",
       "      <td>680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>monster@protonmail.com</td>\n",
       "      <td>3435.0</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>127.00</td>\n",
       "      <td>3</td>\n",
       "      <td>3.684211</td>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>damon.lannister.(lord)@yahoo.com</td>\n",
       "      <td>3330.0</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>129.78</td>\n",
       "      <td>6</td>\n",
       "      <td>3.157895</td>\n",
       "      <td>418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>raynald.westerling@jnj.com</td>\n",
       "      <td>3427.5</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>34.42</td>\n",
       "      <td>3</td>\n",
       "      <td>3.157895</td>\n",
       "      <td>174</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CROSS_SELL_SUCCESS                             EMAIL  REVENUE  \\\n",
       "0                   1       steffon.baratheon@yahoo.com   4920.0   \n",
       "1                   0           harlon.greyjoy@visa.com   6150.0   \n",
       "2                   0            monster@protonmail.com   3435.0   \n",
       "3                   1  damon.lannister.(lord)@yahoo.com   3330.0   \n",
       "4                   1        raynald.westerling@jnj.com   3427.5   \n",
       "\n",
       "   TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "0                  493                   9                            1   \n",
       "1                  361                   9                            1   \n",
       "2                  278                   6                            1   \n",
       "3                  269                   8                            1   \n",
       "4                  276                   7                            1   \n",
       "\n",
       "   PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "0                         10                    265.6   \n",
       "1                          6                    247.0   \n",
       "2                          4                    164.4   \n",
       "3                          2                    176.0   \n",
       "4                         10                    164.6   \n",
       "\n",
       "   CANCELLATIONS_AFTER_NOON  PC_LOGINS  MOBILE_LOGINS  WEEKLY_PLAN  \\\n",
       "0                         5          5              2            0   \n",
       "1                         2          5              1            0   \n",
       "2                         0          6              1            5   \n",
       "3                         5          5              2            0   \n",
       "4                         0          6              1           14   \n",
       "\n",
       "   LATE_DELIVERIES   AVG_PREP_VID_TIME  LARGEST_ORDER_SIZE  AVG_MEAN_RATING  \\\n",
       "0                 0             137.41                   6         2.894737   \n",
       "1                 0             120.20                   5         2.631579   \n",
       "2                 0             127.00                   3         3.684211   \n",
       "3                 0             129.78                   6         3.157895   \n",
       "4                 0              34.42                   3         3.157895   \n",
       "\n",
       "   TOTAL_PHOTOS_VIEWED  \n",
       "0                  456  \n",
       "1                  680  \n",
       "2                  145  \n",
       "3                  418  \n",
       "4                  174  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# installing gender\n",
    "%pip install gender\n",
    "\n",
    "# installing gender_guesser\n",
    "%pip install gender_guesser\n",
    "\n",
    "# import library\n",
    "import gender_guesser.detector as gender             # geder tetector\n",
    "import pandas            as pd                       # data science essentials\n",
    "import numpy             as np                       # data science essentials\n",
    "import matplotlib.pyplot as plt                      # data visualization\n",
    "import seaborn           as sns                      # enhanced data viz\n",
    "from sklearn.model_selection import train_test_split # train-test split\n",
    "from sklearn.linear_model import LogisticRegression  # logistic regression\n",
    "import statsmodels.formula.api as smf                # logistic regression\n",
    "from sklearn.metrics import confusion_matrix         # confusion matrix\n",
    "from sklearn.metrics import roc_auc_score            # auc score\n",
    "from sklearn.neighbors import KNeighborsClassifier   # KNN for classification\n",
    "from sklearn.neighbors import KNeighborsRegressor    # KNN for regression\n",
    "from sklearn.preprocessing import StandardScaler     # standard scaler\n",
    "from sklearn.tree import DecisionTreeClassifier      # classification trees\n",
    "from sklearn.tree import plot_tree                   # tree plots\n",
    "from sklearn.ensemble import RandomForestClassifier  # random forest\n",
    "from sklearn.model_selection import RandomizedSearchCV # hyperparameter tuning\n",
    "\n",
    "\n",
    "# setting the dataset\n",
    "file = './__datasets/Cross_Sell_Success_Dataset_2023.xlsx'\n",
    "\n",
    "# storing dasasets\n",
    "apprentice = pd.read_excel(io = file)\n",
    "\n",
    "# showing first 5 lows\n",
    "apprentice.head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f9d55616",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# user-defined functions\n",
    "\n",
    "#########################\n",
    "# mv_flagger\n",
    "#########################\n",
    "def mv_flagger(df):\n",
    "    \"\"\"\n",
    "Flags all columns that have missing values with 'm-COLUMN_NAME'.\n",
    "\n",
    "PARAMETERS\n",
    "----------\n",
    "df : DataFrame to flag missing values\n",
    "\n",
    "\n",
    "RETURNS\n",
    "-------\n",
    "DataFrame with missing value flags.\"\"\"\n",
    "\n",
    "\n",
    "    for col in df:\n",
    "\n",
    "        if df[col].isnull().astype(int).sum() > 0:\n",
    "            df['m_'+col] = df[col].isnull().astype(int)\n",
    "            \n",
    "    return df\n",
    "\n",
    "\n",
    "\n",
    "#########################\n",
    "# text_split_feature\n",
    "#########################\n",
    "def text_split_feature(col, df, sep=' ', new_col_name='number_of_names'):\n",
    "    \"\"\"\n",
    "Splits values in a string Series (as part of a DataFrame) and sums the number\n",
    "of resulting items. Automatically appends summed column to original DataFrame.\n",
    "\n",
    "PARAMETERS\n",
    "----------\n",
    "col          : column to split\n",
    "df           : DataFrame where column is located\n",
    "sep          : string sequence to split by, default ' '\n",
    "new_col_name : name of new column after summing split, default\n",
    "               'number_of_names'\n",
    "\"\"\"\n",
    "    \n",
    "    df[new_col_name] = 0\n",
    "    \n",
    "    \n",
    "    for index, val in df.iterrows():\n",
    "        df.loc[index, new_col_name] = len(df.loc[index, col].split(sep = ' '))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0859c5a5",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Data Type</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>REVENUE</td>\n",
       "      <td>Float</td>\n",
       "      <td>Total revenue generated from each customer. No...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CROSS_SELL_SUCCESS</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Success of the cross-sell promotion (1 = yes, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NAME</td>\n",
       "      <td>string</td>\n",
       "      <td>Full name of customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EMAIL</td>\n",
       "      <td>string</td>\n",
       "      <td>Email of customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FIRST_NAME</td>\n",
       "      <td>string</td>\n",
       "      <td>First name of customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>FAMILY_NAME</td>\n",
       "      <td>string</td>\n",
       "      <td>Last name of customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>TOTAL_MEALS_ORDERED</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total number of meals ordered by each customer...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>UNIQUE_MEALS_PURCH</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Number of unique meal sets ordered by each cus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>CONTACTS_W_CUSTOMER_SERVICE</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Number of times each customer made contact wit...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PRODUCT_CATEGORIES_VIEWED</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total number of meal categories viewed (vegan,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>AVG_TIME_PER_SITE_VISIT</td>\n",
       "      <td>Float</td>\n",
       "      <td>Average time each customer spent per website o...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>CANCELLATIONS_AFTER_NOON</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Number of meals canceled AFTER 12:00 PM (noon)...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>PC_LOGINS</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total number of logins to the website</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>MOBILE_LOGINS</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total number of logins to the mobile platform</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>WEEKLY_PLAN</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Number of weeks customer subscribed to the wee...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>LATE_DELIVERIES</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total meal deliveries that arrived late</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>AVG_PREP_VID_TIME</td>\n",
       "      <td>Float</td>\n",
       "      <td>Average time in seconds meal prep instruction ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>AVERAGE_MEAL_RATING</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Average rating of meal sets by each customer. ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>LARGEST_ORDER_SIZE</td>\n",
       "      <td>Integer</td>\n",
       "      <td>MISLABELED: Despite the fact that this feature...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>TOTAL_PHOTOS_VIEWED</td>\n",
       "      <td>Integer</td>\n",
       "      <td>Total number of clicks on photos across all we...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Feature Data Type  \\\n",
       "0                       REVENUE     Float   \n",
       "1            CROSS_SELL_SUCCESS   Integer   \n",
       "2                          NAME    string   \n",
       "3                         EMAIL    string   \n",
       "4                    FIRST_NAME    string   \n",
       "5                   FAMILY_NAME    string   \n",
       "6           TOTAL_MEALS_ORDERED   Integer   \n",
       "7            UNIQUE_MEALS_PURCH   Integer   \n",
       "8   CONTACTS_W_CUSTOMER_SERVICE   Integer   \n",
       "9     PRODUCT_CATEGORIES_VIEWED   Integer   \n",
       "10      AVG_TIME_PER_SITE_VISIT     Float   \n",
       "11     CANCELLATIONS_AFTER_NOON   Integer   \n",
       "12                    PC_LOGINS   Integer   \n",
       "13                MOBILE_LOGINS   Integer   \n",
       "14                  WEEKLY_PLAN   Integer   \n",
       "15              LATE_DELIVERIES   Integer   \n",
       "16            AVG_PREP_VID_TIME     Float   \n",
       "17          AVERAGE_MEAL_RATING   Integer   \n",
       "18           LARGEST_ORDER_SIZE   Integer   \n",
       "19          TOTAL_PHOTOS_VIEWED   Integer   \n",
       "\n",
       "                                          Description  \n",
       "0   Total revenue generated from each customer. No...  \n",
       "1   Success of the cross-sell promotion (1 = yes, ...  \n",
       "2                               Full name of customer  \n",
       "3                                   Email of customer  \n",
       "4                              First name of customer  \n",
       "5                               Last name of customer  \n",
       "6   Total number of meals ordered by each customer...  \n",
       "7   Number of unique meal sets ordered by each cus...  \n",
       "8   Number of times each customer made contact wit...  \n",
       "9   Total number of meal categories viewed (vegan,...  \n",
       "10  Average time each customer spent per website o...  \n",
       "11  Number of meals canceled AFTER 12:00 PM (noon)...  \n",
       "12              Total number of logins to the website  \n",
       "13      Total number of logins to the mobile platform  \n",
       "14  Number of weeks customer subscribed to the wee...  \n",
       "15            Total meal deliveries that arrived late  \n",
       "16  Average time in seconds meal prep instruction ...  \n",
       "17  Average rating of meal sets by each customer. ...  \n",
       "18  MISLABELED: Despite the fact that this feature...  \n",
       "19  Total number of clicks on photos across all we...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting the dictionary\n",
    "document = './__documents/Apprentice_Chef_Data_Dictionary.xlsx'\n",
    "\n",
    "# storing dasasets\n",
    "apprentice_description = pd.read_excel(io = document)\n",
    "\n",
    "# showing data\n",
    "apprentice_description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d34dcbf3",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>LATE_DELIVERIES</th>\n",
       "      <th>AVG_PREP_VID_TIME</th>\n",
       "      <th>LARGEST_ORDER_SIZE</th>\n",
       "      <th>AVG_MEAN_RATING</th>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "      <td>1946.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.678828</td>\n",
       "      <td>2107.292652</td>\n",
       "      <td>74.634121</td>\n",
       "      <td>6.983556</td>\n",
       "      <td>4.904933</td>\n",
       "      <td>5.383864</td>\n",
       "      <td>150.556578</td>\n",
       "      <td>1.570915</td>\n",
       "      <td>5.515930</td>\n",
       "      <td>1.476362</td>\n",
       "      <td>11.329908</td>\n",
       "      <td>2.053443</td>\n",
       "      <td>99.604651</td>\n",
       "      <td>4.437307</td>\n",
       "      <td>3.554795</td>\n",
       "      <td>113.151593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.467047</td>\n",
       "      <td>1138.290709</td>\n",
       "      <td>55.309782</td>\n",
       "      <td>2.281193</td>\n",
       "      <td>2.502175</td>\n",
       "      <td>3.044001</td>\n",
       "      <td>49.447180</td>\n",
       "      <td>1.611130</td>\n",
       "      <td>0.580757</td>\n",
       "      <td>0.527600</td>\n",
       "      <td>13.573303</td>\n",
       "      <td>3.788933</td>\n",
       "      <td>62.341756</td>\n",
       "      <td>1.549666</td>\n",
       "      <td>0.614178</td>\n",
       "      <td>177.152284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>131.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>33.400000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.330000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.315789</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1350.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>114.400000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.157895</td>\n",
       "      <td>10.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1740.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>145.600000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>94.160000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.421053</td>\n",
       "      <td>17.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2670.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>173.775000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>117.287500</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.947368</td>\n",
       "      <td>174.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>8793.750000</td>\n",
       "      <td>493.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>564.200000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>1645.600000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1600.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CROSS_SELL_SUCCESS      REVENUE  TOTAL_MEALS_ORDERED  \\\n",
       "count         1946.000000  1946.000000          1946.000000   \n",
       "mean             0.678828  2107.292652            74.634121   \n",
       "std              0.467047  1138.290709            55.309782   \n",
       "min              0.000000   131.000000            11.000000   \n",
       "25%              0.000000  1350.000000            39.000000   \n",
       "50%              1.000000  1740.000000            60.000000   \n",
       "75%              1.000000  2670.000000            95.000000   \n",
       "max              1.000000  8793.750000           493.000000   \n",
       "\n",
       "       UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "count         1946.000000                  1946.000000   \n",
       "mean             6.983556                     4.904933   \n",
       "std              2.281193                     2.502175   \n",
       "min              1.000000                     1.000000   \n",
       "25%              5.000000                     3.000000   \n",
       "50%              7.000000                     5.000000   \n",
       "75%              8.000000                     7.000000   \n",
       "max             18.000000                    19.000000   \n",
       "\n",
       "       PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "count                1946.000000              1946.000000   \n",
       "mean                    5.383864               150.556578   \n",
       "std                     3.044001                49.447180   \n",
       "min                     1.000000                33.400000   \n",
       "25%                     3.000000               114.400000   \n",
       "50%                     5.000000               145.600000   \n",
       "75%                     8.000000               173.775000   \n",
       "max                    10.000000               564.200000   \n",
       "\n",
       "       CANCELLATIONS_AFTER_NOON    PC_LOGINS  MOBILE_LOGINS  WEEKLY_PLAN  \\\n",
       "count               1946.000000  1946.000000    1946.000000  1946.000000   \n",
       "mean                   1.570915     5.515930       1.476362    11.329908   \n",
       "std                    1.611130     0.580757       0.527600    13.573303   \n",
       "min                    0.000000     4.000000       0.000000     0.000000   \n",
       "25%                    0.000000     5.000000       1.000000     1.000000   \n",
       "50%                    1.000000     6.000000       1.000000     7.000000   \n",
       "75%                    2.000000     6.000000       2.000000    13.000000   \n",
       "max                   13.000000     7.000000       3.000000    52.000000   \n",
       "\n",
       "       LATE_DELIVERIES   AVG_PREP_VID_TIME  LARGEST_ORDER_SIZE  \\\n",
       "count       1946.000000        1946.000000         1946.000000   \n",
       "mean           2.053443          99.604651            4.437307   \n",
       "std            3.788933          62.341756            1.549666   \n",
       "min            0.000000          10.330000            1.000000   \n",
       "25%            0.000000          72.000000            3.000000   \n",
       "50%            0.000000          94.160000            4.000000   \n",
       "75%            3.000000         117.287500            5.000000   \n",
       "max           18.000000        1645.600000           11.000000   \n",
       "\n",
       "       AVG_MEAN_RATING  TOTAL_PHOTOS_VIEWED  \n",
       "count      1946.000000          1946.000000  \n",
       "mean          3.554795           113.151593  \n",
       "std           0.614178           177.152284  \n",
       "min           1.315789             1.000000  \n",
       "25%           3.157895            10.000000  \n",
       "50%           3.421053            17.000000  \n",
       "75%           3.947368           174.000000  \n",
       "max           5.000000          1600.000000  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking number data\n",
    "apprentice.describe(include = 'number')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "76ebf8f2",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EMAIL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>1946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              EMAIL\n",
       "count                          1946\n",
       "unique                         1946\n",
       "top     steffon.baratheon@yahoo.com\n",
       "freq                              1"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking object data\n",
    "apprentice.describe(include = 'object')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eae57646",
   "metadata": {},
   "source": [
    "**categorize each columns by CONTINUOUS, INTERVAL/COUNT and CATEGORICAL/OTHER**\n",
    "\n",
    "**CONTINUOUS**\n",
    "<br>\n",
    "<br>\n",
    "- REVENUE\n",
    "<br>\n",
    "- AVG_TIME_PER_SITE_VISIT\n",
    "<br>\n",
    "- AVG_PREP_VID_TIME\n",
    "<br>\n",
    "<br>\n",
    "\n",
    "**INTERVAL/COUNT**\n",
    "<br>\n",
    "<br>\n",
    "- TOTAL_MEALS_ORDERED\n",
    "<br>\n",
    "- UNIQUE_MEALS_PURCH\n",
    "<br>\n",
    "- CONTACTS_W_CUSTOMER_SERVICE\n",
    "<br>\n",
    "- PRODUCT_CATEGORIES_VIEWED\n",
    "<br>\n",
    "- CANCELLATIONS_AFTER_NOON\n",
    "<br>\n",
    "- PC_LOGINS\n",
    "<br>\n",
    "- MOBILE_LOGINS\n",
    "<br>\n",
    "- WEEKLY_PLAN\n",
    "<br>\n",
    "- LATE_DELIVERIES\n",
    "<br>\n",
    "- LARGEST_ORDER_SIZE\n",
    "<br>\n",
    "- TOTAL_PHOTOS_VIEWED\n",
    "<br>\n",
    "- AVG_MEAN_RATING\n",
    "<br>\n",
    "<br>\n",
    "\n",
    "**CATEGORICAL/OTHER**\n",
    "<br>\n",
    "<br>\n",
    "- CROSS_SELL_SUCCESS (y_variable)\n",
    "<br>\n",
    "- EMAIL\n",
    "<br>\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dfa8d728",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['CROSS_SELL_SUCCESS', 'EMAIL', 'REVENUE', 'TOTAL_MEALS_ORDERED',\n",
       "       'UNIQUE_MEALS_PURCH', 'CONTACTS_W_CUSTOMER_SERVICE',\n",
       "       'PRODUCT_CATEGORIES_VIEWED', 'AVG_TIME_PER_SITE_VISIT',\n",
       "       'CANCELLATIONS_AFTER_NOON', 'PC_LOGINS', 'MOBILE_LOGINS', 'WEEKLY_PLAN',\n",
       "       'LATE_DELIVERIES ', 'AVG_PREP_VID_TIME', 'LARGEST_ORDER_SIZE',\n",
       "       'AVG_MEAN_RATING', 'TOTAL_PHOTOS_VIEWED'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# showing colums what i have\n",
    "apprentice.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "484615ed",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# renaming columns\n",
    "apprentice.rename(columns = {'LATE_DELIVERIES ':'LATE_DELIVERIES'}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "80796652",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CROSS_SELL_SUCCESS             0\n",
       "EMAIL                          0\n",
       "REVENUE                        0\n",
       "TOTAL_MEALS_ORDERED            0\n",
       "UNIQUE_MEALS_PURCH             0\n",
       "CONTACTS_W_CUSTOMER_SERVICE    0\n",
       "PRODUCT_CATEGORIES_VIEWED      0\n",
       "AVG_TIME_PER_SITE_VISIT        0\n",
       "CANCELLATIONS_AFTER_NOON       0\n",
       "PC_LOGINS                      0\n",
       "MOBILE_LOGINS                  0\n",
       "WEEKLY_PLAN                    0\n",
       "LATE_DELIVERIES                0\n",
       "AVG_PREP_VID_TIME              0\n",
       "LARGEST_ORDER_SIZE             0\n",
       "AVG_MEAN_RATING                0\n",
       "TOTAL_PHOTOS_VIEWED            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking null value\n",
    "apprentice.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "05fee399",
   "metadata": {},
   "source": [
    "# Feature Engneering"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bb1c8f5",
   "metadata": {},
   "source": [
    "## CONTINUOUS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cddee3a5",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   2107.29\n",
      "Median: 1740.0\n",
      "Skew:   1.63\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'REVENUE',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of REVENUE\")\n",
    "plt.xlabel(xlabel = \"REVENUE\")# avoiding using dataset labels\n",
    "plt.ylabel(ylabel = \"Count\")\n",
    "\n",
    "# checking average, median skewness\n",
    "print(f\"Mean:   {round(apprentice['REVENUE'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['REVENUE'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['REVENUE'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8de86580",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   7.53\n",
      "Median: 7.46\n",
      "Skew:   0.18\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# doing log\n",
    "apprentice['log_REVENUE'] = np.log(apprentice['REVENUE'])\n",
    "\n",
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'log_REVENUE',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of log_REVENUE\")\n",
    "plt.xlabel(xlabel = \"log_REVENUE\")# avoiding using dataset labels\n",
    "plt.ylabel(ylabel = \"Count\")\n",
    "\n",
    "# checking average, median skewness\n",
    "print(f\"Mean:   {round(apprentice['log_REVENUE'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['log_REVENUE'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['log_REVENUE'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "60552178",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   150.56\n",
      "Median: 145.6\n",
      "Skew:   1.2\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'AVG_TIME_PER_SITE_VISIT',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of AVG_TIME_PER_SITE_VISIT\")\n",
    "plt.xlabel(xlabel = \"AVG_TIME_PER_SITE_VISIT\")# avoiding using dataset labels\n",
    "plt.ylabel(ylabel = \"Count\")\n",
    "\n",
    "# checking average, median skewness\n",
    "print(f\"Mean:   {round(apprentice['AVG_TIME_PER_SITE_VISIT'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['AVG_TIME_PER_SITE_VISIT'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['AVG_TIME_PER_SITE_VISIT'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f095fb83",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   4.96\n",
      "Median: 4.98\n",
      "Skew:   -0.06\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# doing log\n",
    "apprentice['log_AVG_TIME_PER_SITE_VISIT'] = np.log(apprentice['AVG_TIME_PER_SITE_VISIT'])\n",
    "\n",
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'log_AVG_TIME_PER_SITE_VISIT',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of log_AVG_TIME_PER_SITE_VISIT\")\n",
    "plt.xlabel(xlabel = \"log_AVG_TIME_PER_SITE_VISIT\")# avoiding using dataset labels\n",
    "plt.ylabel(ylabel = \"Count\")\n",
    "\n",
    "# checking average, median skewness\n",
    "print(f\"Mean:   {round(apprentice['log_AVG_TIME_PER_SITE_VISIT'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['log_AVG_TIME_PER_SITE_VISIT'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['log_AVG_TIME_PER_SITE_VISIT'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "95cb3ee3",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   99.6\n",
      "Median: 94.16\n",
      "Skew:   9.64\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'AVG_PREP_VID_TIME',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of AVG_PREP_VID_TIME\")\n",
    "print(f\"Mean:   {round(apprentice['AVG_PREP_VID_TIME'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['AVG_PREP_VID_TIME'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['AVG_PREP_VID_TIME'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a7e2dd02",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean:   4.48\n",
      "Median: 4.54\n",
      "Skew:   -0.49\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# doing log\n",
    "apprentice['log_AVG_PREP_VID_TIME'] = np.log(apprentice['AVG_PREP_VID_TIME'])\n",
    "\n",
    "# developing a histogram using HISTPLOT\n",
    "sns.histplot(data  = apprentice,\n",
    "         x     = 'log_AVG_PREP_VID_TIME',\n",
    "        kde    = True)\n",
    "\n",
    "# putting titles and axis labels\n",
    "plt.title(label   = \"Distribution of'log_AVG_PREP_VID_TIME\")\n",
    "print(f\"Mean:   {round(apprentice['log_AVG_PREP_VID_TIME'].mean(), 2)}\")\n",
    "print(f\"Median: {round(apprentice['log_AVG_PREP_VID_TIME'].median(), 2)}\")\n",
    "print(f\"Skew:   {round(apprentice['log_AVG_PREP_VID_TIME'].skew(), 2)}\") # If positive, mean right skew. if negative, mean left skew\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show(block = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "86ff2d64",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    1101\n",
      "3     353\n",
      "4     207\n",
      "5     146\n",
      "1     139\n",
      "Name: REVENUE_LEVEL, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# seeting new columns\n",
    "# (1: <= 1000, 2: <= 2000, 3: <= 3000, 4: <= 4000, 5: > 4000)\n",
    "apprentice['REVENUE_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 1000, put 1\n",
    "    if apprentice.loc[index, 'REVENUE'] <= 1000:\n",
    "        apprentice.loc[index, 'REVENUE_LEVEL'] = 1\n",
    "    \n",
    "    # if less than equal to 2000, put 2\n",
    "    elif apprentice.loc[index, 'REVENUE'] <= 2000:\n",
    "        apprentice.loc[index, 'REVENUE_LEVEL'] = 2\n",
    "    \n",
    "    # if less than equal to 3000, put 3\n",
    "    elif apprentice.loc[index, 'REVENUE'] <= 3000:\n",
    "        apprentice.loc[index, 'REVENUE_LEVEL'] = 3\n",
    "    \n",
    "    # if less than equal to 4000, put 4\n",
    "    elif apprentice.loc[index, 'REVENUE'] <= 4000:\n",
    "        apprentice.loc[index, 'REVENUE_LEVEL'] = 4\n",
    "    \n",
    "    # if more than 5000, put 5\n",
    "    else:\n",
    "        apprentice.loc[index, 'REVENUE_LEVEL'] = 5\n",
    "        \n",
    "# counting each values amount\n",
    "print(apprentice['REVENUE_LEVEL'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8f38eba5",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.552827\n",
       "1    0.694814\n",
       "2    0.381403\n",
       "3    0.369282\n",
       "4    0.380537\n",
       "Name: REVENUE_SCALE, dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['REVENUE_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'REVENUE_SCALE'] = (apprentice.loc[index, 'REVENUE'] - apprentice['REVENUE'].min()) / (apprentice['REVENUE'].max()- apprentice['REVENUE'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['REVENUE_SCALE'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1ef6fa87",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    974\n",
      "1    972\n",
      "Name: REVENUE_BINARY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['REVENUE_BINARY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 1740, put 0\n",
    "    if apprentice.loc[index, 'REVENUE'] <= 1740:\n",
    "        apprentice.loc[index, 'REVENUE_BINARY'] = 0\n",
    "    \n",
    "    # if more than 1740, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'REVENUE_BINARY'] = 1\n",
    "    \n",
    "# counting each values amount\n",
    "print(apprentice['REVENUE_BINARY'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ab14ced8",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    775\n",
      "3    620\n",
      "1    279\n",
      "4    192\n",
      "5     65\n",
      "6     15\n",
      "Name: AVG_TIME_PER_SITE_VISIT_LEVEL, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# seeting new columns\n",
    "# (1: <= 100, 2: <= 150, 3: <= 200, 4: <= 250, 5: <= 300, 6: > 300)\n",
    "apprentice['AVG_TIME_PER_SITE_VISIT_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 100, put 1\n",
    "    if apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 100:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 1\n",
    "    \n",
    "    # if less than equal to 150, put 2\n",
    "    elif apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 150:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 2\n",
    "    \n",
    "    # if less than equal to 200, put 3\n",
    "    elif apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 200:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 3\n",
    "    \n",
    "    # if less than equal to 250, put 4\n",
    "    elif apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 250:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 4\n",
    "    \n",
    "      # if less than equal to 300, put 5\n",
    "    elif apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 300:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 5\n",
    "    \n",
    "    # if more than 300, put 6\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_LEVEL'] = 6\n",
    "        \n",
    "# counting each values amount\n",
    "print(apprentice['AVG_TIME_PER_SITE_VISIT_LEVEL'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3db2da5f",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.437453\n",
       "1    0.402411\n",
       "2    0.246797\n",
       "3    0.268651\n",
       "4    0.247174\n",
       "Name: AVG_TIME_PER_SITE_VISIT_SCALE, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_TIME_PER_SITE_VISIT_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_SCALE'] = (apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] - apprentice['AVG_TIME_PER_SITE_VISIT'].min()) / (apprentice['AVG_TIME_PER_SITE_VISIT'].max()- apprentice['AVG_TIME_PER_SITE_VISIT'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['AVG_TIME_PER_SITE_VISIT_SCALE'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2b0de9c4",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    1667\n",
      "0     279\n",
      "Name: AVG_TIME_PER_SITE_VISIT_BINARY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_TIME_PER_SITE_VISIT_BINARY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 100, put 0\n",
    "    if apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT'] <= 100:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_BINARY'] = 0\n",
    "    \n",
    "    # if more than 100,  put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_TIME_PER_SITE_VISIT_BINARY'] = 1\n",
    "    \n",
    "# counting each values amount\n",
    "print(apprentice['AVG_TIME_PER_SITE_VISIT_BINARY'].value_counts())\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b5d43915",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    852\n",
      "3    652\n",
      "1    262\n",
      "4    113\n",
      "5     67\n",
      "Name: AVG_PREP_VID_TIME_LEVEL, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# seeting new columns\n",
    "# (1: <= 50, 2: <= 100, 3: <= 150, 4: <= 200, 5: > 200)\n",
    "apprentice['AVG_PREP_VID_TIME_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 50, put 1\n",
    "    if apprentice.loc[index, 'AVG_PREP_VID_TIME'] <= 50:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_LEVEL'] = 1\n",
    "    \n",
    "    # if less than equal to 100, put 2\n",
    "    elif apprentice.loc[index, 'AVG_PREP_VID_TIME'] <= 100:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_LEVEL'] = 2\n",
    "    \n",
    "    # if less than equal to 150, put 3\n",
    "    elif apprentice.loc[index, 'AVG_PREP_VID_TIME'] <= 150:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_LEVEL'] = 3\n",
    "    \n",
    "    # if less than equal to 200, put 4\n",
    "    elif apprentice.loc[index, 'AVG_PREP_VID_TIME'] <= 200:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_LEVEL'] = 4\n",
    "    \n",
    "    # if more than 200, put 5\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_LEVEL'] = 5\n",
    "        \n",
    "# counting each values amount\n",
    "print(apprentice['AVG_PREP_VID_TIME_LEVEL'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a52a3f77",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.077712\n",
       "1    0.067188\n",
       "2    0.071346\n",
       "3    0.073046\n",
       "4    0.014732\n",
       "Name: AVG_PREP_VID_TIME_SCALE, dtype: float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_PREP_VID_TIME_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'AVG_PREP_VID_TIME_SCALE'] = (apprentice.loc[index, 'AVG_PREP_VID_TIME'] - apprentice['AVG_PREP_VID_TIME'].min()) / (apprentice['AVG_PREP_VID_TIME'].max()- apprentice['AVG_PREP_VID_TIME'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['AVG_PREP_VID_TIME_SCALE'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "dbe2651d",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    1684\n",
      "0     262\n",
      "Name: AVG_PREP_VID_TIME_BINARY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_PREP_VID_TIME_BINARY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 50, put 0\n",
    "    if apprentice.loc[index, 'AVG_PREP_VID_TIME'] <= 50:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_BINARY'] = 0\n",
    "    \n",
    "    # if more than 50 put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_PREP_VID_TIME_BINARY'] = 1\n",
    "    \n",
    "# counting each values amount\n",
    "print(apprentice['AVG_PREP_VID_TIME_BINARY'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f959747b",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CROSS_SELL_SUCCESS                1.00\n",
       "AVG_TIME_PER_SITE_VISIT_LEVEL     0.05\n",
       "AVG_TIME_PER_SITE_VISIT_BINARY    0.04\n",
       "AVG_TIME_PER_SITE_VISIT           0.03\n",
       "log_AVG_TIME_PER_SITE_VISIT       0.03\n",
       "AVG_TIME_PER_SITE_VISIT_SCALE     0.03\n",
       "log_AVG_PREP_VID_TIME             0.02\n",
       "AVG_PREP_VID_TIME_LEVEL           0.02\n",
       "AVG_PREP_VID_TIME_BINARY          0.02\n",
       "log_REVENUE                       0.01\n",
       "REVENUE_LEVEL                     0.01\n",
       "REVENUE_BINARY                    0.01\n",
       "AVG_PREP_VID_TIME                 0.01\n",
       "AVG_PREP_VID_TIME_SCALE           0.01\n",
       "REVENUE                           0.00\n",
       "REVENUE_SCALE                     0.00\n",
       "Name: CROSS_SELL_SUCCESS, dtype: float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# storing continuos with y_variable\n",
    "corss_sell_continuous = ['CROSS_SELL_SUCCESS','REVENUE','log_REVENUE','REVENUE_LEVEL', 'REVENUE_SCALE','REVENUE_BINARY',\n",
    "                         'AVG_TIME_PER_SITE_VISIT','log_AVG_TIME_PER_SITE_VISIT','AVG_TIME_PER_SITE_VISIT_LEVEL', \n",
    "                         'AVG_TIME_PER_SITE_VISIT_SCALE','AVG_TIME_PER_SITE_VISIT_BINARY','AVG_PREP_VID_TIME','log_AVG_PREP_VID_TIME',\n",
    "                         'AVG_PREP_VID_TIME_LEVEL','AVG_PREP_VID_TIME_SCALE','AVG_PREP_VID_TIME_BINARY']\n",
    "\n",
    "# storing continuos with y_variable\n",
    "corss_sell_continuous_corr = apprentice[corss_sell_continuous].corr(method = 'pearson')\n",
    "\n",
    "# creating heatmap\n",
    "sns.heatmap(data = corss_sell_continuous_corr,# Data \n",
    "            cmap       ='coolwarm'           , # Color\n",
    "            square     = True                , # Tightening the layout\n",
    "            annot      = True                , # Should there be numbers in the heatmap\n",
    "            linecolor  = 'black'              , # Lines between boxes\n",
    "            linewidths = 0.5          )         # How thick should the lines be?\n",
    "\n",
    "# putting title\n",
    "plt.title(label = 'Corration heatmaps of CROSS_SELL_SUCCESS')\n",
    "\n",
    "# filtering the results to only show correlations with CROSS_SELL_SUCCESS\n",
    "corss_sell_continuous_corr.loc[ : , 'CROSS_SELL_SUCCESS'].round(decimals = 2).sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b9b62ab",
   "metadata": {},
   "source": [
    "##  INTERVAL/COUNT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "078e5054",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     9.979716\n",
       "1    17.036011\n",
       "2    12.356115\n",
       "3    12.379182\n",
       "4    12.418478\n",
       "Name: REVENUE_PER_ORDER, dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['REVENUE_PER_ORDER'] = apprentice['REVENUE'] / apprentice['TOTAL_MEALS_ORDERED']\n",
    "\n",
    "# showing result of first 5 wors\n",
    "apprentice['REVENUE_PER_ORDER'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9458a621",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    54.777778\n",
       "1    40.111111\n",
       "2    46.333333\n",
       "3    33.625000\n",
       "4    39.428571\n",
       "Name: ORDER_PER_CATEGORY, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['ORDER_PER_CATEGORY'] = apprentice['TOTAL_MEALS_ORDERED'] / apprentice['UNIQUE_MEALS_PURCH']\n",
    "\n",
    "# showing result of first 5 rows\n",
    "apprentice['ORDER_PER_CATEGORY'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "866ff3b6",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    7\n",
       "1    6\n",
       "2    7\n",
       "3    7\n",
       "4    7\n",
       "Name: TOTAL_LOGINS, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['TOTAL_LOGINS'] = apprentice['PC_LOGINS'] + apprentice['MOBILE_LOGINS']\n",
    "\n",
    "# showing result of first 5 rows\n",
    "apprentice['TOTAL_LOGINS'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "e3994ae9",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    4927.0\n",
       "1    6156.0\n",
       "2    3442.0\n",
       "3    3337.0\n",
       "4    3434.5\n",
       "Name: REVENUE_PER_LOGIN, dtype: float64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['REVENUE_PER_LOGIN'] = apprentice['REVENUE'] + apprentice['TOTAL_LOGINS']\n",
    "\n",
    "# showing result of first 5 rows\n",
    "apprentice['REVENUE_PER_LOGIN'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "973015b1",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    466\n",
       "1    686\n",
       "2    149\n",
       "3    420\n",
       "4    184\n",
       "Name: TOTAL_VIEWED, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['TOTAL_VIEWED'] = apprentice['PRODUCT_CATEGORIES_VIEWED'] + apprentice['TOTAL_PHOTOS_VIEWED']\n",
    "\n",
    "# showing result of first 5 rows\n",
    "apprentice['TOTAL_VIEWED'].head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "36740c8c",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    508\n",
      "3    474\n",
      "5    431\n",
      "6    360\n",
      "1    173\n",
      "Name: HAS_CONTACTS, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_CONTACTS'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if lesst than equal to 1, put 1\n",
    "    if apprentice.loc[index, 'CONTACTS_W_CUSTOMER_SERVICE'] <= 1:\n",
    "        apprentice.loc[index, 'HAS_CONTACTS'] = 1\n",
    "    \n",
    "    # if less than equal to 3, put 2\n",
    "    elif apprentice.loc[index, 'CONTACTS_W_CUSTOMER_SERVICE'] <= 3:\n",
    "        apprentice.loc[index, 'HAS_CONTACTS'] = 2\n",
    "\n",
    "    # if less than equal to 5, put 3\n",
    "    elif apprentice.loc[index, 'CONTACTS_W_CUSTOMER_SERVICE'] <= 5:\n",
    "        apprentice.loc[index, 'HAS_CONTACTS'] = 3\n",
    "    \n",
    "    # if less than equal to 7, put 5\n",
    "    elif apprentice.loc[index, 'CONTACTS_W_CUSTOMER_SERVICE'] <= 7:\n",
    "        apprentice.loc[index, 'HAS_CONTACTS'] = 5\n",
    "    \n",
    "    # if more than 7, put 6\n",
    "    else:\n",
    "        apprentice.loc[index, 'HAS_CONTACTS'] = 6\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['HAS_CONTACTS'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4348ee54",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    493.0\n",
       "1    361.0\n",
       "2    278.0\n",
       "3    269.0\n",
       "4    276.0\n",
       "Name: CONTACT_ORDER_RATIO, dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['CONTACT_ORDER_RATIO'] = apprentice['TOTAL_MEALS_ORDERED'] / apprentice['CONTACTS_W_CUSTOMER_SERVICE']\n",
    "\n",
    "# showing result of first 5 rows\n",
    "apprentice['CONTACT_ORDER_RATIO'].head(n = 5)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "45c680af",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    1478\n",
      "0     468\n",
      "Name: HAS_WEEKLY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_WEEKLY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if 0, put 0\n",
    "    if apprentice.loc[index, 'WEEKLY_PLAN'] == 0:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY'] = 0\n",
    "    \n",
    "    # if more than 0, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY'] = 1\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['HAS_WEEKLY'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "7f8cb709",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    546\n",
      "4    486\n",
      "3    472\n",
      "2    442\n",
      "Name: HAS_WEEKLY_SCALE, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_WEEKLY_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 1, put 1\n",
    "    if apprentice.loc[index, 'WEEKLY_PLAN'] <= 1:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY_SCALE'] = 1\n",
    "\n",
    "    # if less than equal tp 7, put 2\n",
    "    elif apprentice.loc[index, 'WEEKLY_PLAN'] <= 7:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY_SCALE'] = 2\n",
    "    \n",
    "    # if less than equal to 13, put 3\n",
    "    elif apprentice.loc[index, 'WEEKLY_PLAN'] <= 13:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY_SCALE'] = 3\n",
    "    \n",
    "    # if more than equal to 13, put 4\n",
    "    else:\n",
    "        apprentice.loc[index, 'HAS_WEEKLY_SCALE'] = 4\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['HAS_WEEKLY_SCALE'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "128de913",
   "metadata": {
    "cell_style": "split",
    "code_folding": [],
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1433\n",
      "1     513\n",
      "Name: HAS_LATE_DELIVERIES, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_LATE_DELIVERIES'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if 0, put 0\n",
    "    if apprentice.loc[index, 'LATE_DELIVERIES'] == 0:\n",
    "        apprentice.loc[index, 'HAS_LATE_DELIVERIES'] = 0\n",
    "    # if not 0, put 1   \n",
    "    else:\n",
    "        apprentice.loc[index, 'HAS_LATE_DELIVERIES'] = 1\n",
    "        \n",
    "# counting each values amount\n",
    "print(apprentice['HAS_LATE_DELIVERIES'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "0631bf5b",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    1374\n",
      "0     572\n",
      "Name: HAS_CANCELLATION, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_CANCELLATION'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if 0, put 0\n",
    "    if apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] == 0:\n",
    "        apprentice.loc[index, 'HAS_CANCELLATION'] = 0\n",
    "    \n",
    "    # if not 0, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'HAS_CANCELLATION'] = 1\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['HAS_CANCELLATION'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "385ec09a",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    583\n",
      "1    572\n",
      "4    455\n",
      "3    336\n",
      "Name: CANCELLATION_LEVEL, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['CANCELLATION_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if equal to 0, put 1\n",
    "    if apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] == 0:\n",
    "        apprentice.loc[index, 'CANCELLATION_LEVEL'] = 1\n",
    "    \n",
    "    # if equal to 1, put 2\n",
    "    elif apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] == 1:\n",
    "        apprentice.loc[index, 'CANCELLATION_LEVEL'] = 2\n",
    "    \n",
    "    # if equal to 2 put 3\n",
    "    elif apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] == 2:\n",
    "        apprentice.loc[index, 'CANCELLATION_LEVEL'] = 3\n",
    "    \n",
    "    # if more than 2, put 4\n",
    "    else:\n",
    "        apprentice.loc[index, 'CANCELLATION_LEVEL'] = 4\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['CANCELLATION_LEVEL'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0c8daa27",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.384615\n",
       "1    0.153846\n",
       "2    0.000000\n",
       "3    0.384615\n",
       "4    0.000000\n",
       "Name: CANCELLATION_SCALE, dtype: float64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['CANCELLATION_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'CANCELLATION_SCALE'] = (apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] - apprentice['CANCELLATIONS_AFTER_NOON'].min()) / (apprentice['CANCELLATIONS_AFTER_NOON'].max()- apprentice['CANCELLATIONS_AFTER_NOON'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['CANCELLATION_SCALE'].head()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "275bb80b",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1      17\n",
      "2     135\n",
      "3     391\n",
      "4     547\n",
      "5     449\n",
      "6     236\n",
      "7      89\n",
      "8      49\n",
      "9      20\n",
      "10     12\n",
      "11      1\n",
      "Name: LARGEST_ORDER_SIZE, dtype: int64\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/hg/n_cy_gjn14n75hzvttk5334c0000gn/T/ipykernel_80930/161005452.py:2: FutureWarning: In a future version of pandas all arguments of Series.sort_index will be keyword-only.\n",
      "  print(apprentice['LARGEST_ORDER_SIZE'].value_counts().sort_index(0))\n"
     ]
    }
   ],
   "source": [
    "# counting each values amount\n",
    "print(apprentice['LARGEST_ORDER_SIZE'].value_counts().sort_index(0))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "815f3de0",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    938\n",
      "3    685\n",
      "1    152\n",
      "4    138\n",
      "5     33\n",
      "Name: LARGEST_ORDER_SIZE_LEVEL, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>...</th>\n",
       "      <th>TOTAL_VIEWED</th>\n",
       "      <th>HAS_CONTACTS</th>\n",
       "      <th>CONTACT_ORDER_RATIO</th>\n",
       "      <th>HAS_WEEKLY</th>\n",
       "      <th>HAS_WEEKLY_SCALE</th>\n",
       "      <th>HAS_LATE_DELIVERIES</th>\n",
       "      <th>HAS_CANCELLATION</th>\n",
       "      <th>CANCELLATION_LEVEL</th>\n",
       "      <th>CANCELLATION_SCALE</th>\n",
       "      <th>LARGEST_ORDER_SIZE_LEVEL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "      <td>4920.0</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>466</td>\n",
       "      <td>1</td>\n",
       "      <td>493.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>harlon.greyjoy@visa.com</td>\n",
       "      <td>6150.0</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>686</td>\n",
       "      <td>1</td>\n",
       "      <td>361.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.153846</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>monster@protonmail.com</td>\n",
       "      <td>3435.0</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>149</td>\n",
       "      <td>1</td>\n",
       "      <td>278.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>damon.lannister.(lord)@yahoo.com</td>\n",
       "      <td>3330.0</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>420</td>\n",
       "      <td>1</td>\n",
       "      <td>269.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>raynald.westerling@jnj.com</td>\n",
       "      <td>3427.5</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>184</td>\n",
       "      <td>1</td>\n",
       "      <td>276.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 43 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CROSS_SELL_SUCCESS                             EMAIL  REVENUE  \\\n",
       "0                   1       steffon.baratheon@yahoo.com   4920.0   \n",
       "1                   0           harlon.greyjoy@visa.com   6150.0   \n",
       "2                   0            monster@protonmail.com   3435.0   \n",
       "3                   1  damon.lannister.(lord)@yahoo.com   3330.0   \n",
       "4                   1        raynald.westerling@jnj.com   3427.5   \n",
       "\n",
       "   TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "0                  493                   9                            1   \n",
       "1                  361                   9                            1   \n",
       "2                  278                   6                            1   \n",
       "3                  269                   8                            1   \n",
       "4                  276                   7                            1   \n",
       "\n",
       "   PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "0                         10                    265.6   \n",
       "1                          6                    247.0   \n",
       "2                          4                    164.4   \n",
       "3                          2                    176.0   \n",
       "4                         10                    164.6   \n",
       "\n",
       "   CANCELLATIONS_AFTER_NOON  PC_LOGINS  ...  TOTAL_VIEWED  HAS_CONTACTS  \\\n",
       "0                         5          5  ...           466             1   \n",
       "1                         2          5  ...           686             1   \n",
       "2                         0          6  ...           149             1   \n",
       "3                         5          5  ...           420             1   \n",
       "4                         0          6  ...           184             1   \n",
       "\n",
       "   CONTACT_ORDER_RATIO  HAS_WEEKLY  HAS_WEEKLY_SCALE  HAS_LATE_DELIVERIES  \\\n",
       "0                493.0           0                 1                    0   \n",
       "1                361.0           0                 1                    0   \n",
       "2                278.0           1                 2                    0   \n",
       "3                269.0           0                 1                    0   \n",
       "4                276.0           1                 4                    0   \n",
       "\n",
       "   HAS_CANCELLATION  CANCELLATION_LEVEL  CANCELLATION_SCALE  \\\n",
       "0                 1                   4            0.384615   \n",
       "1                 1                   3            0.153846   \n",
       "2                 0                   1            0.000000   \n",
       "3                 1                   4            0.384615   \n",
       "4                 0                   1            0.000000   \n",
       "\n",
       "   LARGEST_ORDER_SIZE_LEVEL  \n",
       "0                         3  \n",
       "1                         3  \n",
       "2                         2  \n",
       "3                         3  \n",
       "4                         2  \n",
       "\n",
       "[5 rows x 43 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['LARGEST_ORDER_SIZE_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if less than equal to 2, put 1\n",
    "    if apprentice.loc[index, 'LARGEST_ORDER_SIZE'] <= 2:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_LEVEL'] = 1\n",
    "    \n",
    "    # if less than equal to 4, put 2\n",
    "    elif apprentice.loc[index, 'LARGEST_ORDER_SIZE'] <= 4:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_LEVEL'] = 2\n",
    "\n",
    "    # if less than equal to 6 , put 3\n",
    "    elif apprentice.loc[index, 'LARGEST_ORDER_SIZE'] <= 6:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_LEVEL'] = 3\n",
    "    \n",
    "    # if less than equal to 8, put 4\n",
    "    elif apprentice.loc[index, 'LARGEST_ORDER_SIZE'] <= 8:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_LEVEL'] = 4\n",
    "        \n",
    "    # if more than 8, put 5\n",
    "    else:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_LEVEL'] = 5\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['LARGEST_ORDER_SIZE_LEVEL'].value_counts())\n",
    "\n",
    "apprentice.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "14a11644",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1090\n",
      "1     856\n",
      "Name: LARGEST_ORDER_SIZE_BINARY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['LARGEST_ORDER_SIZE_BINARY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if 0, put 0\n",
    "    if apprentice.loc[index, 'LARGEST_ORDER_SIZE'] <=4:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_BINARY'] = 0\n",
    "    \n",
    "    # if not 0, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'LARGEST_ORDER_SIZE_BINARY'] = 1\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['LARGEST_ORDER_SIZE_BINARY'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "6571590a",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.5\n",
       "1    0.4\n",
       "2    0.2\n",
       "3    0.5\n",
       "4    0.2\n",
       "Name: LARGEST_ORDER_SIZE_SCALE, dtype: float64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['LARGEST_ORDER_SIZE_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'LARGEST_ORDER_SIZE_SCALE'] = (apprentice.loc[index, 'LARGEST_ORDER_SIZE'] - apprentice['LARGEST_ORDER_SIZE'].min()) / (apprentice['LARGEST_ORDER_SIZE'].max()- apprentice['LARGEST_ORDER_SIZE'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['LARGEST_ORDER_SIZE_SCALE'].head()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5e6a0773",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.315789      2\n",
      "1.578947      2\n",
      "1.842105      2\n",
      "2.105263     27\n",
      "2.368421     64\n",
      "2.631579     92\n",
      "2.894737    175\n",
      "3.157895    267\n",
      "3.421053    358\n",
      "3.684211    312\n",
      "3.947368    250\n",
      "4.210526    169\n",
      "4.473684    148\n",
      "4.736842     64\n",
      "5.000000     14\n",
      "Name: AVG_MEAN_RATING, dtype: int64\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/hg/n_cy_gjn14n75hzvttk5334c0000gn/T/ipykernel_80930/2287291642.py:2: FutureWarning: In a future version of pandas all arguments of Series.sort_index will be keyword-only.\n",
      "  print(apprentice['AVG_MEAN_RATING'].value_counts().sort_index(0))\n"
     ]
    }
   ],
   "source": [
    "# counting each values amount\n",
    "print(apprentice['AVG_MEAN_RATING'].value_counts().sort_index(0))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "3fa71285",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    625\n",
      "3    562\n",
      "4    395\n",
      "1    364\n",
      "Name: AVG_MEAN_RATING_LEVEL, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>...</th>\n",
       "      <th>HAS_WEEKLY</th>\n",
       "      <th>HAS_WEEKLY_SCALE</th>\n",
       "      <th>HAS_LATE_DELIVERIES</th>\n",
       "      <th>HAS_CANCELLATION</th>\n",
       "      <th>CANCELLATION_LEVEL</th>\n",
       "      <th>CANCELLATION_SCALE</th>\n",
       "      <th>LARGEST_ORDER_SIZE_LEVEL</th>\n",
       "      <th>LARGEST_ORDER_SIZE_BINARY</th>\n",
       "      <th>LARGEST_ORDER_SIZE_SCALE</th>\n",
       "      <th>AVG_MEAN_RATING_LEVEL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "      <td>4920.0</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>harlon.greyjoy@visa.com</td>\n",
       "      <td>6150.0</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.153846</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>monster@protonmail.com</td>\n",
       "      <td>3435.0</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>damon.lannister.(lord)@yahoo.com</td>\n",
       "      <td>3330.0</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>raynald.westerling@jnj.com</td>\n",
       "      <td>3427.5</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 46 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CROSS_SELL_SUCCESS                             EMAIL  REVENUE  \\\n",
       "0                   1       steffon.baratheon@yahoo.com   4920.0   \n",
       "1                   0           harlon.greyjoy@visa.com   6150.0   \n",
       "2                   0            monster@protonmail.com   3435.0   \n",
       "3                   1  damon.lannister.(lord)@yahoo.com   3330.0   \n",
       "4                   1        raynald.westerling@jnj.com   3427.5   \n",
       "\n",
       "   TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "0                  493                   9                            1   \n",
       "1                  361                   9                            1   \n",
       "2                  278                   6                            1   \n",
       "3                  269                   8                            1   \n",
       "4                  276                   7                            1   \n",
       "\n",
       "   PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "0                         10                    265.6   \n",
       "1                          6                    247.0   \n",
       "2                          4                    164.4   \n",
       "3                          2                    176.0   \n",
       "4                         10                    164.6   \n",
       "\n",
       "   CANCELLATIONS_AFTER_NOON  PC_LOGINS  ...  HAS_WEEKLY  HAS_WEEKLY_SCALE  \\\n",
       "0                         5          5  ...           0                 1   \n",
       "1                         2          5  ...           0                 1   \n",
       "2                         0          6  ...           1                 2   \n",
       "3                         5          5  ...           0                 1   \n",
       "4                         0          6  ...           1                 4   \n",
       "\n",
       "   HAS_LATE_DELIVERIES  HAS_CANCELLATION  CANCELLATION_LEVEL  \\\n",
       "0                    0                 1                   4   \n",
       "1                    0                 1                   3   \n",
       "2                    0                 0                   1   \n",
       "3                    0                 1                   4   \n",
       "4                    0                 0                   1   \n",
       "\n",
       "   CANCELLATION_SCALE  LARGEST_ORDER_SIZE_LEVEL  LARGEST_ORDER_SIZE_BINARY  \\\n",
       "0            0.384615                         3                          1   \n",
       "1            0.153846                         3                          1   \n",
       "2            0.000000                         2                          0   \n",
       "3            0.384615                         3                          1   \n",
       "4            0.000000                         2                          0   \n",
       "\n",
       "   LARGEST_ORDER_SIZE_SCALE  AVG_MEAN_RATING_LEVEL  \n",
       "0                       0.5                      1  \n",
       "1                       0.4                      1  \n",
       "2                       0.2                      3  \n",
       "3                       0.5                      2  \n",
       "4                       0.2                      2  \n",
       "\n",
       "[5 rows x 46 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_MEAN_RATING_LEVEL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if equal to 1, put 2\n",
    "    if apprentice.loc[index, 'AVG_MEAN_RATING'] <= 3:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_LEVEL'] = 1\n",
    "    \n",
    "    # if equal to 2 put 3\n",
    "    elif apprentice.loc[index, 'AVG_MEAN_RATING'] <= 3.5:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_LEVEL'] = 2\n",
    "\n",
    "    # if equal to 2 put 3\n",
    "    elif apprentice.loc[index, 'AVG_MEAN_RATING'] <= 4:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_LEVEL'] = 3\n",
    "        \n",
    "    # if more than 2, put 4\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_LEVEL'] = 4\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['AVG_MEAN_RATING_LEVEL'].value_counts())\n",
    "\n",
    "apprentice.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "767a0734",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    989\n",
      "1    957\n",
      "Name: AVG_MEAN_RATING_BINARY, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_MEAN_RATING_BINARY'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if 0, put 0\n",
    "    if apprentice.loc[index, 'AVG_MEAN_RATING'] <=3.5:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_BINARY'] = 0\n",
    "    \n",
    "    # if not 0, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'AVG_MEAN_RATING_BINARY'] = 1\n",
    "\n",
    "# counting each values amount\n",
    "print(apprentice['AVG_MEAN_RATING_BINARY'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "12e203d5",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.428571\n",
       "1    0.357143\n",
       "2    0.642857\n",
       "3    0.500000\n",
       "4    0.500000\n",
       "Name: AVG_MEAN_RATING_SCALE, dtype: float64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['AVG_MEAN_RATING_SCALE'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # (value - min_value) / (max_value - min_value)\n",
    "    apprentice.loc[index, 'AVG_MEAN_RATING_SCALE'] = (apprentice.loc[index, 'AVG_MEAN_RATING'] - apprentice['AVG_MEAN_RATING'].min()) / (apprentice['AVG_MEAN_RATING'].max()- apprentice['AVG_MEAN_RATING'].min())\n",
    "\n",
    "# showing results of first 5 rows\n",
    "apprentice['AVG_MEAN_RATING_SCALE'].head()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "3da0a553",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1941</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1942</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CANCELLATIONS_AFTER_NOON  WEEKLY_PLAN  TOTAL_WEEKLY_CANCEL\n",
       "0                            5            0                    5\n",
       "1                            2            0                    2\n",
       "2                            0            5                    5\n",
       "3                            5            0                    5\n",
       "4                            0           14                   14\n",
       "...                        ...          ...                  ...\n",
       "1941                         1            8                    9\n",
       "1942                         0            0                    0\n",
       "1943                         1            0                    1\n",
       "1944                         3            0                    3\n",
       "1945                         2            0                    2\n",
       "\n",
       "[1946 rows x 3 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['TOTAL_WEEKLY_CANCEL'] = apprentice['CANCELLATIONS_AFTER_NOON'] + apprentice['WEEKLY_PLAN']\n",
    "\n",
    "\n",
    "\n",
    "# checking the results\n",
    "apprentice[['CANCELLATIONS_AFTER_NOON', 'WEEKLY_PLAN','TOTAL_WEEKLY_CANCEL']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "482044c5",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "      <th>HAS_WEEKLY_CANCEL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>46</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CANCELLATIONS_AFTER_NOON  WEEKLY_PLAN  TOTAL_WEEKLY_CANCEL  \\\n",
       "0                         5            0                    5   \n",
       "1                         2            0                    2   \n",
       "2                         0            5                    5   \n",
       "3                         5            0                    5   \n",
       "4                         0           14                   14   \n",
       "5                         1           20                   21   \n",
       "6                         2           46                   48   \n",
       "7                         4           40                   44   \n",
       "8                         2           30                   32   \n",
       "9                         1           32                   33   \n",
       "\n",
       "   HAS_WEEKLY_CANCEL  \n",
       "0                  0  \n",
       "1                  0  \n",
       "2                  0  \n",
       "3                  0  \n",
       "4                  0  \n",
       "5                  1  \n",
       "6                  1  \n",
       "7                  1  \n",
       "8                  1  \n",
       "9                  1  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['HAS_WEEKLY_CANCEL'] = 0 \n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if not more than 0 and more than 0, put 0\n",
    "    if not (apprentice.loc[index, 'CANCELLATIONS_AFTER_NOON'] > 0 and apprentice.loc[index, 'WEEKLY_PLAN'] > 0):\n",
    "        apprentice.loc[index,'HAS_WEEKLY_CANCEL'] = 0\n",
    "    \n",
    "    # if more than 0 and more than 0, put 1\n",
    "    else:\n",
    "        apprentice.loc[index,'HAS_WEEKLY_CANCEL'] = 1\n",
    "\n",
    "        \n",
    "# checking the results\n",
    "apprentice[['CANCELLATIONS_AFTER_NOON', 'WEEKLY_PLAN','TOTAL_WEEKLY_CANCEL','HAS_WEEKLY_CANCEL']].head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "e2a597a2",
   "metadata": {
    "cell_style": "center",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CROSS_SELL_SUCCESS             1.00\n",
       "CANCELLATION_SCALE             0.14\n",
       "CANCELLATIONS_AFTER_NOON       0.14\n",
       "HAS_CANCELLATION               0.10\n",
       "TOTAL_LOGINS                   0.07\n",
       "MOBILE_LOGINS                  0.06\n",
       "HAS_WEEKLY_CANCEL              0.06\n",
       "PC_LOGINS                      0.04\n",
       "UNIQUE_MEALS_PURCH             0.04\n",
       "LARGEST_ORDER_SIZE             0.02\n",
       "LATE_DELIVERIES                0.02\n",
       "TOTAL_VIEWED                   0.01\n",
       "TOTAL_WEEKLY_CANCEL            0.01\n",
       "TOTAL_MEALS_ORDERED            0.01\n",
       "TOTAL_PHOTOS_VIEWED            0.01\n",
       "HAS_LATE_DELIVERIES            0.01\n",
       "REVENUE_PER_LOGIN              0.00\n",
       "PRODUCT_CATEGORIES_VIEWED      0.00\n",
       "HAS_CONTACTS                  -0.00\n",
       "CONTACTS_W_CUSTOMER_SERVICE   -0.00\n",
       "CONTACT_ORDER_RATIO            0.00\n",
       "WEEKLY_PLAN                   -0.01\n",
       "ORDER_PER_CATEGORY            -0.01\n",
       "HAS_WEEKLY_SCALE              -0.01\n",
       "HAS_WEEKLY                    -0.02\n",
       "REVENUE_PER_ORDER             -0.02\n",
       "AVG_MEAN_RATING               -0.04\n",
       "Name: CROSS_SELL_SUCCESS, dtype: float64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# storing continuos with y_variable\n",
    "corss_sell_continuous = ['CROSS_SELL_SUCCESS','REVENUE_PER_ORDER','ORDER_PER_CATEGORY','TOTAL_MEALS_ORDERED','UNIQUE_MEALS_PURCH',\n",
    "                         'PC_LOGINS','MOBILE_LOGINS','TOTAL_LOGINS','REVENUE_PER_LOGIN','TOTAL_VIEWED','CONTACT_ORDER_RATIO',\n",
    "                         'CONTACTS_W_CUSTOMER_SERVICE','HAS_CONTACTS','PRODUCT_CATEGORIES_VIEWED','TOTAL_PHOTOS_VIEWED',\n",
    "                         'HAS_WEEKLY','WEEKLY_PLAN','HAS_WEEKLY_SCALE','LATE_DELIVERIES','HAS_LATE_DELIVERIES',\n",
    "                         'CANCELLATIONS_AFTER_NOON','HAS_CANCELLATION','CANCELLATION_SCALE','LARGEST_ORDER_SIZE','AVG_MEAN_RATING',\n",
    "                         'TOTAL_WEEKLY_CANCEL','HAS_WEEKLY_CANCEL']\n",
    "\n",
    "# storing continuos with y_variable\n",
    "corss_sell_continuous_corr = apprentice[corss_sell_continuous].corr(method = 'pearson')\n",
    "\n",
    "# creating heatmap\n",
    "sns.heatmap(data = corss_sell_continuous_corr,# Data \n",
    "            cmap       ='coolwarm'           , # Color\n",
    "            square     = True                , # Tightening the layout\n",
    "            annot      = True                , # Should there be numbers in the heatmap\n",
    "            linecolor  = 'black'              , # Lines between boxes\n",
    "            linewidths = 0.5          )         # How thick should the lines be?\n",
    "\n",
    "# putting title\n",
    "plt.title(label = 'Corration heatmaps of CROSS_SELL_SUCCESS')\n",
    "\n",
    "# filtering the results to only show correlations with CROSS_SELL_SUCCESS\n",
    "corss_sell_continuous_corr.loc[ : , 'CROSS_SELL_SUCCESS'].round(decimals = 2).sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "edf9d0f6",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.000000     468\n",
       "0.012448       1\n",
       "0.013453       1\n",
       "0.013761       1\n",
       "0.014019       1\n",
       "            ... \n",
       "10.200000      1\n",
       "10.400000      2\n",
       "10.500000      1\n",
       "10.928571      1\n",
       "11.538462      1\n",
       "Name: WEEKLY_PLAN_OREDR_RATIO, Length: 923, dtype: int64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN'] = apprentice['WEEKLY_PLAN'] * 3\n",
    "\n",
    "# setting new columns\n",
    "apprentice['WEEKLY_PLAN_OREDR_RATIO'] = apprentice['TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN'] / apprentice['TOTAL_MEALS_ORDERED']\n",
    "\n",
    "# checking the results\n",
    "apprentice['WEEKLY_PLAN_OREDR_RATIO'].value_counts().sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "b1a90556",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>37</td>\n",
       "      <td>14</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>15</td>\n",
       "      <td>8</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>13</td>\n",
       "      <td>20</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1926</th>\n",
       "      <td>12</td>\n",
       "      <td>33</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1927</th>\n",
       "      <td>59</td>\n",
       "      <td>43</td>\n",
       "      <td>129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928</th>\n",
       "      <td>61</td>\n",
       "      <td>42</td>\n",
       "      <td>126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1932</th>\n",
       "      <td>70</td>\n",
       "      <td>50</td>\n",
       "      <td>150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1933</th>\n",
       "      <td>42</td>\n",
       "      <td>35</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>424 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      TOTAL_MEALS_ORDERED  WEEKLY_PLAN  TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN\n",
       "19                     15           12                                 36\n",
       "21                     37           14                                 42\n",
       "22                     15            8                                 24\n",
       "24                     14           21                                 63\n",
       "25                     13           20                                 60\n",
       "...                   ...          ...                                ...\n",
       "1926                   12           33                                 99\n",
       "1927                   59           43                                129\n",
       "1928                   61           42                                126\n",
       "1932                   70           50                                150\n",
       "1933                   42           35                                105\n",
       "\n",
       "[424 rows x 3 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# sorting data\n",
    "order = apprentice[apprentice.loc[:,'TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN'] > apprentice.loc[:,'TOTAL_MEALS_ORDERED']]\n",
    "\n",
    "# checking the reuslts\n",
    "order[['TOTAL_MEALS_ORDERED','WEEKLY_PLAN','TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97048f11",
   "metadata": {},
   "source": [
    "## CATEGORICAL/OTHER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "d4190988",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PERSONAL        861\n",
      "PROFESSIONAL    696\n",
      "JUNK            389\n",
      "Name: DOMAIN_GROUP, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# i assume that depends on the domain type (professional, personal and junk), different contribution to revenue. \n",
    "# professional domain would pay more like professional >  personal > junk. \n",
    "\n",
    "# creating new columns to store the each type of domain\n",
    "apprentice['DOMAIN_GROUP'] = 0\n",
    "\n",
    "# first, separate professional personal and junk\n",
    "professional = ['mmm.com', 'amex.com', 'apple.com','boeing.com','caterpillar.com', 'chevron.com', \n",
    "                'cisco.com', 'cocacola.com', 'disney.com', 'dupont.com', 'exxon.com', 'ge.org',\n",
    "               'goldmansacs.com','homedepot.com', 'ibm.com', 'intel.com', 'jnj.com','jpmorgan.com',\n",
    "                'mcdonalds.com', 'merck.com', 'microsoft.com', 'nike.com', 'pfizer.com', 'pg.com' ,\n",
    "                'travelers.com','unitedtech.com','unitedhealth.com', 'verizon.com', 'visa.com', 'walmart.com']\n",
    "personal     = ['gmail.com', 'yahoo.com', 'protonmail.com']\n",
    "junk         = ['me.com','aol.com', 'hotmail.com', 'live.com', 'msn.com', 'passport.com']\n",
    "\n",
    "\n",
    "# separeting domain along the lists above\n",
    "# checking each row of value\n",
    "for index, value in apprentice.iterrows():\n",
    "    email = value['EMAIL']\n",
    "    \n",
    "    # split @ and domain then store in domain\n",
    "    domain = email.split('@')[-1]\n",
    "    \n",
    "    # if domain in professional list , put 'PROFESSIONAL'\n",
    "    if domain in professional:\n",
    "        apprentice.at[index, 'DOMAIN_GROUP'] = 'PROFESSIONAL'\n",
    "    \n",
    "    # if domain in persnonal list, put 'PERSONAL'\n",
    "    elif domain in personal:\n",
    "        apprentice.at[index, 'DOMAIN_GROUP'] = 'PERSONAL'\n",
    "    \n",
    "    # if domain in junk list, put ''JUNK'\n",
    "    elif domain in junk:\n",
    "        apprentice.at[index, 'DOMAIN_GROUP'] = 'JUNK'\n",
    "    \n",
    "    # if not matching above, put 'OTHER'\n",
    "    else:\n",
    "        apprentice.at[index, 'DOMAIN_GROUP'] = 'OTHER'\n",
    "\n",
    "# checking the result\n",
    "print(apprentice['DOMAIN_GROUP'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "a6594093",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>...</th>\n",
       "      <th>AVG_MEAN_RATING_LEVEL</th>\n",
       "      <th>AVG_MEAN_RATING_BINARY</th>\n",
       "      <th>AVG_MEAN_RATING_SCALE</th>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "      <th>HAS_WEEKLY_CANCEL</th>\n",
       "      <th>TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN</th>\n",
       "      <th>WEEKLY_PLAN_OREDR_RATIO</th>\n",
       "      <th>DOMAIN_GROUP</th>\n",
       "      <th>BEFORE_DOMAIN</th>\n",
       "      <th>FIRST_NAME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "      <td>4920.000</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>steffon.baratheon</td>\n",
       "      <td>steffon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>harlon.greyjoy@visa.com</td>\n",
       "      <td>6150.000</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>harlon.greyjoy</td>\n",
       "      <td>harlon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>monster@protonmail.com</td>\n",
       "      <td>3435.000</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0.053957</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>monster</td>\n",
       "      <td>monster</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>damon.lannister.(lord)@yahoo.com</td>\n",
       "      <td>3330.000</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>damon.lannister.(lord)</td>\n",
       "      <td>damon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>raynald.westerling@jnj.com</td>\n",
       "      <td>3427.500</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>0.152174</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>raynald.westerling</td>\n",
       "      <td>raynald</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1941</th>\n",
       "      <td>0</td>\n",
       "      <td>wat.(barleycorn)@live.com</td>\n",
       "      <td>2940.000</td>\n",
       "      <td>89</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>143.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0.269663</td>\n",
       "      <td>JUNK</td>\n",
       "      <td>wat.(barleycorn)</td>\n",
       "      <td>wat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1942</th>\n",
       "      <td>1</td>\n",
       "      <td>hendry.bracken@exxon.com</td>\n",
       "      <td>7087.500</td>\n",
       "      <td>155</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>169.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>hendry.bracken</td>\n",
       "      <td>hendry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943</th>\n",
       "      <td>0</td>\n",
       "      <td>aenys.i.targaryen@passport.com</td>\n",
       "      <td>6562.500</td>\n",
       "      <td>65</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>187.4</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>JUNK</td>\n",
       "      <td>aenys.i.targaryen</td>\n",
       "      <td>aenys</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944</th>\n",
       "      <td>1</td>\n",
       "      <td>leo.blackbar@pg.com</td>\n",
       "      <td>5355.000</td>\n",
       "      <td>58</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>238.5</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>leo.blackbar</td>\n",
       "      <td>leo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945</th>\n",
       "      <td>0</td>\n",
       "      <td>anguy@boeing.com</td>\n",
       "      <td>5194.875</td>\n",
       "      <td>96</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>10</td>\n",
       "      <td>168.9</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>anguy</td>\n",
       "      <td>anguy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CROSS_SELL_SUCCESS                             EMAIL   REVENUE  \\\n",
       "0                      1       steffon.baratheon@yahoo.com  4920.000   \n",
       "1                      0           harlon.greyjoy@visa.com  6150.000   \n",
       "2                      0            monster@protonmail.com  3435.000   \n",
       "3                      1  damon.lannister.(lord)@yahoo.com  3330.000   \n",
       "4                      1        raynald.westerling@jnj.com  3427.500   \n",
       "...                  ...                               ...       ...   \n",
       "1941                   0         wat.(barleycorn)@live.com  2940.000   \n",
       "1942                   1          hendry.bracken@exxon.com  7087.500   \n",
       "1943                   0    aenys.i.targaryen@passport.com  6562.500   \n",
       "1944                   1               leo.blackbar@pg.com  5355.000   \n",
       "1945                   0                  anguy@boeing.com  5194.875   \n",
       "\n",
       "      TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "0                     493                   9                            1   \n",
       "1                     361                   9                            1   \n",
       "2                     278                   6                            1   \n",
       "3                     269                   8                            1   \n",
       "4                     276                   7                            1   \n",
       "...                   ...                 ...                          ...   \n",
       "1941                   89                   6                           13   \n",
       "1942                  155                   7                           13   \n",
       "1943                   65                   9                           13   \n",
       "1944                   58                   9                           18   \n",
       "1945                   96                   7                           19   \n",
       "\n",
       "      PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "0                            10                    265.6   \n",
       "1                             6                    247.0   \n",
       "2                             4                    164.4   \n",
       "3                             2                    176.0   \n",
       "4                            10                    164.6   \n",
       "...                         ...                      ...   \n",
       "1941                          3                    143.0   \n",
       "1942                          9                    169.4   \n",
       "1943                          6                    187.4   \n",
       "1944                         10                    238.5   \n",
       "1945                         10                    168.9   \n",
       "\n",
       "      CANCELLATIONS_AFTER_NOON  PC_LOGINS  ...  AVG_MEAN_RATING_LEVEL  \\\n",
       "0                            5          5  ...                      1   \n",
       "1                            2          5  ...                      1   \n",
       "2                            0          6  ...                      3   \n",
       "3                            5          5  ...                      2   \n",
       "4                            0          6  ...                      2   \n",
       "...                        ...        ...  ...                    ...   \n",
       "1941                         1          5  ...                      1   \n",
       "1942                         0          6  ...                      1   \n",
       "1943                         1          5  ...                      1   \n",
       "1944                         3          6  ...                      1   \n",
       "1945                         2          6  ...                      1   \n",
       "\n",
       "      AVG_MEAN_RATING_BINARY  AVG_MEAN_RATING_SCALE  TOTAL_WEEKLY_CANCEL  \\\n",
       "0                          0               0.428571                    5   \n",
       "1                          0               0.357143                    2   \n",
       "2                          1               0.642857                    5   \n",
       "3                          0               0.500000                    5   \n",
       "4                          0               0.500000                   14   \n",
       "...                      ...                    ...                  ...   \n",
       "1941                       0               0.428571                    9   \n",
       "1942                       0               0.357143                    0   \n",
       "1943                       0               0.357143                    1   \n",
       "1944                       0               0.357143                    3   \n",
       "1945                       0               0.285714                    2   \n",
       "\n",
       "      HAS_WEEKLY_CANCEL  TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN  \\\n",
       "0                     0                                  0   \n",
       "1                     0                                  0   \n",
       "2                     0                                 15   \n",
       "3                     0                                  0   \n",
       "4                     0                                 42   \n",
       "...                 ...                                ...   \n",
       "1941                  1                                 24   \n",
       "1942                  0                                  0   \n",
       "1943                  0                                  0   \n",
       "1944                  0                                  0   \n",
       "1945                  0                                  0   \n",
       "\n",
       "      WEEKLY_PLAN_OREDR_RATIO  DOMAIN_GROUP           BEFORE_DOMAIN  \\\n",
       "0                    0.000000      PERSONAL       steffon.baratheon   \n",
       "1                    0.000000  PROFESSIONAL          harlon.greyjoy   \n",
       "2                    0.053957      PERSONAL                 monster   \n",
       "3                    0.000000      PERSONAL  damon.lannister.(lord)   \n",
       "4                    0.152174  PROFESSIONAL      raynald.westerling   \n",
       "...                       ...           ...                     ...   \n",
       "1941                 0.269663          JUNK        wat.(barleycorn)   \n",
       "1942                 0.000000  PROFESSIONAL          hendry.bracken   \n",
       "1943                 0.000000          JUNK       aenys.i.targaryen   \n",
       "1944                 0.000000  PROFESSIONAL            leo.blackbar   \n",
       "1945                 0.000000  PROFESSIONAL                   anguy   \n",
       "\n",
       "      FIRST_NAME  \n",
       "0        steffon  \n",
       "1         harlon  \n",
       "2        monster  \n",
       "3          damon  \n",
       "4        raynald  \n",
       "...          ...  \n",
       "1941         wat  \n",
       "1942      hendry  \n",
       "1943       aenys  \n",
       "1944         leo  \n",
       "1945       anguy  \n",
       "\n",
       "[1946 rows x 55 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# STEP 1: splitting personal emails\n",
    "\n",
    "# placeholder list\n",
    "placeholder_lst = []\n",
    "\n",
    "# looping over each email address\n",
    "for index, col in apprentice.iterrows():\n",
    "    \n",
    "    # splitting email domain at '@'\n",
    "    split_email = apprentice.loc[index, 'EMAIL'].split(sep = '@')\n",
    "    \n",
    "    # appending placeholder_lst with the results\n",
    "    placeholder_lst.append(split_email)\n",
    "    \n",
    "\n",
    "# converting placeholder_lst into a DataFrame \n",
    "email_df = pd.DataFrame(placeholder_lst)\n",
    "\n",
    "\n",
    "# displaying the results\n",
    "email_df = email_df.rename(columns={0: 'BEFORE_DOMAIN'})\n",
    "\n",
    "apprentice = pd.concat([apprentice, email_df.loc[:,'BEFORE_DOMAIN']], axis=1)\n",
    "apprentice\n",
    "\n",
    "\n",
    "# STEP 1: splitting personal emails\n",
    "\n",
    "# placeholder list\n",
    "name_lst = []\n",
    "\n",
    "# looping over each email address\n",
    "for index, col in apprentice.iterrows():\n",
    "    \n",
    "    # splitting email domain at '@'\n",
    "    split_name = apprentice.iloc[index, -1].split(sep = '.')\n",
    "    \n",
    "    # appending placeholder_lst with the results\n",
    "    name_lst.append(split_name)\n",
    "    \n",
    "\n",
    "# converting placeholder_lst into a DataFrame \n",
    "name_df = pd.DataFrame(name_lst)\n",
    "\n",
    "\n",
    "# displaying the results\n",
    "name_df = name_df.rename(columns={0: 'FIRST_NAME'})\n",
    "\n",
    "apprentice = pd.concat([apprentice, name_df.loc[:,'FIRST_NAME']], axis=1)\n",
    "apprentice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "77151005",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n",
      "unknown\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>...</th>\n",
       "      <th>AVG_MEAN_RATING_BINARY</th>\n",
       "      <th>AVG_MEAN_RATING_SCALE</th>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "      <th>HAS_WEEKLY_CANCEL</th>\n",
       "      <th>TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN</th>\n",
       "      <th>WEEKLY_PLAN_OREDR_RATIO</th>\n",
       "      <th>DOMAIN_GROUP</th>\n",
       "      <th>BEFORE_DOMAIN</th>\n",
       "      <th>FIRST_NAME</th>\n",
       "      <th>GENDER_GUESS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>steffon.baratheon@yahoo.com</td>\n",
       "      <td>4920.0</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>steffon.baratheon</td>\n",
       "      <td>steffon</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>harlon.greyjoy@visa.com</td>\n",
       "      <td>6150.0</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>harlon.greyjoy</td>\n",
       "      <td>harlon</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>monster@protonmail.com</td>\n",
       "      <td>3435.0</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0.053957</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>monster</td>\n",
       "      <td>monster</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>damon.lannister.(lord)@yahoo.com</td>\n",
       "      <td>3330.0</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>damon.lannister.(lord)</td>\n",
       "      <td>damon</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>raynald.westerling@jnj.com</td>\n",
       "      <td>3427.5</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>0.152174</td>\n",
       "      <td>PROFESSIONAL</td>\n",
       "      <td>raynald.westerling</td>\n",
       "      <td>raynald</td>\n",
       "      <td>unknown</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CROSS_SELL_SUCCESS                             EMAIL  REVENUE  \\\n",
       "0                   1       steffon.baratheon@yahoo.com   4920.0   \n",
       "1                   0           harlon.greyjoy@visa.com   6150.0   \n",
       "2                   0            monster@protonmail.com   3435.0   \n",
       "3                   1  damon.lannister.(lord)@yahoo.com   3330.0   \n",
       "4                   1        raynald.westerling@jnj.com   3427.5   \n",
       "\n",
       "   TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  \\\n",
       "0                  493                   9                            1   \n",
       "1                  361                   9                            1   \n",
       "2                  278                   6                            1   \n",
       "3                  269                   8                            1   \n",
       "4                  276                   7                            1   \n",
       "\n",
       "   PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  \\\n",
       "0                         10                    265.6   \n",
       "1                          6                    247.0   \n",
       "2                          4                    164.4   \n",
       "3                          2                    176.0   \n",
       "4                         10                    164.6   \n",
       "\n",
       "   CANCELLATIONS_AFTER_NOON  PC_LOGINS  ...  AVG_MEAN_RATING_BINARY  \\\n",
       "0                         5          5  ...                       0   \n",
       "1                         2          5  ...                       0   \n",
       "2                         0          6  ...                       1   \n",
       "3                         5          5  ...                       0   \n",
       "4                         0          6  ...                       0   \n",
       "\n",
       "   AVG_MEAN_RATING_SCALE  TOTAL_WEEKLY_CANCEL  HAS_WEEKLY_CANCEL  \\\n",
       "0               0.428571                    5                  0   \n",
       "1               0.357143                    2                  0   \n",
       "2               0.642857                    5                  0   \n",
       "3               0.500000                    5                  0   \n",
       "4               0.500000                   14                  0   \n",
       "\n",
       "   TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN  WEEKLY_PLAN_OREDR_RATIO  DOMAIN_GROUP  \\\n",
       "0                                  0                 0.000000      PERSONAL   \n",
       "1                                  0                 0.000000  PROFESSIONAL   \n",
       "2                                 15                 0.053957      PERSONAL   \n",
       "3                                  0                 0.000000      PERSONAL   \n",
       "4                                 42                 0.152174  PROFESSIONAL   \n",
       "\n",
       "            BEFORE_DOMAIN  FIRST_NAME  GENDER_GUESS  \n",
       "0       steffon.baratheon     steffon       unknown  \n",
       "1          harlon.greyjoy      harlon       unknown  \n",
       "2                 monster     monster       unknown  \n",
       "3  damon.lannister.(lord)       damon       unknown  \n",
       "4      raynald.westerling     raynald       unknown  \n",
       "\n",
       "[5 rows x 56 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# guessing gender based on (first) name\n",
    "\n",
    "detector = gender.Detector()\n",
    "\n",
    "# placeholder list\n",
    "placeholder_lst = []\n",
    "\n",
    "\n",
    "# looping to guess gender\n",
    "for name in apprentice['FIRST_NAME']:\n",
    "    guess = detector.get_gender(name)\n",
    "    print(guess)\n",
    "    placeholder_lst.append(guess)\n",
    "\n",
    "\n",
    "# converting list into a series\n",
    "apprentice['GENDER_GUESS'] = pd.Series(placeholder_lst)\n",
    "\n",
    "\n",
    "# checking results\n",
    "apprentice.head(n = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "769460a6",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <th>...</th>\n",
       "      <th>AVG_MEAN_RATING_SCALE</th>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "      <th>HAS_WEEKLY_CANCEL</th>\n",
       "      <th>TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN</th>\n",
       "      <th>WEEKLY_PLAN_OREDR_RATIO</th>\n",
       "      <th>FIRST_NAME</th>\n",
       "      <th>GENDER_GUESS</th>\n",
       "      <th>JUNK</th>\n",
       "      <th>PERSONAL</th>\n",
       "      <th>PROFESSIONAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>4920.000</td>\n",
       "      <td>493</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>265.6</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>steffon</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>6150.000</td>\n",
       "      <td>361</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>247.0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>harlon</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>3435.000</td>\n",
       "      <td>278</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>164.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0.053957</td>\n",
       "      <td>monster</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>3330.000</td>\n",
       "      <td>269</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>damon</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>3427.500</td>\n",
       "      <td>276</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>164.6</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>0.152174</td>\n",
       "      <td>raynald</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1941</th>\n",
       "      <td>0</td>\n",
       "      <td>2940.000</td>\n",
       "      <td>89</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>143.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0.269663</td>\n",
       "      <td>wat</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1942</th>\n",
       "      <td>1</td>\n",
       "      <td>7087.500</td>\n",
       "      <td>155</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>169.4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>hendry</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943</th>\n",
       "      <td>0</td>\n",
       "      <td>6562.500</td>\n",
       "      <td>65</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>187.4</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>aenys</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944</th>\n",
       "      <td>1</td>\n",
       "      <td>5355.000</td>\n",
       "      <td>58</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>238.5</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>leo</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945</th>\n",
       "      <td>0</td>\n",
       "      <td>5194.875</td>\n",
       "      <td>96</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>10</td>\n",
       "      <td>168.9</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>anguy</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CROSS_SELL_SUCCESS   REVENUE  TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  \\\n",
       "0                      1  4920.000                  493                   9   \n",
       "1                      0  6150.000                  361                   9   \n",
       "2                      0  3435.000                  278                   6   \n",
       "3                      1  3330.000                  269                   8   \n",
       "4                      1  3427.500                  276                   7   \n",
       "...                  ...       ...                  ...                 ...   \n",
       "1941                   0  2940.000                   89                   6   \n",
       "1942                   1  7087.500                  155                   7   \n",
       "1943                   0  6562.500                   65                   9   \n",
       "1944                   1  5355.000                   58                   9   \n",
       "1945                   0  5194.875                   96                   7   \n",
       "\n",
       "      CONTACTS_W_CUSTOMER_SERVICE  PRODUCT_CATEGORIES_VIEWED  \\\n",
       "0                               1                         10   \n",
       "1                               1                          6   \n",
       "2                               1                          4   \n",
       "3                               1                          2   \n",
       "4                               1                         10   \n",
       "...                           ...                        ...   \n",
       "1941                           13                          3   \n",
       "1942                           13                          9   \n",
       "1943                           13                          6   \n",
       "1944                           18                         10   \n",
       "1945                           19                         10   \n",
       "\n",
       "      AVG_TIME_PER_SITE_VISIT  CANCELLATIONS_AFTER_NOON  PC_LOGINS  \\\n",
       "0                       265.6                         5          5   \n",
       "1                       247.0                         2          5   \n",
       "2                       164.4                         0          6   \n",
       "3                       176.0                         5          5   \n",
       "4                       164.6                         0          6   \n",
       "...                       ...                       ...        ...   \n",
       "1941                    143.0                         1          5   \n",
       "1942                    169.4                         0          6   \n",
       "1943                    187.4                         1          5   \n",
       "1944                    238.5                         3          6   \n",
       "1945                    168.9                         2          6   \n",
       "\n",
       "      MOBILE_LOGINS  ...  AVG_MEAN_RATING_SCALE  TOTAL_WEEKLY_CANCEL  \\\n",
       "0                 2  ...               0.428571                    5   \n",
       "1                 1  ...               0.357143                    2   \n",
       "2                 1  ...               0.642857                    5   \n",
       "3                 2  ...               0.500000                    5   \n",
       "4                 1  ...               0.500000                   14   \n",
       "...             ...  ...                    ...                  ...   \n",
       "1941              2  ...               0.428571                    9   \n",
       "1942              2  ...               0.357143                    0   \n",
       "1943              1  ...               0.357143                    1   \n",
       "1944              1  ...               0.357143                    3   \n",
       "1945              2  ...               0.285714                    2   \n",
       "\n",
       "      HAS_WEEKLY_CANCEL  TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN  \\\n",
       "0                     0                                  0   \n",
       "1                     0                                  0   \n",
       "2                     0                                 15   \n",
       "3                     0                                  0   \n",
       "4                     0                                 42   \n",
       "...                 ...                                ...   \n",
       "1941                  1                                 24   \n",
       "1942                  0                                  0   \n",
       "1943                  0                                  0   \n",
       "1944                  0                                  0   \n",
       "1945                  0                                  0   \n",
       "\n",
       "      WEEKLY_PLAN_OREDR_RATIO  FIRST_NAME  GENDER_GUESS  JUNK  PERSONAL  \\\n",
       "0                    0.000000     steffon       unknown     0         1   \n",
       "1                    0.000000      harlon       unknown     0         0   \n",
       "2                    0.053957     monster       unknown     0         1   \n",
       "3                    0.000000       damon       unknown     0         1   \n",
       "4                    0.152174     raynald       unknown     0         0   \n",
       "...                       ...         ...           ...   ...       ...   \n",
       "1941                 0.269663         wat       unknown     1         0   \n",
       "1942                 0.000000      hendry       unknown     0         0   \n",
       "1943                 0.000000       aenys       unknown     1         0   \n",
       "1944                 0.000000         leo       unknown     0         0   \n",
       "1945                 0.000000       anguy       unknown     0         0   \n",
       "\n",
       "      PROFESSIONAL  \n",
       "0                0  \n",
       "1                1  \n",
       "2                0  \n",
       "3                0  \n",
       "4                1  \n",
       "...            ...  \n",
       "1941             0  \n",
       "1942             1  \n",
       "1943             0  \n",
       "1944             1  \n",
       "1945             1  \n",
       "\n",
       "[1946 rows x 56 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding categorical variables\n",
    "ONE_HOT_DOMAIN = pd.get_dummies(apprentice['DOMAIN_GROUP'])\n",
    "\n",
    "\n",
    "# dropping categorical variables after they've been encoded\n",
    "apprentice = apprentice.drop('DOMAIN_GROUP', axis = 1)\n",
    "apprentice = apprentice.drop('EMAIL', axis = 1)\n",
    "apprentice = apprentice.drop('BEFORE_DOMAIN', axis = 1)\n",
    "\n",
    "# joining codings together\n",
    "apprentice = apprentice.join(ONE_HOT_DOMAIN)\n",
    "\n",
    "# check the result of separation\n",
    "apprentice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "f6f8d792",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "unknown    1946\n",
       "Name: GENDER_GUESS, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking results\n",
    "apprentice['GENDER_GUESS'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "438e0878",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CANCEL_BY_PROFESSIONAL</th>\n",
       "      <th>HAS_CANCELLATION</th>\n",
       "      <th>PROFESSIONAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1941</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1942</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CANCEL_BY_PROFESSIONAL  HAS_CANCELLATION  PROFESSIONAL\n",
       "0                          0                 1             0\n",
       "1                          1                 1             1\n",
       "2                          0                 0             0\n",
       "3                          0                 1             0\n",
       "4                          0                 0             1\n",
       "...                      ...               ...           ...\n",
       "1941                       0                 1             0\n",
       "1942                       0                 0             1\n",
       "1943                       0                 1             0\n",
       "1944                       1                 1             1\n",
       "1945                       1                 1             1\n",
       "\n",
       "[1946 rows x 3 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# setting new columns\n",
    "apprentice['CANCEL_BY_PROFESSIONAL'] = 0\n",
    "\n",
    "# checking each row of value\n",
    "for index, val in apprentice.iterrows():\n",
    "    \n",
    "    # if not (1 and 1), put 0\n",
    "    if not (apprentice.loc[index, 'HAS_CANCELLATION'] == 1 and apprentice.loc[index, 'PROFESSIONAL'] == 1):\n",
    "        apprentice.loc[index, 'CANCEL_BY_PROFESSIONAL'] = 0\n",
    "    \n",
    "    # if 1 and 1, put 1\n",
    "    else:\n",
    "        apprentice.loc[index, 'CANCEL_BY_PROFESSIONAL'] = 1\n",
    "\n",
    "# checking the results\n",
    "apprentice[['CANCEL_BY_PROFESSIONAL', 'HAS_CANCELLATION', 'PROFESSIONAL']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "9ab00847",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "57\n",
      "'CROSS_SELL_SUCCESS',\n",
      "'REVENUE',\n",
      "'TOTAL_MEALS_ORDERED',\n",
      "'UNIQUE_MEALS_PURCH',\n",
      "'CONTACTS_W_CUSTOMER_SERVICE',\n",
      "'PRODUCT_CATEGORIES_VIEWED',\n",
      "'AVG_TIME_PER_SITE_VISIT',\n",
      "'CANCELLATIONS_AFTER_NOON',\n",
      "'PC_LOGINS',\n",
      "'MOBILE_LOGINS',\n",
      "'WEEKLY_PLAN',\n",
      "'LATE_DELIVERIES',\n",
      "'AVG_PREP_VID_TIME',\n",
      "'LARGEST_ORDER_SIZE',\n",
      "'AVG_MEAN_RATING',\n",
      "'TOTAL_PHOTOS_VIEWED',\n",
      "'log_REVENUE',\n",
      "'log_AVG_TIME_PER_SITE_VISIT',\n",
      "'log_AVG_PREP_VID_TIME',\n",
      "'REVENUE_LEVEL',\n",
      "'REVENUE_SCALE',\n",
      "'REVENUE_BINARY',\n",
      "'AVG_TIME_PER_SITE_VISIT_LEVEL',\n",
      "'AVG_TIME_PER_SITE_VISIT_SCALE',\n",
      "'AVG_TIME_PER_SITE_VISIT_BINARY',\n",
      "'AVG_PREP_VID_TIME_LEVEL',\n",
      "'AVG_PREP_VID_TIME_SCALE',\n",
      "'AVG_PREP_VID_TIME_BINARY',\n",
      "'REVENUE_PER_ORDER',\n",
      "'ORDER_PER_CATEGORY',\n",
      "'TOTAL_LOGINS',\n",
      "'REVENUE_PER_LOGIN',\n",
      "'TOTAL_VIEWED',\n",
      "'HAS_CONTACTS',\n",
      "'CONTACT_ORDER_RATIO',\n",
      "'HAS_WEEKLY',\n",
      "'HAS_WEEKLY_SCALE',\n",
      "'HAS_LATE_DELIVERIES',\n",
      "'HAS_CANCELLATION',\n",
      "'CANCELLATION_LEVEL',\n",
      "'CANCELLATION_SCALE',\n",
      "'LARGEST_ORDER_SIZE_LEVEL',\n",
      "'LARGEST_ORDER_SIZE_BINARY',\n",
      "'LARGEST_ORDER_SIZE_SCALE',\n",
      "'AVG_MEAN_RATING_LEVEL',\n",
      "'AVG_MEAN_RATING_BINARY',\n",
      "'AVG_MEAN_RATING_SCALE',\n",
      "'TOTAL_WEEKLY_CANCEL',\n",
      "'HAS_WEEKLY_CANCEL',\n",
      "'TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN',\n",
      "'WEEKLY_PLAN_OREDR_RATIO',\n",
      "'FIRST_NAME',\n",
      "'GENDER_GUESS',\n",
      "'JUNK',\n",
      "'PERSONAL',\n",
      "'PROFESSIONAL',\n",
      "'CANCEL_BY_PROFESSIONAL',\n"
     ]
    }
   ],
   "source": [
    "# checking number of column\n",
    "print(len(apprentice.columns))\n",
    "\n",
    "# columns what i will use\n",
    "for col in apprentice:\n",
    "    print(f\"'{col}',\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "16e1e81c",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of columns: 57\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# creating a list of continuous features\n",
    "apprentice_data = ['CROSS_SELL_SUCCESS','REVENUE','TOTAL_MEALS_ORDERED','UNIQUE_MEALS_PURCH','CONTACTS_W_CUSTOMER_SERVICE','PRODUCT_CATEGORIES_VIEWED',\n",
    "                   'AVG_TIME_PER_SITE_VISIT','CANCELLATIONS_AFTER_NOON','PC_LOGINS','MOBILE_LOGINS','WEEKLY_PLAN','LATE_DELIVERIES',\n",
    "                   'AVG_PREP_VID_TIME','LARGEST_ORDER_SIZE','AVG_MEAN_RATING','TOTAL_PHOTOS_VIEWED','log_REVENUE','log_AVG_TIME_PER_SITE_VISIT',\n",
    "                   'log_AVG_PREP_VID_TIME','REVENUE_LEVEL','REVENUE_SCALE','REVENUE_BINARY','AVG_TIME_PER_SITE_VISIT_LEVEL',\n",
    "                   'AVG_TIME_PER_SITE_VISIT_SCALE','AVG_TIME_PER_SITE_VISIT_BINARY','AVG_PREP_VID_TIME_LEVEL','AVG_PREP_VID_TIME_SCALE',\n",
    "                   'AVG_PREP_VID_TIME_BINARY','REVENUE_PER_ORDER','ORDER_PER_CATEGORY','TOTAL_LOGINS','REVENUE_PER_LOGIN','TOTAL_VIEWED',\n",
    "                   'HAS_CONTACTS','CONTACT_ORDER_RATIO','HAS_WEEKLY','HAS_WEEKLY_SCALE','HAS_LATE_DELIVERIES','HAS_CANCELLATION',\n",
    "                   'CANCELLATION_LEVEL','CANCELLATION_SCALE','LARGEST_ORDER_SIZE_LEVEL','LARGEST_ORDER_SIZE_BINARY','LARGEST_ORDER_SIZE_SCALE',\n",
    "                   'AVG_MEAN_RATING_LEVEL','AVG_MEAN_RATING_BINARY','AVG_MEAN_RATING_SCALE','TOTAL_WEEKLY_CANCEL','HAS_WEEKLY_CANCEL',\n",
    "                   'TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN','WEEKLY_PLAN_OREDR_RATIO','FIRST_NAME','GENDER_GUESS','JUNK','PERSONAL','PROFESSIONAL',\n",
    "                   'CANCEL_BY_PROFESSIONAL']    \n",
    "\n",
    "\n",
    "# developing a correlation matrix based on continuous features\n",
    "apprentice_corr = apprentice[apprentice_data].corr(method = 'pearson')\n",
    "\n",
    "# creating heatmap\n",
    "sns.heatmap(data       = apprentice_corr, # Data \n",
    "            cmap       ='coolwarm'      , # Color\n",
    "            square     = True           , # Tightening the layout\n",
    "            annot      = False           , # If True, i cant see anything\n",
    "            linecolor  = 'black'        , # Lines between boxes\n",
    "            linewidths = 0.5          ) # How thick should the lines be?\n",
    "\n",
    "# putting title\n",
    "plt.title(label = 'Corration heatmaps')\n",
    "\n",
    "# checking the count of columns\n",
    "print(f'Number of columns: {len(apprentice.columns)}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "6e752b03",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PROFESSIONAL</th>\n",
       "      <td>0.194102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CANCEL_BY_PROFESSIONAL</th>\n",
       "      <td>0.165070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CANCELLATION_LEVEL</th>\n",
       "      <td>0.147234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CANCELLATION_SCALE</th>\n",
       "      <td>0.142681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <td>0.142681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_CANCELLATION</th>\n",
       "      <td>0.099748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_LOGINS</th>\n",
       "      <td>0.074569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <td>0.062023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_WEEKLY_CANCEL</th>\n",
       "      <td>0.056624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT_LEVEL</th>\n",
       "      <td>0.045339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <td>0.044462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PERSONAL</th>\n",
       "      <td>0.038841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <td>0.036541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT_BINARY</th>\n",
       "      <td>0.035779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>log_AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <td>0.034529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <td>0.032115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT_SCALE</th>\n",
       "      <td>0.032115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LARGEST_ORDER_SIZE_BINARY</th>\n",
       "      <td>0.028652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LATE_DELIVERIES</th>\n",
       "      <td>0.023941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_PREP_VID_TIME_LEVEL</th>\n",
       "      <td>0.023354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LARGEST_ORDER_SIZE_SCALE</th>\n",
       "      <td>0.022247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LARGEST_ORDER_SIZE</th>\n",
       "      <td>0.022247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LARGEST_ORDER_SIZE_LEVEL</th>\n",
       "      <td>0.019983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_PREP_VID_TIME_BINARY</th>\n",
       "      <td>0.018872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>log_AVG_PREP_VID_TIME</th>\n",
       "      <td>0.015990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_LATE_DELIVERIES</th>\n",
       "      <td>0.014390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE_BINARY</th>\n",
       "      <td>0.013600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_WEEKLY_CANCEL</th>\n",
       "      <td>0.011562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_PREP_VID_TIME_SCALE</th>\n",
       "      <td>0.011117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_PREP_VID_TIME</th>\n",
       "      <td>0.011117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_VIEWED</th>\n",
       "      <td>0.010121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "      <td>0.010047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>log_REVENUE</th>\n",
       "      <td>0.007533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <td>0.006475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE_LEVEL</th>\n",
       "      <td>0.005757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <td>0.004671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE_PER_LOGIN</th>\n",
       "      <td>0.004592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE</th>\n",
       "      <td>0.004540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE_SCALE</th>\n",
       "      <td>0.004540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CONTACT_ORDER_RATIO</th>\n",
       "      <td>0.003538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <td>-0.000183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_CONTACTS</th>\n",
       "      <td>-0.000368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN</th>\n",
       "      <td>-0.005337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <td>-0.005337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_WEEKLY_SCALE</th>\n",
       "      <td>-0.006337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WEEKLY_PLAN_OREDR_RATIO</th>\n",
       "      <td>-0.007273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ORDER_PER_CATEGORY</th>\n",
       "      <td>-0.012263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HAS_WEEKLY</th>\n",
       "      <td>-0.018820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>REVENUE_PER_ORDER</th>\n",
       "      <td>-0.024558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_MEAN_RATING_BINARY</th>\n",
       "      <td>-0.025621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_MEAN_RATING_LEVEL</th>\n",
       "      <td>-0.033272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_MEAN_RATING_SCALE</th>\n",
       "      <td>-0.035074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AVG_MEAN_RATING</th>\n",
       "      <td>-0.035074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>JUNK</th>\n",
       "      <td>-0.280870</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   CROSS_SELL_SUCCESS\n",
       "CROSS_SELL_SUCCESS                           1.000000\n",
       "PROFESSIONAL                                 0.194102\n",
       "CANCEL_BY_PROFESSIONAL                       0.165070\n",
       "CANCELLATION_LEVEL                           0.147234\n",
       "CANCELLATION_SCALE                           0.142681\n",
       "CANCELLATIONS_AFTER_NOON                     0.142681\n",
       "HAS_CANCELLATION                             0.099748\n",
       "TOTAL_LOGINS                                 0.074569\n",
       "MOBILE_LOGINS                                0.062023\n",
       "HAS_WEEKLY_CANCEL                            0.056624\n",
       "AVG_TIME_PER_SITE_VISIT_LEVEL                0.045339\n",
       "PC_LOGINS                                    0.044462\n",
       "PERSONAL                                     0.038841\n",
       "UNIQUE_MEALS_PURCH                           0.036541\n",
       "AVG_TIME_PER_SITE_VISIT_BINARY               0.035779\n",
       "log_AVG_TIME_PER_SITE_VISIT                  0.034529\n",
       "AVG_TIME_PER_SITE_VISIT                      0.032115\n",
       "AVG_TIME_PER_SITE_VISIT_SCALE                0.032115\n",
       "LARGEST_ORDER_SIZE_BINARY                    0.028652\n",
       "LATE_DELIVERIES                              0.023941\n",
       "AVG_PREP_VID_TIME_LEVEL                      0.023354\n",
       "LARGEST_ORDER_SIZE_SCALE                     0.022247\n",
       "LARGEST_ORDER_SIZE                           0.022247\n",
       "LARGEST_ORDER_SIZE_LEVEL                     0.019983\n",
       "AVG_PREP_VID_TIME_BINARY                     0.018872\n",
       "log_AVG_PREP_VID_TIME                        0.015990\n",
       "HAS_LATE_DELIVERIES                          0.014390\n",
       "REVENUE_BINARY                               0.013600\n",
       "TOTAL_WEEKLY_CANCEL                          0.011562\n",
       "AVG_PREP_VID_TIME_SCALE                      0.011117\n",
       "AVG_PREP_VID_TIME                            0.011117\n",
       "TOTAL_VIEWED                                 0.010121\n",
       "TOTAL_PHOTOS_VIEWED                          0.010047\n",
       "log_REVENUE                                  0.007533\n",
       "TOTAL_MEALS_ORDERED                          0.006475\n",
       "REVENUE_LEVEL                                0.005757\n",
       "PRODUCT_CATEGORIES_VIEWED                    0.004671\n",
       "REVENUE_PER_LOGIN                            0.004592\n",
       "REVENUE                                      0.004540\n",
       "REVENUE_SCALE                                0.004540\n",
       "CONTACT_ORDER_RATIO                          0.003538\n",
       "CONTACTS_W_CUSTOMER_SERVICE                 -0.000183\n",
       "HAS_CONTACTS                                -0.000368\n",
       "TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN           -0.005337\n",
       "WEEKLY_PLAN                                 -0.005337\n",
       "HAS_WEEKLY_SCALE                            -0.006337\n",
       "WEEKLY_PLAN_OREDR_RATIO                     -0.007273\n",
       "ORDER_PER_CATEGORY                          -0.012263\n",
       "HAS_WEEKLY                                  -0.018820\n",
       "REVENUE_PER_ORDER                           -0.024558\n",
       "AVG_MEAN_RATING_BINARY                      -0.025621\n",
       "AVG_MEAN_RATING_LEVEL                       -0.033272\n",
       "AVG_MEAN_RATING_SCALE                       -0.035074\n",
       "AVG_MEAN_RATING                             -0.035074\n",
       "JUNK                                        -0.280870"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# printing (Pearson) correlations\n",
    "apprentice_corr.loc[ : , ['CROSS_SELL_SUCCESS'] ].sort_values(by = 'CROSS_SELL_SUCCESS',\n",
    "                                                                ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "e7de1693",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# declaring explanatory variables\n",
    "\n",
    "# declaring sets of x-variables- Best ones identified from Traditional OLS regression\n",
    "\n",
    "apprentice_data = ['REVENUE','TOTAL_MEALS_ORDERED','UNIQUE_MEALS_PURCH','CONTACTS_W_CUSTOMER_SERVICE','PRODUCT_CATEGORIES_VIEWED',\n",
    "                   'AVG_TIME_PER_SITE_VISIT','CANCELLATIONS_AFTER_NOON','PC_LOGINS','MOBILE_LOGINS','WEEKLY_PLAN','LATE_DELIVERIES',\n",
    "                   'AVG_PREP_VID_TIME','LARGEST_ORDER_SIZE','AVG_MEAN_RATING','TOTAL_PHOTOS_VIEWED','log_REVENUE','log_AVG_TIME_PER_SITE_VISIT',\n",
    "                   'log_AVG_PREP_VID_TIME','REVENUE_LEVEL','REVENUE_SCALE','REVENUE_BINARY','AVG_TIME_PER_SITE_VISIT_LEVEL',\n",
    "                   'AVG_TIME_PER_SITE_VISIT_SCALE','AVG_TIME_PER_SITE_VISIT_BINARY','AVG_PREP_VID_TIME_LEVEL','AVG_PREP_VID_TIME_SCALE',\n",
    "                   'AVG_PREP_VID_TIME_BINARY','REVENUE_PER_ORDER','ORDER_PER_CATEGORY','TOTAL_LOGINS','REVENUE_PER_LOGIN','TOTAL_VIEWED',\n",
    "                   'HAS_CONTACTS','CONTACT_ORDER_RATIO','HAS_WEEKLY','HAS_WEEKLY_SCALE','HAS_LATE_DELIVERIES','HAS_CANCELLATION',\n",
    "                   'CANCELLATION_LEVEL','CANCELLATION_SCALE','LARGEST_ORDER_SIZE_LEVEL','LARGEST_ORDER_SIZE_BINARY','LARGEST_ORDER_SIZE_SCALE',\n",
    "                   'AVG_MEAN_RATING_LEVEL','AVG_MEAN_RATING_BINARY','AVG_MEAN_RATING_SCALE','TOTAL_WEEKLY_CANCEL','HAS_WEEKLY_CANCEL',\n",
    "                   'TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN','WEEKLY_PLAN_OREDR_RATIO','FIRST_NAME','GENDER_GUESS','JUNK','PERSONAL','PROFESSIONAL',\n",
    "                   'CANCEL_BY_PROFESSIONAL']                          \n",
    "\n",
    "\n",
    "# preparing x-data using the above x variables\n",
    "x_data = apprentice[apprentice_data]\n",
    "\n",
    "\n",
    "# preparing y-variable\n",
    "y_data = apprentice.loc[ : , 'CROSS_SELL_SUCCESS']    # y-variable "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "5f2146d6",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# train-test split with stratification\n",
    "x_train, x_test, y_train, y_test = train_test_split(x_data,\n",
    "                                                    y_data,\n",
    "                                                    test_size    = 0.10,\n",
    "                                                    random_state = 219,\n",
    "                                                    stratify     = y_data) # preserving balance\n",
    "\n",
    "\n",
    "# merging training data for statsmodels\n",
    "apprentice_train = pd.concat([x_train, y_train], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "1b81a1f3",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Response Variable Proportions (Training Set)\n",
      "--------------------------------------------\n",
      "1    0.68\n",
      "0    0.32\n",
      "Name: CROSS_SELL_SUCCESS, dtype: float64\n",
      "\n",
      "\n",
      "\n",
      "Response Variable Proportions (Testing Set)\n",
      "--------------------------------------------\n",
      "1    0.68\n",
      "0    0.32\n",
      "Name: CROSS_SELL_SUCCESS, dtype: float64\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# checking the distribution\n",
    "print(f\"\"\"\n",
    "\n",
    "Response Variable Proportions (Training Set)\n",
    "--------------------------------------------\n",
    "{y_train.value_counts(normalize = True).round(decimals = 2)}\n",
    "\n",
    "\n",
    "\n",
    "Response Variable Proportions (Testing Set)\n",
    "--------------------------------------------\n",
    "{y_test.value_counts(normalize = True).round(decimals = 2)}\n",
    "\"\"\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "f50c219f",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "REVENUE + \n",
      "TOTAL_MEALS_ORDERED + \n",
      "UNIQUE_MEALS_PURCH + \n",
      "CONTACTS_W_CUSTOMER_SERVICE + \n",
      "PRODUCT_CATEGORIES_VIEWED + \n",
      "AVG_TIME_PER_SITE_VISIT + \n",
      "CANCELLATIONS_AFTER_NOON + \n",
      "PC_LOGINS + \n",
      "MOBILE_LOGINS + \n",
      "WEEKLY_PLAN + \n",
      "LATE_DELIVERIES + \n",
      "AVG_PREP_VID_TIME + \n",
      "LARGEST_ORDER_SIZE + \n",
      "AVG_MEAN_RATING + \n",
      "TOTAL_PHOTOS_VIEWED + \n",
      "log_REVENUE + \n",
      "log_AVG_TIME_PER_SITE_VISIT + \n",
      "log_AVG_PREP_VID_TIME + \n",
      "REVENUE_LEVEL + \n",
      "REVENUE_SCALE + \n",
      "REVENUE_BINARY + \n",
      "AVG_TIME_PER_SITE_VISIT_LEVEL + \n",
      "AVG_TIME_PER_SITE_VISIT_SCALE + \n",
      "AVG_TIME_PER_SITE_VISIT_BINARY + \n",
      "AVG_PREP_VID_TIME_LEVEL + \n",
      "AVG_PREP_VID_TIME_SCALE + \n",
      "AVG_PREP_VID_TIME_BINARY + \n",
      "REVENUE_PER_ORDER + \n",
      "ORDER_PER_CATEGORY + \n",
      "TOTAL_LOGINS + \n",
      "REVENUE_PER_LOGIN + \n",
      "TOTAL_VIEWED + \n",
      "HAS_CONTACTS + \n",
      "CONTACT_ORDER_RATIO + \n",
      "HAS_WEEKLY + \n",
      "HAS_WEEKLY_SCALE + \n",
      "HAS_LATE_DELIVERIES + \n",
      "HAS_CANCELLATION + \n",
      "CANCELLATION_LEVEL + \n",
      "CANCELLATION_SCALE + \n",
      "LARGEST_ORDER_SIZE_LEVEL + \n",
      "LARGEST_ORDER_SIZE_BINARY + \n",
      "LARGEST_ORDER_SIZE_SCALE + \n",
      "AVG_MEAN_RATING_LEVEL + \n",
      "AVG_MEAN_RATING_BINARY + \n",
      "AVG_MEAN_RATING_SCALE + \n",
      "TOTAL_WEEKLY_CANCEL + \n",
      "HAS_WEEKLY_CANCEL + \n",
      "TOTAL_OREDER_TIMES_BY_WEEKLY_PLAN + \n",
      "WEEKLY_PLAN_OREDR_RATIO + \n",
      "FIRST_NAME + \n",
      "GENDER_GUESS + \n",
      "JUNK + \n",
      "PERSONAL + \n",
      "PROFESSIONAL + \n",
      "CANCEL_BY_PROFESSIONAL + \n"
     ]
    }
   ],
   "source": [
    "# showing all columns with '+'\n",
    "for val in apprentice_data:\n",
    "    print(f\"{val} + \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "feb87df9",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627252\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.001</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2200.6372</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2211.5731</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.3</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.27635</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>         <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>      <td>0.6948</td>  <td>0.0713</td>  <td>9.7470</td> <td>0.0000</td> <td>0.5551</td>  <td>0.8346</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENUE_BINARY</th> <td>0.1115</td>  <td>0.1025</td>  <td>1.0882</td> <td>0.2765</td> <td>-0.0893</td> <td>0.3123</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.001    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2200.6372\n",
       "Date:               2023-02-20 13:14   BIC:              2211.5731\n",
       "No. Observations:   1751               Log-Likelihood:   -1098.3  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.27635  \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     5.0000                                        \n",
       "-------------------------------------------------------------------\n",
       "                  Coef.   Std.Err.    z     P>|z|    [0.025  0.975]\n",
       "-------------------------------------------------------------------\n",
       "Intercept         0.6948    0.0713  9.7470  0.0000   0.5551  0.8346\n",
       "REVENUE_BINARY    0.1115    0.1025  1.0882  0.2765  -0.0893  0.3123\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# for REVENUE best\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ REVENUE_BINARY\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "7d4d9f37",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.625807\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.003</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2195.5751</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2206.5110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1095.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>    <td>0.012440</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                <td></td>                 <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th> <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                     <td>0.4329</td>  <td>0.1364</td>  <td>3.1732</td> <td>0.0015</td> <td>0.1655</td> <td>0.7002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_TIME_PER_SITE_VISIT_LEVEL</th> <td>0.1279</td>  <td>0.0516</td>  <td>2.4790</td> <td>0.0132</td> <td>0.0268</td> <td>0.2290</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                             Results: Logit\n",
       "=========================================================================\n",
       "Model:                 Logit                Pseudo R-squared:   0.003    \n",
       "Dependent Variable:    CROSS_SELL_SUCCESS   AIC:                2195.5751\n",
       "Date:                  2023-02-20 13:14     BIC:                2206.5110\n",
       "No. Observations:      1751                 Log-Likelihood:     -1095.8  \n",
       "Df Model:              1                    LL-Null:            -1098.9  \n",
       "Df Residuals:          1749                 LLR p-value:        0.012440 \n",
       "Converged:             1.0000               Scale:              1.0000   \n",
       "No. Iterations:        5.0000                                            \n",
       "-------------------------------------------------------------------------\n",
       "                              Coef.  Std.Err.   z    P>|z|  [0.025 0.975]\n",
       "-------------------------------------------------------------------------\n",
       "Intercept                     0.4329   0.1364 3.1732 0.0015 0.1655 0.7002\n",
       "AVG_TIME_PER_SITE_VISIT_LEVEL 0.1279   0.0516 2.4790 0.0132 0.0268 0.2290\n",
       "=========================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# for AVG_TIME_PER_SITE_VISIT best\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ AVG_TIME_PER_SITE_VISIT_LEVEL\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "52bb4589",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627227\n",
      "         Iterations 4\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.001</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2200.5472</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2211.4831</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.3</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.25885</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>4.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>              <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                <td>0.6061</td>  <td>0.1356</td>  <td>4.4687</td> <td>0.0000</td> <td>0.3403</td>  <td>0.8720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_PREP_VID_TIME_BINARY</th> <td>0.1664</td>  <td>0.1465</td>  <td>1.1361</td> <td>0.2559</td> <td>-0.1207</td> <td>0.4535</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                           Results: Logit\n",
       "=====================================================================\n",
       "Model:               Logit               Pseudo R-squared:  0.001    \n",
       "Dependent Variable:  CROSS_SELL_SUCCESS  AIC:               2200.5472\n",
       "Date:                2023-02-20 13:14    BIC:               2211.4831\n",
       "No. Observations:    1751                Log-Likelihood:    -1098.3  \n",
       "Df Model:            1                   LL-Null:           -1098.9  \n",
       "Df Residuals:        1749                LLR p-value:       0.25885  \n",
       "Converged:           1.0000              Scale:             1.0000   \n",
       "No. Iterations:      4.0000                                          \n",
       "---------------------------------------------------------------------\n",
       "                         Coef.  Std.Err.   z    P>|z|   [0.025 0.975]\n",
       "---------------------------------------------------------------------\n",
       "Intercept                0.6061   0.1356 4.4687 0.0000  0.3403 0.8720\n",
       "AVG_PREP_VID_TIME_BINARY 0.1664   0.1465 1.1361 0.2559 -0.1207 0.4535\n",
       "=====================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# for AVG_PREP_VID_TIME best\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ AVG_PREP_VID_TIME_BINARY\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "8a06f45f",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627282\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2200.7433</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2211.6791</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.4</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.29896</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "           <td></td>            <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>           <td>0.6776</td>  <td>0.0860</td>  <td>7.8817</td> <td>0.0000</td> <td>0.5091</td>  <td>0.8462</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_MEALS_ORDERED</th> <td>0.0010</td>  <td>0.0009</td>  <td>1.0305</td> <td>0.3028</td> <td>-0.0009</td> <td>0.0028</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.000    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2200.7433\n",
       "Date:               2023-02-20 13:14   BIC:              2211.6791\n",
       "No. Observations:   1751               Log-Likelihood:   -1098.4  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.29896  \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     5.0000                                        \n",
       "------------------------------------------------------------------\n",
       "                      Coef.  Std.Err.   z    P>|z|   [0.025 0.975]\n",
       "------------------------------------------------------------------\n",
       "Intercept             0.6776   0.0860 7.8817 0.0000  0.5091 0.8462\n",
       "TOTAL_MEALS_ORDERED   0.0010   0.0009 1.0305 0.3028 -0.0009 0.0028\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for TOTAL_MEALS_ORDERED\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~  TOTAL_MEALS_ORDERED\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "cfb31059",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.626724\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.001</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2198.7883</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2209.7242</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1097.4</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>    <td>0.081548</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "           <td></td>           <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>          <td>0.4770</td>  <td>0.1644</td>  <td>2.9018</td> <td>0.0037</td> <td>0.1548</td>  <td>0.7992</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>UNIQUE_MEALS_PURCH</th> <td>0.0392</td>  <td>0.0226</td>  <td>1.7340</td> <td>0.0829</td> <td>-0.0051</td> <td>0.0835</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.001    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2198.7883\n",
       "Date:               2023-02-20 13:14   BIC:              2209.7242\n",
       "No. Observations:   1751               Log-Likelihood:   -1097.4  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.081548 \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     5.0000                                        \n",
       "------------------------------------------------------------------\n",
       "                      Coef.  Std.Err.   z    P>|z|   [0.025 0.975]\n",
       "------------------------------------------------------------------\n",
       "Intercept             0.4770   0.1644 2.9018 0.0037  0.1548 0.7992\n",
       "UNIQUE_MEALS_PURCH    0.0392   0.0226 1.7340 0.0829 -0.0051 0.0835\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for UNIQUE_MEALS_PURCH\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~  UNIQUE_MEALS_PURCH\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "cfbf2ada",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627524\n",
      "         Iterations 4\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2201.5889</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2212.5248</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.62915</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>4.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>        <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>    <td>0.6973</td>  <td>0.1193</td>  <td>5.8468</td> <td>0.0000</td> <td>0.4635</td>  <td>0.9310</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HAS_CONTACTS</th> <td>0.0147</td>  <td>0.0304</td>  <td>0.4828</td> <td>0.6293</td> <td>-0.0449</td> <td>0.0742</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.000    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2201.5889\n",
       "Date:               2023-02-20 13:14   BIC:              2212.5248\n",
       "No. Observations:   1751               Log-Likelihood:   -1098.8  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.62915  \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     4.0000                                        \n",
       "-------------------------------------------------------------------\n",
       "                  Coef.   Std.Err.    z     P>|z|    [0.025  0.975]\n",
       "-------------------------------------------------------------------\n",
       "Intercept         0.6973    0.1193  5.8468  0.0000   0.4635  0.9310\n",
       "HAS_CONTACTS      0.0147    0.0304  0.4828  0.6293  -0.0449  0.0742\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for CONTTACTS\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ HAS_CONTACTS\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "24748f72",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.624672\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.005</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2193.6015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2210.0053</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1093.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>2</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1748</td>          <td>LLR p-value:</td>    <td>0.0060343</td>\n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>         <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>     <td>-0.4964</td>  <td>0.5057</td>  <td>-0.9815</td> <td>0.3263</td> <td>-1.4876</td> <td>0.4948</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MOBILE_LOGINS</th> <td>0.2568</td>   <td>0.0974</td>  <td>2.6377</td>  <td>0.0083</td> <td>0.0660</td>  <td>0.4477</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PC_LOGINS</th>     <td>0.1579</td>   <td>0.0878</td>  <td>1.7993</td>  <td>0.0720</td> <td>-0.0141</td> <td>0.3299</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.005    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2193.6015\n",
       "Date:               2023-02-20 13:14   BIC:              2210.0053\n",
       "No. Observations:   1751               Log-Likelihood:   -1093.8  \n",
       "Df Model:           2                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1748               LLR p-value:      0.0060343\n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     5.0000                                        \n",
       "-------------------------------------------------------------------\n",
       "                 Coef.   Std.Err.     z     P>|z|    [0.025  0.975]\n",
       "-------------------------------------------------------------------\n",
       "Intercept       -0.4964    0.5057  -0.9815  0.3263  -1.4876  0.4948\n",
       "MOBILE_LOGINS    0.2568    0.0974   2.6377  0.0083   0.0660  0.4477\n",
       "PC_LOGINS        0.1579    0.0878   1.7993  0.0720  -0.0141  0.3299\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for LOGINS\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~  MOBILE_LOGINS +\n",
    "                                                            PC_LOGINS\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "21c656be",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627461\n",
      "         Iterations 4\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2203.3678</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2219.7716</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.7</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>2</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1748</td>          <td>LLR p-value:</td>     <td>0.79678</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>4.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>               <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                 <td>0.6983</td>  <td>0.1074</td>  <td>6.4994</td> <td>0.0000</td> <td>0.4877</td>  <td>0.9088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRODUCT_CATEGORIES_VIEWED</th> <td>0.0062</td>  <td>0.0168</td>  <td>0.3670</td> <td>0.7136</td> <td>-0.0268</td> <td>0.0391</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_PHOTOS_VIEWED</th>       <td>0.0002</td>  <td>0.0003</td>  <td>0.5500</td> <td>0.5823</td> <td>-0.0004</td> <td>0.0007</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                            Results: Logit\n",
       "======================================================================\n",
       "Model:                Logit               Pseudo R-squared:  0.000    \n",
       "Dependent Variable:   CROSS_SELL_SUCCESS  AIC:               2203.3678\n",
       "Date:                 2023-02-20 13:14    BIC:               2219.7716\n",
       "No. Observations:     1751                Log-Likelihood:    -1098.7  \n",
       "Df Model:             2                   LL-Null:           -1098.9  \n",
       "Df Residuals:         1748                LLR p-value:       0.79678  \n",
       "Converged:            1.0000              Scale:             1.0000   \n",
       "No. Iterations:       4.0000                                          \n",
       "----------------------------------------------------------------------\n",
       "                          Coef.  Std.Err.   z    P>|z|   [0.025 0.975]\n",
       "----------------------------------------------------------------------\n",
       "Intercept                 0.6983   0.1074 6.4994 0.0000  0.4877 0.9088\n",
       "PRODUCT_CATEGORIES_VIEWED 0.0062   0.0168 0.3670 0.7136 -0.0268 0.0391\n",
       "TOTAL_PHOTOS_VIEWED       0.0002   0.0003 0.5500 0.5823 -0.0004 0.0007\n",
       "======================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for VIEWED\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~  PRODUCT_CATEGORIES_VIEWED + \n",
    "                                                            TOTAL_PHOTOS_VIEWED\n",
    "                                                        \"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "855e254e",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.616934\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>    <td>0.017</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>         <td>2164.5023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>         <td>2175.4382</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>    <td>-1080.3</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>        <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>    <td>1.0026e-09</td>\n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>         <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>               <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "           <td></td>           <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th> <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>          <td>0.4421</td>  <td>0.0713</td>  <td>6.2021</td> <td>0.0000</td> <td>0.3024</td> <td>0.5818</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CANCELLATION_SCALE</th> <td>2.7282</td>  <td>0.4701</td>  <td>5.8028</td> <td>0.0000</td> <td>1.8067</td> <td>3.6496</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "===================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.017     \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2164.5023 \n",
       "Date:               2023-02-20 13:14   BIC:              2175.4382 \n",
       "No. Observations:   1751               Log-Likelihood:   -1080.3   \n",
       "Df Model:           1                  LL-Null:          -1098.9   \n",
       "Df Residuals:       1749               LLR p-value:      1.0026e-09\n",
       "Converged:          1.0000             Scale:            1.0000    \n",
       "No. Iterations:     5.0000                                         \n",
       "--------------------------------------------------------------------\n",
       "                    Coef.   Std.Err.    z     P>|z|   [0.025  0.975]\n",
       "--------------------------------------------------------------------\n",
       "Intercept           0.4421    0.0713  6.2021  0.0000  0.3024  0.5818\n",
       "CANCELLATION_SCALE  2.7282    0.4701  5.8028  0.0000  1.8067  3.6496\n",
       "===================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for CANCEL\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ CANCELLATION_SCALE\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "14423178",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627384\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2201.1003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2212.0362</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.6</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.39555</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>       <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>  <td>0.8272</td>   <td>0.1056</td>  <td>7.8364</td>  <td>0.0000</td> <td>0.6203</td>  <td>1.0340</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HAS_WEEKLY</th> <td>-0.1022</td>  <td>0.1207</td>  <td>-0.8466</td> <td>0.3972</td> <td>-0.3388</td> <td>0.1344</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.000    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2201.1003\n",
       "Date:               2023-02-20 13:14   BIC:              2212.0362\n",
       "No. Observations:   1751               Log-Likelihood:   -1098.6  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.39555  \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     5.0000                                        \n",
       "-------------------------------------------------------------------\n",
       "                 Coef.   Std.Err.     z     P>|z|    [0.025  0.975]\n",
       "-------------------------------------------------------------------\n",
       "Intercept        0.8272    0.1056   7.8364  0.0000   0.6203  1.0340\n",
       "HAS_WEEKLY      -0.1022    0.1207  -0.8466  0.3972  -0.3388  0.1344\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for WEEKLY_PLAN\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ HAS_WEEKLY\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "bf29d539",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.627269\n",
      "         Iterations 4\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.001</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2200.6976</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2211.6335</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1098.3</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>     <td>0.28895</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>4.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>          <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>       <td>0.7206</td>  <td>0.0578</td>  <td>12.4673</td> <td>0.0000</td> <td>0.6073</td>  <td>0.8338</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LATE_DELIVERIES</th> <td>0.0146</td>  <td>0.0139</td>  <td>1.0535</td>  <td>0.2921</td> <td>-0.0126</td> <td>0.0419</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "==================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.001    \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2200.6976\n",
       "Date:               2023-02-20 13:14   BIC:              2211.6335\n",
       "No. Observations:   1751               Log-Likelihood:   -1098.3  \n",
       "Df Model:           1                  LL-Null:          -1098.9  \n",
       "Df Residuals:       1749               LLR p-value:      0.28895  \n",
       "Converged:          1.0000             Scale:            1.0000   \n",
       "No. Iterations:     4.0000                                        \n",
       "-------------------------------------------------------------------\n",
       "                 Coef.   Std.Err.     z     P>|z|    [0.025  0.975]\n",
       "-------------------------------------------------------------------\n",
       "Intercept        0.7206    0.0578  12.4673  0.0000   0.6073  0.8338\n",
       "LATE_DELIVERIES  0.0146    0.0139   1.0535  0.2921  -0.0126  0.0419\n",
       "==================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for LATE_DELIVERIES\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ LATE_DELIVERIES\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "2a7c7784",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.626729\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.001</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2198.8037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2209.7396</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1097.4</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>    <td>0.082323</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "              <td></td>               <th>Coef.</th> <th>Std.Err.</th>    <th>z</th>    <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                 <td>0.6718</td>  <td>0.0675</td>  <td>9.9594</td> <td>0.0000</td> <td>0.5396</td>  <td>0.8041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LARGEST_ORDER_SIZE_BINARY</th> <td>0.1798</td>  <td>0.1037</td>  <td>1.7338</td> <td>0.0829</td> <td>-0.0234</td> <td>0.3830</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                            Results: Logit\n",
       "======================================================================\n",
       "Model:                Logit               Pseudo R-squared:  0.001    \n",
       "Dependent Variable:   CROSS_SELL_SUCCESS  AIC:               2198.8037\n",
       "Date:                 2023-02-20 13:14    BIC:               2209.7396\n",
       "No. Observations:     1751                Log-Likelihood:    -1097.4  \n",
       "Df Model:             1                   LL-Null:           -1098.9  \n",
       "Df Residuals:         1749                LLR p-value:       0.082323 \n",
       "Converged:            1.0000              Scale:             1.0000   \n",
       "No. Iterations:       5.0000                                          \n",
       "----------------------------------------------------------------------\n",
       "                          Coef.  Std.Err.   z    P>|z|   [0.025 0.975]\n",
       "----------------------------------------------------------------------\n",
       "Intercept                 0.6718   0.0675 9.9594 0.0000  0.5396 0.8041\n",
       "LARGEST_ORDER_SIZE_BINARY 0.1798   0.1037 1.7338 0.0829 -0.0234 0.3830\n",
       "======================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for LARGEST_ORDER_SIZE\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ LARGEST_ORDER_SIZE_BINARY\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "7b3c9b4f",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.626515\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>   <td>0.002</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>        <td>2198.0571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>        <td>2208.9930</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>   <td>-1097.0</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>1</td>             <td>LL-Null:</td>       <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1749</td>          <td>LLR p-value:</td>    <td>0.052337</td> \n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>        <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>              <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "            <td></td>             <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>             <td>1.1177</td>   <td>0.1979</td>  <td>5.6478</td>  <td>0.0000</td> <td>0.7298</td>  <td>1.5055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_MEAN_RATING_SCALE</th> <td>-0.6019</td>  <td>0.3109</td>  <td>-1.9362</td> <td>0.0528</td> <td>-1.2112</td> <td>0.0074</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                           Results: Logit\n",
       "====================================================================\n",
       "Model:                Logit              Pseudo R-squared: 0.002    \n",
       "Dependent Variable:   CROSS_SELL_SUCCESS AIC:              2198.0571\n",
       "Date:                 2023-02-20 13:14   BIC:              2208.9930\n",
       "No. Observations:     1751               Log-Likelihood:   -1097.0  \n",
       "Df Model:             1                  LL-Null:          -1098.9  \n",
       "Df Residuals:         1749               LLR p-value:      0.052337 \n",
       "Converged:            1.0000             Scale:            1.0000   \n",
       "No. Iterations:       5.0000                                        \n",
       "--------------------------------------------------------------------\n",
       "                       Coef.  Std.Err.    z    P>|z|   [0.025 0.975]\n",
       "--------------------------------------------------------------------\n",
       "Intercept              1.1177   0.1979  5.6478 0.0000  0.7298 1.5055\n",
       "AVG_MEAN_RATING_SCALE -0.6019   0.3109 -1.9362 0.0528 -1.2112 0.0074\n",
       "====================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for AVG_MEAN_RATING\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ AVG_MEAN_RATING_SCALE\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "cdd95864",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.584778\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>    <td>0.068</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>         <td>2053.8925</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>         <td>2070.2963</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>    <td>-1023.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>               <td>2</td>             <td>LL-Null:</td>        <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1748</td>          <td>LLR p-value:</td>    <td>2.7746e-33</td>\n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>         <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>               <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>        <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>    <td>-0.3553</td>  <td>0.1091</td>  <td>-3.2575</td> <td>0.0011</td> <td>-0.5690</td> <td>-0.1415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PERSONAL</th>     <td>1.2131</td>   <td>0.1346</td>  <td>9.0137</td>  <td>0.0000</td> <td>0.9493</td>  <td>1.4769</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PROFESSIONAL</th> <td>1.7220</td>   <td>0.1470</td>  <td>11.7104</td> <td>0.0000</td> <td>1.4338</td>  <td>2.0102</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                          Results: Logit\n",
       "===================================================================\n",
       "Model:              Logit              Pseudo R-squared: 0.068     \n",
       "Dependent Variable: CROSS_SELL_SUCCESS AIC:              2053.8925 \n",
       "Date:               2023-02-20 13:14   BIC:              2070.2963 \n",
       "No. Observations:   1751               Log-Likelihood:   -1023.9   \n",
       "Df Model:           2                  LL-Null:          -1098.9   \n",
       "Df Residuals:       1748               LLR p-value:      2.7746e-33\n",
       "Converged:          1.0000             Scale:            1.0000    \n",
       "No. Iterations:     5.0000                                         \n",
       "--------------------------------------------------------------------\n",
       "                 Coef.   Std.Err.     z     P>|z|    [0.025   0.975]\n",
       "--------------------------------------------------------------------\n",
       "Intercept       -0.3553    0.1091  -3.2575  0.0011  -0.5690  -0.1415\n",
       "PERSONAL         1.2131    0.1346   9.0137  0.0000   0.9493   1.4769\n",
       "PROFESSIONAL     1.7220    0.1470  11.7104  0.0000   1.4338   2.0102\n",
       "===================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best for EMAIL domain\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ PERSONAL + \n",
    "                                                           PROFESSIONAL\"\"\",\n",
    "                                                            data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full. summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "fd79413c",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.574205\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>    <td>0.085</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>         <td>2044.8651</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>         <td>2137.8202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>    <td>-1005.4</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>              <td>16</td>             <td>LL-Null:</td>        <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1734</td>          <td>LLR p-value:</td>    <td>3.3788e-31</td>\n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>         <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>               <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                <td></td>                 <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                     <td>-2.3419</td>  <td>0.7066</td>  <td>-3.3141</td> <td>0.0009</td> <td>-3.7269</td> <td>-0.9569</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENUE_BINARY</th>                <td>-0.0368</td>  <td>0.1377</td>  <td>-0.2670</td> <td>0.7895</td> <td>-0.3065</td> <td>0.2330</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_TIME_PER_SITE_VISIT_LEVEL</th> <td>0.0930</td>   <td>0.0831</td>  <td>1.1187</td>  <td>0.2633</td> <td>-0.0699</td> <td>0.2559</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_PREP_VID_TIME_BINARY</th>      <td>0.1265</td>   <td>0.1623</td>  <td>0.7798</td>  <td>0.4355</td> <td>-0.1915</td> <td>0.4446</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_MEALS_ORDERED</th>           <td>-0.0007</td>  <td>0.0012</td>  <td>-0.5334</td> <td>0.5937</td> <td>-0.0031</td> <td>0.0018</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>UNIQUE_MEALS_PURCH</th>            <td>0.0447</td>   <td>0.0241</td>  <td>1.8575</td>  <td>0.0632</td> <td>-0.0025</td> <td>0.0918</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MOBILE_LOGINS</th>                 <td>0.2591</td>   <td>0.1039</td>  <td>2.4931</td>  <td>0.0127</td> <td>0.0554</td>  <td>0.4628</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PC_LOGINS</th>                     <td>0.1784</td>   <td>0.0931</td>  <td>1.9158</td>  <td>0.0554</td> <td>-0.0041</td> <td>0.3610</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRODUCT_CATEGORIES_VIEWED</th>     <td>0.0090</td>   <td>0.0180</td>  <td>0.5009</td>  <td>0.6164</td> <td>-0.0263</td> <td>0.0444</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_PHOTOS_VIEWED</th>           <td>-0.0002</td>  <td>0.0003</td>  <td>-0.7132</td> <td>0.4757</td> <td>-0.0009</td> <td>0.0004</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HAS_CANCELLATION</th>              <td>0.4490</td>   <td>0.1161</td>  <td>3.8664</td>  <td>0.0001</td> <td>0.2214</td>  <td>0.6767</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HAS_WEEKLY</th>                    <td>-0.0598</td>  <td>0.1276</td>  <td>-0.4686</td> <td>0.6393</td> <td>-0.3100</td> <td>0.1904</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LATE_DELIVERIES</th>               <td>0.0136</td>   <td>0.0147</td>  <td>0.9246</td>  <td>0.3552</td> <td>-0.0153</td> <td>0.0425</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LARGEST_ORDER_SIZE_BINARY</th>     <td>0.0353</td>   <td>0.1450</td>  <td>0.2436</td>  <td>0.8075</td> <td>-0.2489</td> <td>0.3196</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_MEAN_RATING_SCALE</th>         <td>-0.4817</td>  <td>0.3955</td>  <td>-1.2180</td> <td>0.2232</td> <td>-1.2569</td> <td>0.2935</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PERSONAL</th>                      <td>1.2304</td>   <td>0.1367</td>  <td>9.0016</td>  <td>0.0000</td> <td>0.9625</td>  <td>1.4984</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PROFESSIONAL</th>                  <td>1.7318</td>   <td>0.1491</td>  <td>11.6115</td> <td>0.0000</td> <td>1.4395</td>  <td>2.0242</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                               Results: Logit\n",
       "=============================================================================\n",
       "Model:                  Logit                 Pseudo R-squared:    0.085     \n",
       "Dependent Variable:     CROSS_SELL_SUCCESS    AIC:                 2044.8651 \n",
       "Date:                   2023-02-20 13:14      BIC:                 2137.8202 \n",
       "No. Observations:       1751                  Log-Likelihood:      -1005.4   \n",
       "Df Model:               16                    LL-Null:             -1098.9   \n",
       "Df Residuals:           1734                  LLR p-value:         3.3788e-31\n",
       "Converged:              1.0000                Scale:               1.0000    \n",
       "No. Iterations:         5.0000                                               \n",
       "-----------------------------------------------------------------------------\n",
       "                               Coef.  Std.Err.    z    P>|z|   [0.025  0.975]\n",
       "-----------------------------------------------------------------------------\n",
       "Intercept                     -2.3419   0.7066 -3.3141 0.0009 -3.7269 -0.9569\n",
       "REVENUE_BINARY                -0.0368   0.1377 -0.2670 0.7895 -0.3065  0.2330\n",
       "AVG_TIME_PER_SITE_VISIT_LEVEL  0.0930   0.0831  1.1187 0.2633 -0.0699  0.2559\n",
       "AVG_PREP_VID_TIME_BINARY       0.1265   0.1623  0.7798 0.4355 -0.1915  0.4446\n",
       "TOTAL_MEALS_ORDERED           -0.0007   0.0012 -0.5334 0.5937 -0.0031  0.0018\n",
       "UNIQUE_MEALS_PURCH             0.0447   0.0241  1.8575 0.0632 -0.0025  0.0918\n",
       "MOBILE_LOGINS                  0.2591   0.1039  2.4931 0.0127  0.0554  0.4628\n",
       "PC_LOGINS                      0.1784   0.0931  1.9158 0.0554 -0.0041  0.3610\n",
       "PRODUCT_CATEGORIES_VIEWED      0.0090   0.0180  0.5009 0.6164 -0.0263  0.0444\n",
       "TOTAL_PHOTOS_VIEWED           -0.0002   0.0003 -0.7132 0.4757 -0.0009  0.0004\n",
       "HAS_CANCELLATION               0.4490   0.1161  3.8664 0.0001  0.2214  0.6767\n",
       "HAS_WEEKLY                    -0.0598   0.1276 -0.4686 0.6393 -0.3100  0.1904\n",
       "LATE_DELIVERIES                0.0136   0.0147  0.9246 0.3552 -0.0153  0.0425\n",
       "LARGEST_ORDER_SIZE_BINARY      0.0353   0.1450  0.2436 0.8075 -0.2489  0.3196\n",
       "AVG_MEAN_RATING_SCALE         -0.4817   0.3955 -1.2180 0.2232 -1.2569  0.2935\n",
       "PERSONAL                       1.2304   0.1367  9.0016 0.0000  0.9625  1.4984\n",
       "PROFESSIONAL                   1.7318   0.1491 11.6115 0.0000  1.4395  2.0242\n",
       "=============================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# using each features best\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ REVENUE_BINARY +\n",
    "                                                           AVG_TIME_PER_SITE_VISIT_LEVEL +\n",
    "                                                           AVG_PREP_VID_TIME_BINARY +\n",
    "                                                           TOTAL_MEALS_ORDERED +\n",
    "                                                           UNIQUE_MEALS_PURCH +\n",
    "                                                           MOBILE_LOGINS +\n",
    "                                                           PC_LOGINS +\n",
    "                                                           PRODUCT_CATEGORIES_VIEWED + \n",
    "                                                           TOTAL_PHOTOS_VIEWED +\n",
    "                                                           HAS_CANCELLATION +\n",
    "                                                           HAS_WEEKLY +\n",
    "                                                           LATE_DELIVERIES +\n",
    "                                                           LARGEST_ORDER_SIZE_BINARY +\n",
    "                                                           AVG_MEAN_RATING_SCALE +\n",
    "                                                           PERSONAL + \n",
    "                                                           PROFESSIONAL\"\"\",\n",
    "                                                             data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full.summary2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "c38b2f41",
   "metadata": {
    "cell_style": "split",
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.575331\n",
      "         Iterations 5\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td>Model:</td>               <td>Logit</td>       <td>Pseudo R-squared:</td>    <td>0.083</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <td>Dependent Variable:</td> <td>CROSS_SELL_SUCCESS</td>       <td>AIC:</td>         <td>2038.8080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "         <td>Date:</td>         <td>2023-02-20 13:14</td>        <td>BIC:</td>         <td>2104.4233</td>\n",
       "</tr>\n",
       "<tr>\n",
       "   <td>No. Observations:</td>         <td>1751</td>         <td>Log-Likelihood:</td>    <td>-1007.4</td> \n",
       "</tr>\n",
       "<tr>\n",
       "       <td>Df Model:</td>              <td>11</td>             <td>LL-Null:</td>        <td>-1098.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "     <td>Df Residuals:</td>           <td>1739</td>          <td>LLR p-value:</td>    <td>2.4453e-33</td>\n",
       "</tr>\n",
       "<tr>\n",
       "      <td>Converged:</td>            <td>1.0000</td>            <td>Scale:</td>         <td>1.0000</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "    <td>No. Iterations:</td>         <td>5.0000</td>               <td></td>               <td></td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                <td></td>                 <th>Coef.</th>  <th>Std.Err.</th>    <th>z</th>     <th>P>|z|</th> <th>[0.025</th>  <th>0.975]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                     <td>-2.0437</td>  <td>0.6569</td>  <td>-3.1111</td> <td>0.0019</td> <td>-3.3313</td> <td>-0.7562</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_TIME_PER_SITE_VISIT_LEVEL</th> <td>0.1016</td>   <td>0.0667</td>  <td>1.5235</td>  <td>0.1276</td> <td>-0.0291</td> <td>0.2323</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_PREP_VID_TIME_BINARY</th>      <td>0.1313</td>   <td>0.1577</td>  <td>0.8323</td>  <td>0.4052</td> <td>-0.1778</td> <td>0.4403</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_MEALS_ORDERED</th>           <td>-0.0009</td>  <td>0.0012</td>  <td>-0.8002</td> <td>0.4236</td> <td>-0.0033</td> <td>0.0014</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MOBILE_LOGINS</th>                 <td>0.2562</td>   <td>0.1037</td>  <td>2.4702</td>  <td>0.0135</td> <td>0.0529</td>  <td>0.4595</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PC_LOGINS</th>                     <td>0.1772</td>   <td>0.0929</td>  <td>1.9083</td>  <td>0.0563</td> <td>-0.0048</td> <td>0.3593</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_PHOTOS_VIEWED</th>           <td>-0.0002</td>  <td>0.0003</td>  <td>-0.4743</td> <td>0.6353</td> <td>-0.0008</td> <td>0.0005</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HAS_CANCELLATION</th>              <td>0.4462</td>   <td>0.1159</td>  <td>3.8514</td>  <td>0.0001</td> <td>0.2191</td>  <td>0.6733</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LATE_DELIVERIES</th>               <td>0.0140</td>   <td>0.0147</td>  <td>0.9512</td>  <td>0.3415</td> <td>-0.0148</td> <td>0.0428</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_MEAN_RATING_SCALE</th>         <td>-0.4615</td>  <td>0.3838</td>  <td>-1.2024</td> <td>0.2292</td> <td>-1.2138</td> <td>0.2908</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PERSONAL</th>                      <td>1.2269</td>   <td>0.1364</td>  <td>8.9963</td>  <td>0.0000</td> <td>0.9596</td>  <td>1.4942</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PROFESSIONAL</th>                  <td>1.7310</td>   <td>0.1489</td>  <td>11.6281</td> <td>0.0000</td> <td>1.4392</td>  <td>2.0227</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary2.Summary'>\n",
       "\"\"\"\n",
       "                               Results: Logit\n",
       "=============================================================================\n",
       "Model:                  Logit                 Pseudo R-squared:    0.083     \n",
       "Dependent Variable:     CROSS_SELL_SUCCESS    AIC:                 2038.8080 \n",
       "Date:                   2023-02-20 13:14      BIC:                 2104.4233 \n",
       "No. Observations:       1751                  Log-Likelihood:      -1007.4   \n",
       "Df Model:               11                    LL-Null:             -1098.9   \n",
       "Df Residuals:           1739                  LLR p-value:         2.4453e-33\n",
       "Converged:              1.0000                Scale:               1.0000    \n",
       "No. Iterations:         5.0000                                               \n",
       "-----------------------------------------------------------------------------\n",
       "                               Coef.  Std.Err.    z    P>|z|   [0.025  0.975]\n",
       "-----------------------------------------------------------------------------\n",
       "Intercept                     -2.0437   0.6569 -3.1111 0.0019 -3.3313 -0.7562\n",
       "AVG_TIME_PER_SITE_VISIT_LEVEL  0.1016   0.0667  1.5235 0.1276 -0.0291  0.2323\n",
       "AVG_PREP_VID_TIME_BINARY       0.1313   0.1577  0.8323 0.4052 -0.1778  0.4403\n",
       "TOTAL_MEALS_ORDERED           -0.0009   0.0012 -0.8002 0.4236 -0.0033  0.0014\n",
       "MOBILE_LOGINS                  0.2562   0.1037  2.4702 0.0135  0.0529  0.4595\n",
       "PC_LOGINS                      0.1772   0.0929  1.9083 0.0563 -0.0048  0.3593\n",
       "TOTAL_PHOTOS_VIEWED           -0.0002   0.0003 -0.4743 0.6353 -0.0008  0.0005\n",
       "HAS_CANCELLATION               0.4462   0.1159  3.8514 0.0001  0.2191  0.6733\n",
       "LATE_DELIVERIES                0.0140   0.0147  0.9512 0.3415 -0.0148  0.0428\n",
       "AVG_MEAN_RATING_SCALE         -0.4615   0.3838 -1.2024 0.2292 -1.2138  0.2908\n",
       "PERSONAL                       1.2269   0.1364  8.9963 0.0000  0.9596  1.4942\n",
       "PROFESSIONAL                   1.7310   0.1489 11.6281 0.0000  1.4392  2.0227\n",
       "=============================================================================\n",
       "\n",
       "\"\"\""
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# using each features that p-value less than 0.5 at previous logit\n",
    "# instantiating a logistic regression model object\n",
    "logit_full = smf.logit(formula = \"\"\" CROSS_SELL_SUCCESS ~ AVG_TIME_PER_SITE_VISIT_LEVEL +\n",
    "                                                           AVG_PREP_VID_TIME_BINARY +\n",
    "                                                           TOTAL_MEALS_ORDERED +\n",
    "                                                           MOBILE_LOGINS +\n",
    "                                                           PC_LOGINS + \n",
    "                                                           TOTAL_PHOTOS_VIEWED +\n",
    "                                                           HAS_CANCELLATION +\n",
    "                                                           LATE_DELIVERIES +\n",
    "                                                           AVG_MEAN_RATING_SCALE +\n",
    "                                                           PERSONAL + \n",
    "                                                           PROFESSIONAL\"\"\",\n",
    "                                                             data    = apprentice_train)\n",
    "\n",
    "\n",
    "# fitting the model object\n",
    "logit_full = logit_full.fit()\n",
    "\n",
    "\n",
    "# checking the results SUMMARY\n",
    "logit_full.summary2()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "422dbf48",
   "metadata": {},
   "source": [
    "# Modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "0e6d8703",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# explanatory sets from last session\n",
    "\n",
    "# creating a dictionary to store candidate models\n",
    "\n",
    "candidate_dict = {\n",
    "\n",
    " # full model\n",
    " 'logit_full'   : ['AVG_TIME_PER_SITE_VISIT_LEVEL','AVG_PREP_VID_TIME_BINARY','TOTAL_MEALS_ORDERED','UNIQUE_MEALS_PURCH',\n",
    "                   'MOBILE_LOGINS','PC_LOGINS','PRODUCT_CATEGORIES_VIEWED','TOTAL_PHOTOS_VIEWED','HAS_CANCELLATION','HAS_WEEKLY',\n",
    "                   'LARGEST_ORDER_SIZE_BINARY','LATE_DELIVERIES','AVG_MEAN_RATING_SCALE','PERSONAL','PROFESSIONAL'],\n",
    " \n",
    "    \n",
    " # significant variables only (set 1)\n",
    " 'logit_sig'    : ['AVG_TIME_PER_SITE_VISIT_LEVEL','TOTAL_MEALS_ORDERED','TOTAL_PHOTOS_VIEWED','HAS_CANCELLATION',\n",
    "                   'AVG_MEAN_RATING_SCALE','PERSONAL','PROFESSIONAL'],\n",
    " \n",
    " # best\n",
    "  'logit_sig_2' : ['AVG_TIME_PER_SITE_VISIT_LEVEL','TOTAL_PHOTOS_VIEWED','CANCELLATION_SCALE',\n",
    "                   'AVG_MEAN_RATING_SCALE','PERSONAL','PROFESSIONAL'],\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "f6e1240b",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "/--------------------------\\\n",
      "|Explanatory Variable Sets |\n",
      "\\--------------------------/\n",
      "\n",
      "Full Model:\n",
      "-----------\n",
      "['AVG_TIME_PER_SITE_VISIT_LEVEL', 'AVG_PREP_VID_TIME_BINARY', 'TOTAL_MEALS_ORDERED', 'UNIQUE_MEALS_PURCH', 'MOBILE_LOGINS', 'PC_LOGINS', 'PRODUCT_CATEGORIES_VIEWED', 'TOTAL_PHOTOS_VIEWED', 'HAS_CANCELLATION', 'HAS_WEEKLY', 'LARGEST_ORDER_SIZE_BINARY', 'LATE_DELIVERIES', 'AVG_MEAN_RATING_SCALE', 'PERSONAL', 'PROFESSIONAL']\n",
      "\n",
      "\n",
      "First Significant p-value Model:\n",
      "---------------------------------\n",
      "['AVG_TIME_PER_SITE_VISIT_LEVEL', 'TOTAL_MEALS_ORDERED', 'TOTAL_PHOTOS_VIEWED', 'HAS_CANCELLATION', 'AVG_MEAN_RATING_SCALE', 'PERSONAL', 'PROFESSIONAL']\n",
      "\n",
      "\n",
      "Second Significant p-value Model:\n",
      "---------------------------------\n",
      "['AVG_TIME_PER_SITE_VISIT_LEVEL', 'TOTAL_PHOTOS_VIEWED', 'CANCELLATION_SCALE', 'AVG_MEAN_RATING_SCALE', 'PERSONAL', 'PROFESSIONAL']\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# printing candidate variable sets\n",
    "print(f\"\"\"\n",
    "/--------------------------\\\\\n",
    "|Explanatory Variable Sets |\n",
    "\\\\--------------------------/\n",
    "\n",
    "Full Model:\n",
    "-----------\n",
    "{candidate_dict['logit_full']}\n",
    "\n",
    "\n",
    "First Significant p-value Model:\n",
    "---------------------------------\n",
    "{candidate_dict['logit_sig']}\n",
    "\n",
    "\n",
    "Second Significant p-value Model:\n",
    "---------------------------------\n",
    "{candidate_dict['logit_sig_2']}\n",
    "\n",
    "\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "6cb3eb98",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# train/test split with the full model\n",
    "apprentice_data   =  apprentice.loc[ : , candidate_dict['logit_sig_2']]\n",
    "apprentice_target =  apprentice.loc[ : , 'CROSS_SELL_SUCCESS']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "15cd2a8c",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1\n",
       "1       0\n",
       "2       0\n",
       "3       1\n",
       "4       1\n",
       "       ..\n",
       "1941    0\n",
       "1942    1\n",
       "1943    0\n",
       "1944    1\n",
       "1945    0\n",
       "Name: CROSS_SELL_SUCCESS, Length: 1946, dtype: int64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking the amount of row\n",
    "apprentice_target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "1eb3a620",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT_LEVEL</th>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "      <th>CANCELLATION_SCALE</th>\n",
       "      <th>AVG_MEAN_RATING_SCALE</th>\n",
       "      <th>PERSONAL</th>\n",
       "      <th>PROFESSIONAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>456</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>680</td>\n",
       "      <td>0.153846</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>145</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>418</td>\n",
       "      <td>0.384615</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>174</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1941</th>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>0.076923</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1942</th>\n",
       "      <td>3</td>\n",
       "      <td>302</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943</th>\n",
       "      <td>3</td>\n",
       "      <td>310</td>\n",
       "      <td>0.076923</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944</th>\n",
       "      <td>4</td>\n",
       "      <td>275</td>\n",
       "      <td>0.230769</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0.153846</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      AVG_TIME_PER_SITE_VISIT_LEVEL  TOTAL_PHOTOS_VIEWED  CANCELLATION_SCALE  \\\n",
       "0                                 5                  456            0.384615   \n",
       "1                                 4                  680            0.153846   \n",
       "2                                 3                  145            0.000000   \n",
       "3                                 3                  418            0.384615   \n",
       "4                                 3                  174            0.000000   \n",
       "...                             ...                  ...                 ...   \n",
       "1941                              2                   16            0.076923   \n",
       "1942                              3                  302            0.000000   \n",
       "1943                              3                  310            0.076923   \n",
       "1944                              4                  275            0.230769   \n",
       "1945                              3                    5            0.153846   \n",
       "\n",
       "      AVG_MEAN_RATING_SCALE  PERSONAL  PROFESSIONAL  \n",
       "0                  0.428571         1             0  \n",
       "1                  0.357143         0             1  \n",
       "2                  0.642857         1             0  \n",
       "3                  0.500000         1             0  \n",
       "4                  0.500000         0             1  \n",
       "...                     ...       ...           ...  \n",
       "1941               0.428571         0             0  \n",
       "1942               0.357143         0             1  \n",
       "1943               0.357143         0             0  \n",
       "1944               0.357143         0             1  \n",
       "1945               0.285714         0             1  \n",
       "\n",
       "[1946 rows x 6 columns]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking the amount of row\n",
    "apprentice_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "463a6d1b",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# splitting data into test and train \n",
    "x_train, x_test, y_train, y_test = train_test_split(\n",
    "            apprentice_data,\n",
    "            apprentice_target,\n",
    "            random_state = 219,\n",
    "            test_size    = 0.10,\n",
    "            stratify     = apprentice_target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "610602f4",
   "metadata": {
    "cell_style": "center",
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# defining the vizualizing confusion matrix\n",
    "def visual_cm(true_y, pred_y, labels = None):\n",
    "    \"\"\"\n",
    "Creates a visualization of a confusion matrix.\n",
    "\n",
    "PARAMETERS\n",
    "----------\n",
    "true_y : true values for the response variable\n",
    "pred_y : predicted values for the response variable\n",
    "labels : , default None\n",
    "    \"\"\"\n",
    "    # visualizing the confusion matrix\n",
    "\n",
    "    # setting labels\n",
    "    lbls = labels\n",
    "    \n",
    "\n",
    "    # declaring a confusion matrix object\n",
    "    cm = confusion_matrix(y_true = true_y,\n",
    "                          y_pred = pred_y)\n",
    "\n",
    "\n",
    "    # heatmap\n",
    "    sns.heatmap(cm,\n",
    "                annot       = True,\n",
    "                xticklabels = lbls,\n",
    "                yticklabels = lbls,\n",
    "                cmap        = 'Blues',\n",
    "                fmt         = 'g')\n",
    "\n",
    "\n",
    "    plt.xlabel('Predicted')\n",
    "    plt.ylabel('Actual')\n",
    "    plt.title('Confusion Matrix of the Classifier')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "73e08183",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# defining the importance checker\n",
    "def plot_feature_importances(model, train, export = False):\n",
    "    \"\"\"\n",
    "    Plots the importance of features from a CART model.\n",
    "    \n",
    "    PARAMETERS\n",
    "    ----------\n",
    "    model  : CART model\n",
    "    train  : explanatory variable training data\n",
    "    export : whether or not to export as a .png image, default False\n",
    "    \"\"\"\n",
    "    \n",
    "    # declaring the number\n",
    "    n_features = x_train.shape[1]\n",
    "    \n",
    "    # setting plot window\n",
    "    fig, ax = plt.subplots(figsize=(12,9))\n",
    "    \n",
    "    plt.barh(range(n_features), model.feature_importances_, align='center')\n",
    "    plt.yticks(np.arange(n_features), train.columns)\n",
    "    plt.xlabel(\"Feature importance\")\n",
    "    plt.ylabel(\"Feature\")\n",
    "    \n",
    "    if export == True:\n",
    "        plt.savefig('Tree_Leaf_50_Feature_Importance.png')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ebd9876",
   "metadata": {},
   "source": [
    "## KNN Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "4120d7d7",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# user define to get optimal neighbors\n",
    "def optimal_neighbors(x_data,\n",
    "                      y_data,\n",
    "                      standardize   = True,\n",
    "                      pct_test      = 0.1,\n",
    "                      seed          = 219,\n",
    "                      response_type = 'reg',\n",
    "                      max_neighbors = 100,\n",
    "                      show_viz      = True):\n",
    "    \"\"\"\n",
    "Exhaustively compute training and testing results for KNN across\n",
    "[1, max_neighbors]. Outputs the maximum test score and (by default) a\n",
    "visualization of the results.\n",
    "PARAMETERS\n",
    "----------\n",
    "x_data        : explanatory variable data\n",
    "y_data        : response variable\n",
    "standardize   : whether or not to standardize the x data, default True\n",
    "pct_test      : test size for training and validation from (0,1), default 0.25\n",
    "seed          : random seed to be used in algorithm, default 219\n",
    "response_type : type of neighbors algorithm to use, default 'reg'\n",
    "    Use 'reg' for regression (KNeighborsRegressor)\n",
    "    Use 'class' for classification (KNeighborsClassifier)\n",
    "max_neighbors : maximum number of neighbors in exhaustive search, default 20\n",
    "show_viz      : display or surpress k-neigbors visualization, default True\n",
    "\"\"\"    \n",
    "    \n",
    "    \n",
    "    if standardize == True:\n",
    "        # optionally standardizing x_data\n",
    "        scaler             = StandardScaler()\n",
    "        scaler.fit(x_data)\n",
    "        x_scaled           = scaler.transform(x_data)\n",
    "        x_scaled_df        = pd.DataFrame(x_scaled)\n",
    "        x_data             = x_scaled_df\n",
    "\n",
    "\n",
    "\n",
    "    # train-test split\n",
    "    x_train, x_test, y_train, y_test = train_test_split(x_data,\n",
    "                                                        y_data,\n",
    "                                                        test_size = pct_test,\n",
    "                                                        random_state = seed)\n",
    "\n",
    "\n",
    "    # creating lists for training set accuracy and test set accuracy\n",
    "    training_accuracy = []\n",
    "    test_accuracy = []\n",
    "    \n",
    "    \n",
    "    # setting neighbor range\n",
    "    neighbors_settings = range(1, max_neighbors + 1)\n",
    "\n",
    "\n",
    "    for n_neighbors in neighbors_settings:\n",
    "        # building the model based on response variable type\n",
    "        if response_type == 'reg':\n",
    "            clf = KNeighborsRegressor(n_neighbors = n_neighbors)\n",
    "            clf.fit(x_train, y_train)\n",
    "            \n",
    "        elif response_type == 'class':\n",
    "            clf = KNeighborsClassifier(n_neighbors = n_neighbors)\n",
    "            clf.fit(x_train, y_train)            \n",
    "            \n",
    "        else:\n",
    "            print(\"Error: response_type must be 'reg' or 'class'\")\n",
    "        \n",
    "        \n",
    "        # recording the training set accuracy\n",
    "        training_accuracy.append(clf.score(x_train, y_train))\n",
    "    \n",
    "        # recording the generalization accuracy\n",
    "        test_accuracy.append(clf.score(x_test, y_test))\n",
    "\n",
    "\n",
    "    # optionally displaying visualization\n",
    "    if show_viz == True:\n",
    "        # plotting the visualization\n",
    "        fig, ax = plt.subplots(figsize=(12,8))\n",
    "        plt.plot(neighbors_settings, training_accuracy, label = \"training accuracy\")\n",
    "        plt.plot(neighbors_settings, test_accuracy, label = \"test accuracy\")\n",
    "        plt.ylabel(\"Accuracy\")\n",
    "        plt.xlabel(\"n_neighbors\")\n",
    "        plt.legend()\n",
    "        plt.show()\n",
    "    \n",
    "    \n",
    "    # returning optimal number of neighbors\n",
    "    print(f\"The optimal number of neighbors is: {test_accuracy.index(max(test_accuracy))+1}\")\n",
    "    return test_accuracy.index(max(test_accuracy))+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "aeda1872",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The optimal number of neighbors is: 13\n"
     ]
    }
   ],
   "source": [
    "# determining the optimal number of neighbors\n",
    "opt_neighbors = optimal_neighbors(x_data        = apprentice_data,\n",
    "                                  y_data        = apprentice_target,\n",
    "                                  response_type = 'class')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "1aaccffe",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is my best model\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "Model Name        : Knn\n",
      "Training ACCURACY : 0.7407\n",
      "Testing  ACCURACY : 0.7231\n",
      "Train-Test Gap    : 0.0176\n",
      "AUC Score         : 0.6295\n",
      "Confusion_matrix: \n",
      "[[ 23  40]\n",
      " [ 14 118]]\n"
     ]
    }
   ],
   "source": [
    "# setting model name\n",
    "model_name = 'Knn'\n",
    "\n",
    "# instantiating StandardScaler()\n",
    "scaler = StandardScaler()\n",
    "\n",
    "\n",
    "# fitting the data\n",
    "scaler.fit(apprentice_data)\n",
    "\n",
    "\n",
    "# transforming the data\n",
    "x_scaled     = scaler.transform(apprentice_data)\n",
    "\n",
    "\n",
    "# converting to a DataFrame\n",
    "x_scaled_df  = pd.DataFrame(x_scaled) \n",
    "\n",
    "\n",
    "# train-test split with the scaled data\n",
    "x_train_scaled, x_test_scaled, y_train_scaled, y_test_scaled = train_test_split(\n",
    "            x_scaled_df,\n",
    "            apprentice_target,\n",
    "            random_state = 219,\n",
    "            test_size    = 0.10,\n",
    "            stratify     = apprentice_target)\n",
    "\n",
    "\n",
    "# instantiating model\n",
    "knn = KNeighborsClassifier(n_neighbors   = opt_neighbors,\n",
    "                               algorithm = 'ball_tree',\n",
    "                               weights   = 'uniform',\n",
    "                               p         = 2)\n",
    "\n",
    "\n",
    "# fitting the training data\n",
    "knn_fit = knn.fit(x_train_scaled, y_train_scaled)\n",
    "\n",
    "\n",
    "# predicting based on the testing set\n",
    "knn_pred = knn_fit.predict(x_test_scaled)\n",
    "\n",
    "\n",
    "# saving scoring data\n",
    "knn_train_score = knn_fit.score(x_train_scaled, y_train_scaled).round(4)\n",
    "knn_test_score  = knn_fit.score(x_test_scaled, y_test_scaled).round(4)\n",
    "\n",
    "\n",
    "# saving AUC score\n",
    "knn_auc_score   = roc_auc_score(y_true  = y_test,\n",
    "                                          y_score = knn_pred).round(4)\n",
    "\n",
    "\n",
    "# scoring the results\n",
    "print(f\"\"\"\n",
    "This is my best model\n",
    "\n",
    "\n",
    "\n",
    "\"\"\")\n",
    "print(f'Model Name        : {model_name}')\n",
    "print(f'Training ACCURACY : {knn_fit.score(x_train_scaled, y_train_scaled).round(4)}')\n",
    "print(f'Testing  ACCURACY : {knn_fit.score(x_test_scaled, y_test_scaled).round(4)}')\n",
    "print(f'Train-Test Gap    : {abs(knn_train_score - knn_test_score).round(4)}')\n",
    "print(f'AUC Score         : {knn_auc_score.round(4)}')\n",
    "print(f\"\"\"Confusion_matrix: \n",
    "{confusion_matrix(y_true = y_test, y_pred = knn_pred)}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "ba7edd16",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Name     : Knn\n",
      "True Negatives : 23\n",
      "False Positives: 40\n",
      "False Negatives: 14\n",
      "True Positives : 118\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# unpacking the confusion matrix\n",
    "knn_tn, \\\n",
    "knn_fp, \\\n",
    "knn_fn, \\\n",
    "knn_tp = confusion_matrix(y_true = y_test, y_pred = knn_pred).ravel()\n",
    "\n",
    "\n",
    "# printing each result one-by-one\n",
    "print(f\"\"\"\n",
    "Model Name     : {model_name}\n",
    "True Negatives : {knn_tn}\n",
    "False Positives: {knn_fp}\n",
    "False Negatives: {knn_fn}\n",
    "True Positives : {knn_tp}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "856b4455",
   "metadata": {},
   "source": [
    "# Appendix"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fb58c96",
   "metadata": {},
   "source": [
    "##  Logistic Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "634e57cd",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3600"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# declaring a hyperparameter space\n",
    "penalty_range  = ['l1', 'l2', 'elasticnet', 'none']\n",
    "c_range        = range(1, 100, 10) \n",
    "solver_range   = ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n",
    "max_iter_range = range(100, 1000, 50)\n",
    "\n",
    "# checking the amoung of conbinations\n",
    "len(penalty_range)*len(c_range)*len(solver_range)*len(max_iter_range)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "0c8e7b50",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_sag.py:352: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1483: UserWarning: Setting penalty='none' will ignore the C and l1_ratio parameters\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tuned Parameters  : {'solver': 'lbfgs', 'penalty': 'l2', 'max_iter': 800, 'C': 91}\n",
      "Tuned Training R-Square: 0.7236\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:372: FitFailedWarning: \n",
      "10 fits failed out of a total of 50.\n",
      "The score on these train-test partitions for these parameters will be set to nan.\n",
      "If these failures are not expected, you can try to debug them by setting error_score='raise'.\n",
      "\n",
      "Below are more details about the failures:\n",
      "--------------------------------------------------------------------------------\n",
      "5 fits failed with the following error:\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 680, in _fit_and_score\n",
      "    estimator.fit(X_train, y_train, **fit_params)\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 1461, in fit\n",
      "    solver = _check_solver(self.solver, self.penalty, self.dual)\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 447, in _check_solver\n",
      "    raise ValueError(\n",
      "ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n",
      "\n",
      "--------------------------------------------------------------------------------\n",
      "5 fits failed with the following error:\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 680, in _fit_and_score\n",
      "    estimator.fit(X_train, y_train, **fit_params)\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 1461, in fit\n",
      "    solver = _check_solver(self.solver, self.penalty, self.dual)\n",
      "  File \"/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 457, in _check_solver\n",
      "    raise ValueError(\n",
      "ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.\n",
      "\n",
      "  warnings.warn(some_fits_failed_message, FitFailedWarning)\n",
      "/Users/tatsuya/opt/anaconda3/lib/python3.8/site-packages/sklearn/model_selection/_search.py:969: UserWarning: One or more of the test scores are non-finite: [       nan        nan 0.67904111 0.72300204 0.67904111 0.67904111\n",
      " 0.67904111 0.72300204 0.72357184 0.72300204]\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "# creating a hyperparameter grid\n",
    "param_grid = {'penalty'  : penalty_range,\n",
    "              'C'        : c_range,\n",
    "              'solver'   : solver_range,\n",
    "              'max_iter' : max_iter_range}\n",
    "\n",
    "\n",
    "# instantiating the model \n",
    "logreg = LogisticRegression(random_state = 219)\n",
    "\n",
    "\n",
    "# RandomizedSearchCV object\n",
    "logreg_cv = RandomizedSearchCV(estimator             = logreg,\n",
    "                                param_distributions   = param_grid,\n",
    "                                cv                    = 5,\n",
    "                                random_state          = 219)\n",
    "\n",
    "\n",
    "# fittngto the data\n",
    "logreg_cv.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# printing the optimal parameters and best score\n",
    "print(\"Tuned Parameters  :\", logreg_cv.best_params_)\n",
    "print(\"Tuned Training R-Square:\", logreg_cv.best_score_.round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "8975970c",
   "metadata": {
    "code_folding": [],
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Name        : Logistic Model\n",
      "Training ACCURACY : 0.723\n",
      "Testing  ACCURACY : 0.7077\n",
      "Train-Test Gap    : 0.0153\n",
      "AUC SCORE         : 0.6016\n",
      "Confusion_matrix: \n",
      "[[ 19  44]\n",
      " [ 13 119]]\n"
     ]
    }
   ],
   "source": [
    "# setting model name\n",
    "model_name = 'Logistic Model'\n",
    "\n",
    "# instantiating model\n",
    "logreg = LogisticRegression(solver       = 'lbfgs',\n",
    "                            penalty      = 'l2',\n",
    "                            max_iter     = 800,\n",
    "                            C            = 91,\n",
    "                            random_state = 219)\n",
    "\n",
    "\n",
    "# fitting the training data\n",
    "logreg_fit = logreg.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# predicting based on the testing set\n",
    "logreg_pred = logreg_fit.predict(x_test)\n",
    "\n",
    "\n",
    "# saving scoring data for future use\n",
    "logreg_train_score = logreg_fit.score(x_train, y_train).round(4) # accuracy\n",
    "logreg_test_score  = logreg_fit.score(x_test, y_test).round(4)   # accuracy\n",
    "\n",
    "# saving AUC score for future use\n",
    "logreg_auc_score = roc_auc_score(y_true  = y_test,\n",
    "                                 y_score = logreg_pred).round(4)\n",
    "\n",
    "# scroring the results\n",
    "print(f'Model Name        : {model_name}')\n",
    "print(f'Training ACCURACY : {logreg_fit.score(x_train, y_train).round(4)}')\n",
    "print(f'Testing  ACCURACY : {logreg_fit.score(x_test, y_test).round(4)}')\n",
    "print(f'Train-Test Gap    : {abs(logreg_train_score - logreg_test_score).round(4)}')\n",
    "print(f'AUC SCORE         : {roc_auc_score(y_true  = y_test,y_score = logreg_pred).round(decimals = 4)}')\n",
    "print(f\"\"\"Confusion_matrix: \n",
    "{confusion_matrix(y_true = y_test, y_pred = logreg_pred)}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "09e0e0e2",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "True Negatives : 19\n",
      "False Positives: 44\n",
      "False Negatives: 13\n",
      "True Positives : 119\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# unpacking the confusion matrix\n",
    "logreg_tn, \\\n",
    "logreg_fp, \\\n",
    "logreg_fn, \\\n",
    "logreg_tp = confusion_matrix(y_true = y_test, y_pred = logreg_pred).ravel()\n",
    "\n",
    "\n",
    "# printing each result one-by-one\n",
    "print(f\"\"\"\n",
    "True Negatives : {logreg_tn}\n",
    "False Positives: {logreg_fp}\n",
    "False Negatives: {logreg_fn}\n",
    "True Positives : {logreg_tp}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "6cd19832",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calling the visual_cm function\n",
    "visual_cm(true_y = y_test,\n",
    "          pred_y = logreg_pred,\n",
    "          labels = ['CROSS_SELL_FAIL', 'CROSS_SELL_SUCCESS'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e589f2dd",
   "metadata": {},
   "source": [
    "##  CART Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "56dadf1a",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "113280"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# declaring a hyperparameter space\n",
    "criterion_range         = [\"gini\", \"entropy\"]\n",
    "splitter_range          = [\"best\", \"random\"] \n",
    "max_depth_range         = range(1, 9, 1)\n",
    "min_samples_split_range = range(2, 61, 1)\n",
    "min_samples_leaf_range  = range(1, 61, 1)\n",
    "\n",
    "# checking the amoung of conbinations\n",
    "len(criterion_range)*len(splitter_range)*len(max_depth_range)*len(min_samples_split_range)*len(min_samples_leaf_range)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "76a027ac",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tuned Parameters  : {'splitter': 'best', 'min_samples_split': 60, 'min_samples_leaf': 20, 'max_depth': 3, 'criterion': 'entropy'}\n",
      "Tuned Training R-Square: 0.7247\n"
     ]
    }
   ],
   "source": [
    "# creating a hyperparameter grid\n",
    "param_grid = {'criterion'         : criterion_range,\n",
    "              'splitter'          : splitter_range,\n",
    "              'max_depth'         : max_depth_range ,\n",
    "              'min_samples_split' : min_samples_split_range,\n",
    "              'min_samples_leaf'  : min_samples_leaf_range}\n",
    "\n",
    "\n",
    "# instantiating the model \n",
    "full_tree = DecisionTreeClassifier(random_state = 219)\n",
    "\n",
    "\n",
    "# RandomizedSearchCV object\n",
    "full_tree_cv = RandomizedSearchCV(estimator              = full_tree,\n",
    "                                   param_distributions   = param_grid,\n",
    "                                   cv                    = 5,\n",
    "                                   random_state          = 219)\n",
    "\n",
    "\n",
    "# fitting to data\n",
    "full_tree_cv.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# printing the optimal parameters and best score\n",
    "print(\"Tuned Parameters  :\", full_tree_cv.best_params_)\n",
    "print(\"Tuned Training R-Square:\", full_tree_cv.best_score_.round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "1a0b16c3",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Name          : CART Model\n",
      "Training ACCURACY   : 0.7276\n",
      "Testing ACCURACY    : 0.6974\n",
      "Train-Test Gap      : 0.0302\n",
      "AUC Score           : 0.5691\n",
      "Confusion_matrix  : \n",
      "[[ 13  50]\n",
      " [  9 123]]\n"
     ]
    }
   ],
   "source": [
    "# setting model name\n",
    "model_name = 'CART Model'\n",
    "\n",
    "# instantiating model \n",
    "full_tree = DecisionTreeClassifier(criterion        = 'entropy',\n",
    "                                   splitter         = 'best',\n",
    "                                   max_depth        = 3,\n",
    "                                   min_samples_split= 60,\n",
    "                                   min_samples_leaf = 20,\n",
    "                                   random_state     = 219\n",
    "                                  )\n",
    "\n",
    "\n",
    "# fitting the training data\n",
    "full_tree_fit = full_tree.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# predicting on new data\n",
    "full_tree_pred = full_tree_fit.predict(x_test)\n",
    "\n",
    "# saving scoring data for future use\n",
    "full_tree_train_score = full_tree_fit.score(x_train, y_train).round(4) # accuracy\n",
    "full_tree_test_score  = full_tree_fit.score(x_test, y_test).round(4)   # accuracy\n",
    "\n",
    "# saving AUC\n",
    "full_tree_auc_score   = roc_auc_score(y_true  = y_test,\n",
    "                                      y_score = full_tree_pred).round(4) # auc\n",
    "\n",
    "# scoring the model\n",
    "print(f'Model Name          : {model_name}')\n",
    "print(f'Training ACCURACY   : {full_tree_fit.score(x_train, y_train).round(4)}')\n",
    "print(f'Testing ACCURACY    : {full_tree_fit.score(x_test, y_test).round(4)}')\n",
    "print(f'Train-Test Gap      : {abs(full_tree_train_score - full_tree_test_score).round(4)}')\n",
    "print(f'AUC Score           : {roc_auc_score(y_true  = y_test, y_score = full_tree_pred).round(4)}')\n",
    "print(f\"\"\"Confusion_matrix  : \n",
    "{confusion_matrix(y_true = y_test, y_pred = full_tree_pred)}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "2b455434",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "True Negatives : 13\n",
      "False Positives: 50\n",
      "False Negatives: 9\n",
      "True Positives : 123\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# unpacking the confusion matrix\n",
    "full_tree_tn, \\\n",
    "full_tree_fp, \\\n",
    "full_tree_fn, \\\n",
    "full_tree_tp = confusion_matrix(y_true = y_test, y_pred = full_tree_pred).ravel()\n",
    "\n",
    "\n",
    "# printing each result one-by-one\n",
    "print(f\"\"\"\n",
    "True Negatives : {full_tree_tn}\n",
    "False Positives: {full_tree_fp}\n",
    "False Negatives: {full_tree_fn}\n",
    "True Positives : {full_tree_tp}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "70945fbc",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calling the visual_cm function\n",
    "visual_cm(true_y = y_test,\n",
    "          pred_y = full_tree_pred,\n",
    "          labels = ['CROSS_SELL_FAIL', 'CROSS_SELL_SUCCESS'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "be5e8105",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABLsAAAL0CAYAAADk2DV4AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAABqNUlEQVR4nO3debhd490//vfJLDkZiCERkYhMkqBqphVppVFza0o0xlC+ZjXTEkPEo0+KatFykvAoYqqiqi0S81iiCMETKSpplQzEkGn//vDLfmznJHIicVher+ta15Wz1r3u9VnrPqu9ztu9711VKpVKAQAAAIACaNTQBQAAAADA8iLsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAojCYNXQDw1bNw4cK8+eabad26daqqqhq6HAAAAAquVCrl3XffzZprrplGjZY8d0vYBdTbm2++mc6dOzd0GQAAAHzNvP7661lrrbWW2EbYBdRb69atk3z8PzJt2rRp4GoAAAAoutmzZ6dz587lv0eXRNgF1Nuijy62adNG2AUAAMAXZmmW0rFAPQAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMJo0tAFAF9d/c78cxo1b9nQZQAAwHI39fwdG7oEYBmZ2QUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB28YU74IADUlVVlaqqqjRt2jTdunXLCSeckDlz5mTq1KnlY1VVVWnbtm222GKL3H777bX6+eCDD3LmmWemV69ead68eVZdddXsscceef755yvaDR8+vKLPRdvdd9+9xOO9e/cu9zFlypQMGTIka665Zlq0aJG11loru+66a1566aVym/Hjx2fAgAFZZZVV0rJly/To0SP7779/5s+fnySZMGFCqqqqMnPmzPI5CxYsyIUXXpgNNtggLVq0SLt27fL9738/Dz30UMU9jB07NlVVVdl+++0r9s+cOTNVVVWZMGFCrefz4x//OI0bN871119f69jw4cPzjW98o+4BAgAAgK8wYRcNYvvtt8+0adMyZcqUnHvuubn00ktzwgknlI/ffffdmTZtWh577LFsttlm2X333fPcc8+Vj3/00UfZbrvtMnr06Jxzzjl56aWXcuedd2bBggXZfPPN8+ijj1Zcr2/fvpk2bVrFts022yzx+IMPPpgkmTt3bgYOHJjZs2fnlltuyeTJkzNu3Lj069cvs2bNSpI8//zz+f73v59NN900999/f5599tlccskladq0aRYuXFjnMyiVShk8eHDOPvvsHH300XnhhRdy3333pXPnztl2221z6623VrRv0qRJ7rnnnowfP/4zn+/777+fcePG5cQTT0xNTc1ntgcAAICiaNLQBfD11Lx583To0CFJss8++2T8+PG59dZbc/LJJydJ2rdvnw4dOqRDhw4ZMWJELrnkkowfPz79+vVLklx00UV55JFH8vTTT2fDDTdMknTp0iU333xzNt988wwbNizPPfdcqqqqknwcFC26Xl2WdHzSpEmZMmVK7r333nTp0qV8ra233rrc5q9//Ws6duyYCy64oLxv3XXXrTUT65NuuOGG3HTTTbntttuy8847l/f/9re/zdtvv52DDz44AwcOTKtWrZIkrVq1yl577ZVTTjkljz322GL7TZIbb7wxffr0yamnnpqOHTtm6tSp6dq16xLPAQAAgCIws4svhZVWWinz5s2rtX/evHm54oorkiRNmzYt77/22mszcODActC1SKNGjXLcccdl0qRJeeaZZ5ZLbauttloaNWqUm266KQsWLKizTYcOHTJt2rTcf//9S93vtddem549e1YEXYscf/zxefvtt/PXv/61Yv/w4cPz7LPP5qabblpi3zU1NRk6dGjatm2bHXbYIWPGjFnqugAAAOCrTNhFg3v88cdz7bXX5rvf/W5531ZbbZXq6uq0aNEixx9/fLp27Zq99tqrfPyll17KeuutV2d/i/Z/cj2tZ599NtXV1eVts802qzjn08erq6tz8MEHJ0k6deqUX/7ylznjjDOy8sor5zvf+U7OOeecTJkypXz+nnvumSFDhqR///7p2LFjfvCDH+RXv/pVZs+evdj7ru89JMmaa66ZY445Jqeffnp5LbBPe/nll/Poo49m7733TpIMHTo0Y8aMWezHKZfGRx99lNmzZ1dsAAAA8GUk7KJB3HHHHeUwa8stt8w222yTSy65pHx83Lhxefrpp3Pbbbele/fuufLKK7PKKqssVd+lUilJyh9hTJJevXpl4sSJ5e3mm2+uOOfTxydOnJgRI0aUjx9xxBGZPn16rrnmmmy55Za58cYb07dv3/LMq8aNG2fMmDF54403csEFF2TNNdfMiBEjymuBLatP3sMiJ598ct56662MHj26znNqamoyaNCgrLrqqkmSHXbYIXPmzCkvyL8sRo4cmbZt25a3zp07L3NfAAAAsCIJu2gQAwYMyMSJEzN58uR8+OGHueWWW7L66quXj3fu3Dk9evTIjjvumCuvvDJ77713/v3vf5eP9+zZM5MmTaqz7xdffDFJ0qNHj/K+Zs2apXv37uXt02HNp4937949a6yxRkWb1q1bZ5dddsmIESPyzDPP5Nvf/nbOPffcijadOnXKvvvum1//+teZNGlSPvzww1x++eV11rmke3jhhRdq3cMi7dq1y6mnnpqzzjor77//fsWxBQsW5Oqrr84f//jHNGnSJE2aNEnLli3zzjvvfK6F6k899dTMmjWrvL3++uvL3BcAAACsSMIuGkSrVq3SvXv3dOnSpWItrrr0798//fr1q5hpNXjw4Nx999211uVauHBhLrzwwvTp06fWel7LU1VVVXr37p05c+Ysts3KK6+cjh07LrbN4MGD8/LLL+f222+vdWzUqFFp3759Bg4cWOe5Rx11VBo1apSLL764Yv+dd96Zd999N08//XTFLLUbb7wxt956a95+++163OX/ad68edq0aVOxAQAAwJeRb2PkK+H444/PnnvumZNOOimdOnXKcccdlz/84Q/ZeeedM2rUqGy++eb517/+lfPOOy8vvPBC7r777jo/Arg48+fPz/Tp0yv2VVVVZY011sjEiRNz5plnZt99902fPn3SrFmz3HfffRk9enT52yN/85vfZOLEifnBD36QddddNx9++GGuvvrqPP/88xUfz/ykwYMH58Ybb8z++++fn//85/nud7+b2bNn59e//nVuu+223HjjjeVvYvy0Fi1a5KyzzsoRRxxRsb+mpiY77rhjraCvb9++OfbYY3PNNdfkmGOOSZJ88MEHmThxYkW76urqdO/efamfGwAAAHzZCLv4Sthpp53StWvXjBgxIpdeemlatGiRe++9NyNHjsxpp52Wf/zjH2ndunUGDBiQRx99NP369atX/88//3w6duxYsa958+b58MMPs9Zaa6Vr164566yzMnXq1FRVVZV/Pu6445Ikm222WR588MEcdthhefPNN1NdXZ2+ffvm1ltvTf/+/eu8ZlVVVW644YZcfPHFufDCC3PEEUekefPm2XLLLTN+/Ph861vfWmLN+++/f0aNGlX+KOS//vWv/PGPf8y1115b57V++MMfpqamphx2vfTSS9loo40q2vXv3z8TJkxYqmcGAAAAX0ZVpUWreQMspdmzZ3+8UP2xN6RR85YNXQ4AACx3U8/fsaFLAD5h0d+hs2bN+syldazZBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFEaThi4A+Op67qxBadOmTUOXAQAAAGVmdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACF0aShCwC+uvqd+ec0at6yocsAAABgGUw9f8eGLmGFMLMLAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7OJr5YADDkhVVVWqqqrStGnTdOvWLSeccELmzJmTqVOnlo99env00UeTJGPHjq3Yv8Yaa2TnnXfO888/X3Gdf//73zn00EOz9tprp3nz5unQoUMGDRqURx55pKLdww8/nB122CErr7xyWrRokfXXXz+jRo3KggULKtpVVVWlRYsW+cc//lGxf7fddssBBxxQ6z4ffvjhNG7cONtvv32tY4vuc+LEicvwBAEAAODLTdjF187222+fadOmZcqUKTn33HNz6aWX5oQTTigfv/vuuzNt2rSKbeONNy4fb9OmTaZNm5Y333wzf/zjHzNnzpzsuOOOmTt3brnN7rvvnmeeeSZXXXVVXnrppdx2223Zdttt884775Tb/P73v0///v2z1lprZfz48XnxxRdzzDHHZMSIERk8eHBKpVJF3VVVVTnjjDOW6h5Hjx6do446Kg8++GBee+21ZX1UAAAA8JXTpKELgC/aoplWSbLPPvtk/PjxufXWW3PyyScnSdq3b18+Xpeqqqry8Y4dO+a4447LLrvsksmTJ2f99dfPzJkz8+CDD2bChAnp379/kqRLly7ZbLPNyn3MmTMnhxxySHbZZZf89re/Le8/+OCDs8Yaa2SXXXbJDTfckL333rt87KijjsqoUaNywgknZP31119sfXPmzMkNN9yQJ554ItOnT8/YsWOXOiQDAACArzozu/jaW2mllTJv3rxlOnfmzJm59tprkyRNmzZNklRXV6e6ujq33nprPvroozrP+8tf/pK33367YkbZIjvvvHN69uyZ6667rmL/VlttlZ122imnnnrqEmsaN25cevXqlV69emXo0KEZM2ZMrVli9fXRRx9l9uzZFRsAAAB8GQm7+Fp7/PHHc+211+a73/1ued9WW21VDqwWbZ9cQ2vWrFmprq5Oq1atsvLKK+f666/PLrvskt69eydJmjRpkrFjx+aqq65Ku3btsvXWW+e0007L3//+93IfL730UpJkvfXWq7Ou3r17l9t80siRI3PXXXflgQceWOw91dTUZOjQoUk+/sjme++9l3vuuaceT6W2kSNHpm3btuWtc+fOn6s/AAAAWFGEXXzt3HHHHamurk6LFi2y5ZZbZptttskll1xSPj5u3LhMnDixYmvcuHH5eOvWrTNx4sT87W9/y+WXX5511103l19+ecU1dt9997z55pu57bbbMmjQoEyYMCHf/OY3M3bs2Ip2i5txVSqVUlVVVWt/nz59st9++5U/cvlpkydPzuOPP57Bgwcn+Th423vvvTN69OilejaLc+qpp2bWrFnl7fXXX/9c/QEAAMCKYs0uvnYGDBiQyy67LE2bNs2aa65Z/vjh1KlTkySdO3dO9+7dF3t+o0aNysd79+6d6dOnZ++99879999f0a5FixYZOHBgBg4cmDPOOCMHH3xwzjzzzBxwwAHp2bNnkuSFF17IVlttVesaL774Yvr06VPn9c8666z07Nkzt956a61jNTU1mT9/fjp16lTeVyqV0rRp08yYMSMrr7zy4h/MEjRv3jzNmzdfpnMBAADgi2RmF187rVq1Svfu3dOlS5dy0PV5HHfccXnmmWfy+9//font+vTpkzlz5iRJvve972WVVVbJqFGjarW77bbb8vLLL2fIkCF19tO5c+cceeSROe200yo+Xjl//vxcffXVGTVqVMWstGeeeSZdunTJ7373u89xlwAAAPDVYGYXfMrbb7+d6dOnV+xr165dWrRoUWf7Nm3alGdt7bbbbnnnnXey55575qCDDsoGG2yQ1q1b58knn8wFF1yQXXfdNcnHgdtvfvObDB48OD/+8Y9z5JFHpk2bNrnnnnty4oknZo899shee+212BpPPfXUXHHFFXn11VfL39h4xx13ZMaMGRk2bFjatm1b0X6PPfZITU1NjjzyyPK+yZMn1+q3T58+adas2dI9KAAAAPgSMrMLPmW77bZLx44dK7a6PjL4Scccc0xeeOGF3Hjjjamurs7mm2+eCy+8MNtss0369euXn/3sZznkkEPyq1/9qnzOHnvskfHjx+f111/PNttsk169euUXv/hFTj/99Fx//fV1rtm1yCqrrJKTTz45H374YXlfTU1Ntttuu1pBV/LxGmITJ07MU089Vd43ePDgbLTRRhXbm2++WY8nBQAAAF8+VaXFrZANsBizZ8/++FsZj70hjZq3bOhyAAAAWAZTz9+xoUtYaov+Dp01a1batGmzxLZmdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIXRpKELAL66njtrUNq0adPQZQAAAECZmV0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYtYwefvjhNG7cONtvv32S5F//+leaNm2aa665ps72hx56aDbYYIPyz7Nnz87Pfvaz9O3bNyuttFLat2+fTTfdNBdccEFmzJixVDVsu+22qaqqyvnnn1/r2A477JCqqqoMHz68VvtPb4cddlit83/84x+ncePGuf7662sdGz58eJ3nTZw4MVVVVZk6depn1j516tSKGtq2bZstttgit99+e53tzzvvvDRu3LjiXrt27Vrn/Szatt1223K7iy66qNZ5jz76aMU1jj322PI5iyyPcZoyZUqGDBmSNddcMy1atMhaa62VXXfdNS+99FJFu/Hjx2eHHXZI+/bt07Jly/Tp0yfHH398/vnPf9bqs1evXmnWrFmdx7bddtsce+yxi61ncc+rrrEGAACArxph1zIaPXp0jjrqqDz44IN57bXXssYaa2THHXfMmDFjarX94IMPcv3112fYsGFJknfeeSdbbLFFxowZkxNOOCGPPfZYHnrooZx55pmZOHFirr322qWuo3PnzrWu+eabb+bee+9Nx44da7U/5JBDMm3atIrtggsuqGjz/vvvZ9y4cTnxxBNTU1NT53VbtGiRmpqaWoFNfd19992ZNm1aHnvssWy22WbZfffd89xzz9VqN2bMmJx00kkZPXp0ed8TTzxRvoebb745STJ58uTyvltuuWWx123RokVOPvnkJda2PMZp7ty5GThwYGbPnp1bbrklkydPzrhx49KvX7/MmjWr3O43v/lNtttuu3To0CE333xzJk2alMsvvzyzZs3KqFGjKvp88MEH8+GHH2bPPffM2LFjP7OGuowZM6bW78Fuu+22TH0BAADAl0mThi7gq2jOnDm54YYb8sQTT2T69OkZO3ZszjjjjAwbNiy77rprpk6dmq5du5bb33TTTfnwww8zdOjQJMlpp52W1157LZMnT06nTp3K7Xr37p2ddtoppVJpqWvZaaedcsMNN+Shhx7K1ltvnSQZO3Zsvve97+W1116r1b5ly5bp0KHDEvu88cYb06dPn5x66qnp2LFjrftJPp5ZtPrqq+enP/1pbrjhhqWu99Pat2+fDh06pEOHDhkxYkQuueSSjB8/Pv369Su3ue+++/LBBx/k7LPPztVXX537778/22yzTVZbbbVym1VWWSVJsvrqq6ddu3afed1DDz00l112We68887ssMMOdbZZHuM0adKkTJkyJffee2+6dOmSJOnSpUt5rJLkjTfeyNFHH52jjz46F154YXl/165ds80222TmzJkVfdbU1GSfffZJ//79c8QRR+S0005LVVXVZ9bySe3atfvM3wMAAAD4KjKzaxmMGzcuvXr1Sq9evTJ06NCMGTMmpVIpO+ywQzp06FBrts3o0aOz2267pX379lm4cGHGjRuXoUOHVgQon1Sf4KJZs2b50Y9+VDG7a+zYsTnooIOW6d6Sj8OUoUOHpm3bttlhhx3qnK2WJOeff35uvvnmPPHEE8t8rUXmzZuXK664IknStGnTWvUMGTIkTZs2zZAhQxY726w+unbtmsMOOyynnnpqFi5cWOv48hqn1VZbLY0aNcpNN92UBQsW1NnmxhtvzNy5c3PSSSfVefyT4d27776bG2+8MUOHDs3AgQMzZ86cTJgw4TPr+Lw++uijzJ49u2IDAACALyNh1zJYFAYlyfbbb5/33nsv99xzTxo3bpz99tsvY8eOLc/6efXVV3PfffeVP8L41ltvZebMmenVq1dFnxtvvHGqq6tTXV2dIUOG1KueYcOG5YYbbsicOXNy//33Z9asWdlxxx3rbHvppZeWr7Nou+qqq8rHX3755Tz66KPZe++9k6Qc5tUVCH3zm9/MXnvtlVNOOaVe9X7SVlttlerq6rRo0SLHH398unbtmr322qt8fPbs2bn55pvLz3vo0KG56aablkvY8tOf/jSvvvpqfve739U6trzGqVOnTvnlL3+ZM844IyuvvHK+853v5JxzzsmUKVPKbV5++eW0adOmzo+dftr111+fHj16pG/fvmncuHEGDx68TOHfkCFDav0efLKmTxs5cmTatm1b3jp37lzvawIAAMAXQdhVT5MnT87jjz+ewYMHJ0maNGmSvffeu7yW1LBhw/KPf/wj9957b5KPZ3WttdZa2W677Sr6+fSsoN///veZOHFiBg0alA8++KBeNW2wwQbp0aNHbrrppowePTr77rtvrdlRi/zoRz/KxIkTK7Yf/OAH5eM1NTUZNGhQVl111SQfL3Q/Z86c3H333XX2d+655+aBBx7IX/7yl3rVvMi4cePy9NNP57bbbkv37t1z5ZVXlj+SmCTXXnttunXrlg033DBJ8o1vfCPdunVbLoupr7baajnhhBNyxhlnZO7cuXW2WR7jdMQRR2T69Om55pprsuWWW+bGG29M375989e//jVJUiqVlno23yeD1uTj8O+WW26p9VHHz3LhhRfW+j1YUoB16qmnZtasWeXt9ddfr9f1AAAA4Itiza56qqmpyfz58ys+2lYqldK0adPMmDEjPXr0yLe//e2MGTMmAwYMyFVXXZUDDzwwjRp9nCuuttpqadeuXV588cWKftdee+0kSevWresdXCTJQQcdlF//+teZNGlSHn/88cW2a9u2bbp3717nsQULFuTqq6/O9OnT06RJk4r9NTU1+d73vlfrnHXXXTeHHHJITjnllGWaYdS5c+f06NEjPXr0SHV1dXbfffdMmjQpq6++epKPw8Lnn3++op6FCxempqYmP/7xj+t9vU/7yU9+kksvvTSXXnppxf7lPU6tW7fOLrvskl122SXnnntuBg0alHPPPTcDBw5Mz549M2vWrEybNm2Js7smTZqUxx57LE888UTF4voLFizIddddl//3//7fUtfToUOHxf4e1KV58+Zp3rz5UrcHAACAhmJmVz3Mnz8/V199dUaNGlUxI+aZZ55Jly5dyh+HGzZsWG655ZbcfPPNeeONN3LggQeW+2jUqFH22muvXHPNNfnnP/+53GrbZ5998uyzz6Zfv37p06fPMvVx55135t13383TTz9dcX833nhjbr311rz99tt1nnfGGWfkpZde+tyzrfr3759+/fplxIgRSZJnn302Tz75ZCZMmFBRz/33358nnniizm9trK/q6ur87Gc/y4gRIyo+Grmixin5eLZY7969M2fOnCTJHnvskWbNmtX6VsxFFoVqNTU12WabbfLMM89UPI+TTjppuaxjBgAAAEVgZlc93HHHHZkxY0aGDRuWtm3bVhzbY489UlNTkyOPPDJ77rlnjj766Bx66KH57ne/W+ubDM8777xMmDAhm2++ec4+++xssskmadWqVf7+97/nkUceqfgmwqW18sorZ9q0aYv9+OIi77//fqZPn16xr3nz5ll55ZVTU1OTHXfcsfyRwUX69u2bY489Ntdcc02OOeaYWn2uscYa+clPfpKf//zn9a77044//vjsueee5QBns802yzbbbFOr3ZZbbpmampqKby9cVj/+8Y9z4YUX5rrrrsvmm29e3r88xmnixIk588wzs++++6ZPnz5p1qxZ7rvvvowePbo8O6tz58658MILc+SRR2b27NnZb7/90rVr17zxxhu5+uqrU11dnfPPPz//8z//k7PPPrvWdQ8++OBccMEFeeaZZ8pj99Zbb2XixIkV7RZ962XycYD26d+D1q1bp1WrVvV+fgAAAPBlYmZXPdTU1GS77barFXQlye67756JEyfmqaeeSsuWLTN48ODMmDGjzm9FbN++fR5//PHst99++fnPf57NNtss66+/foYPH5699967/K2E9dWuXbvPDCuuuOKKdOzYsWIbMmRI/vWvf+WPf/xjdt9991rnVFVV5Yc//OESZw+deOKJqa6uXqa6P2mnnXZK165dM2LEiFxzzTV11pN8/Lyvueaaxa61VR9NmzbNOeeckw8//LBi//IYp7XWWitdu3bNWWedlc033zzf/OY3c/HFF+ess87K6aefXm53+OGH5y9/+Uv++c9/5gc/+EF69+6dgw8+OG3atMkJJ5yQ2267LW+//XbF+mqL9OjRI+uvv37F+Fx77bXZaKONKrbLL7+8fPzAAw+s9XtwySWXLMvjAwAAgC+VqtKirw0EWEqzZ89O27ZtM2vWrLRp06ahywEAAKDg6vN3qJldAAAAABSGsOtL6oEHHkh1dfVity+7ww47bLG1H3bYYQ1d3nLzVR8nAAAAKBofY/yS+uCDD5b4LYDdu3f/Aqupv3//+98V3274SW3atMnqq6/+BVe0YnzVx2lZ+RgjAAAAX6T6/B0q7ALqTdgFAADAF8maXQAAAAB8LQm7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUxjKHXf/zP/+TrbfeOmuuuWb+8Y9/JEkuuuii/OEPf1huxQEAAABAfSxT2HXZZZflJz/5SXbYYYfMnDkzCxYsSJK0a9cuF1100fKsDwAAAACW2jKFXZdcckmuuOKKnH766WncuHF5/yabbJJnn312uRUHAAAAAPWxTGHXq6++mo022qjW/ubNm2fOnDmfuygAAAAAWBbLFHats846mThxYq39f/rTn9KnT5/PWxMAAAAALJMmy3LSiSeemCOOOCIffvhhSqVSHn/88Vx33XUZOXJkrrzyyuVdIwAAAAAslWUKuw488MDMnz8/J510Ut5///3ss88+6dSpUy6++OIMHjx4edcIAAAAAEul3mHX/Pnz87vf/S4777xzDjnkkPznP//JwoULs/rqq6+I+gAAAABgqdV7za4mTZrk//2//5ePPvooSbLqqqsKugAAAAD4UlimBeo333zzPP3008u7FgAAAAD4XJZpza7DDz88xx9/fN54441svPHGadWqVcXxDTbYYLkUBwAAAAD1UVUqlUr1PalRo9oTwqqqqlIqlVJVVZUFCxYsl+KAL6fZs2enbdu2mTVrVtq0adPQ5QAAAFBw9fk7dJlmdr366qvLVBgAAAAArEjLFHZ16dJledcBAAAAAJ/bMoVdV1999RKP77fffstUDAAAAAB8Hsu0ZtfKK69c8fO8efPy/vvvp1mzZmnZsmXeeeed5VYg8OVjzS4AAAC+SPX5O7T2SvNLYcaMGRXbe++9l8mTJ+db3/pWrrvuumUqGgAAAAA+r2UKu+rSo0ePnH/++TnmmGOWV5cAAAAAUC/LLexKksaNG+fNN99cnl0CAAAAwFJbpgXqb7vttoqfS6VSpk2bll/96lfZeuutl0thAAAAAFBfyxR27bbbbhU/V1VVZbXVVst3vvOdjBo1annUBQAAAAD1tkxh18KFC5d3HQAAAADwuS3Tml1nn3123n///Vr7P/jgg5x99tmfuygAAAAAWBZVpVKpVN+TGjdunGnTpmX11Vev2P/2229n9dVXz4IFC5ZbgcCXz+zZs9O2bdvMmjUrbdq0aehyAAAAKLj6/B26TDO7SqVSqqqqau1/5plnssoqqyxLlwAAAADwudVrza6VV145VVVVqaqqSs+ePSsCrwULFuS9997LYYcdttyLBAAAAIClUa+w66KLLkqpVMpBBx2Us846K23bti0fa9asWbp27Zott9xyuRcJAAAAAEujXmHX/vvvnyRZZ511stVWW6Vp06YrpCgAAAAAWBb1CrsW6d+/f/nfH3zwQebNm1dx3ILVAAAAADSEZVqg/v3338+RRx6Z1VdfPdXV1Vl55ZUrNgAAAABoCMsUdp144om59957c+mll6Z58+a58sorc9ZZZ2XNNdfM1VdfvbxrBAAAAIClskwfY7z99ttz9dVXZ9ttt81BBx2Ub3/72+nevXu6dOmS3/3ud/nRj360vOsEAAAAgM+0TDO73nnnnayzzjpJPl6f65133kmSfOtb38r999+//KoDAAAAgHpYppld3bp1y9SpU9OlS5f06dMnN9xwQzbbbLPcfvvtadeu3XIuEfiy6nfmn9OoecuGLgMAoJap5+/Y0CUA0ECWaWbXgQcemGeeeSZJcuqpp5bX7jruuONy4oknLtcCAQAAAGBpLdPMruOOO6787wEDBuTFF1/Mk08+mXXXXTcbbrjhcisOAAAAAOpjmcKuT/rwww+z9tprZ+21114e9QAAAADAMlumjzEuWLAg55xzTjp16pTq6upMmTIlSfKzn/0sNTU1y7VAAAAAAFhayxR2jRgxImPHjs0FF1yQZs2alfevv/76ufLKK5dbcQAAAABQH8sUdl199dX57W9/mx/96Edp3Lhxef8GG2yQF198cbkVBwAAAAD1sUxh1z//+c9079691v6FCxdm3rx5n7soAAAAAFgWyxR29e3bNw888ECt/TfeeGM22mijz10UAAAAACyLZfo2xjPPPDP77rtv/vnPf2bhwoW55ZZbMnny5Fx99dW54447lneNAAAAALBU6jWza8qUKSmVStl5550zbty43HnnnamqqsoZZ5yRF154IbfffnsGDhy4omoFAAAAgCWq18yuHj16ZNq0aVl99dUzaNCgjB49Oq+88ko6dOiwouoDAAAAgKVWr5ldpVKp4uc//elPef/995drQQAAAACwrJZpgfpFPh1+AQAAAEBDqlfYVVVVlaqqqlr7AAAAAODLoF5rdpVKpRxwwAFp3rx5kuTDDz/MYYcdllatWlW0u+WWW5ZfhQAAAACwlOoVdu2///4VPw8dOnS5FgMAAAAAn0e9wq4xY8asqDoAAAAA4HP7XAvUAwAAAMCXibALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLu+IqZPn56jjjoq3bp1S/PmzdO5c+fsvPPOueeeeyranXfeeWncuHHOP//8Wn2MHTs2VVVV2X777Sv2z5w5M1VVVZkwYULF/vHjx2eHHXZI+/bt07Jly/Tp0yfHH398/vnPfyZJJkyYkKqqqjq36dOnJ0mGDx+eb3zjG4u9r2233TbHHnvsZ97/ww8/nMaNG1fUfsABByz2+ou2Re122223iv5ef/31DBs2LGuuuWaaNWuWLl265Jhjjsnbb79dq76qqqpcf/31FfsvuuiidO3a9TPrTpIFCxZk5MiR6d27d1ZaaaWsssoq2WKLLTJmzJiKdks7xslnj3O7du0WW8/intunfy8AAADgq0jY9RUwderUbLzxxrn33ntzwQUX5Nlnn81dd92VAQMG5IgjjqhoO2bMmJx00kkZPXp0nX01adIk99xzT8aPH7/Ea/7mN7/Jdtttlw4dOuTmm2/OpEmTcvnll2fWrFkZNWpURdvJkydn2rRpFdvqq6/++W76U0aPHp2jjjoqDz74YF577bUkycUXX1xxzeTj+//0vk+bMmVKNtlkk7z00ku57rrr8sorr+Tyyy/PPffcky233DLvvPNORfsWLVrkpz/9aebNm7dMtQ8fPjwXXXRRzjnnnEyaNCnjx4/PIYcckhkzZpTb1GeMF93nksb5s2y//fa1xuy6665bpr4AAADgy6RJQxfAZzv88MNTVVWVxx9/PK1atSrv79u3bw466KDyz/fdd18++OCDnH322bn66qtz//33Z5tttqnoq1WrVtlrr71yyimn5LHHHqvzem+88UaOPvroHH300bnwwgvL+7t27ZptttkmM2fOrGi/+uqrL3Em0ec1Z86c3HDDDXniiScyffr0jB07NmeccUbatm2btm3bVrRt165dOnTosMT+jjjiiDRr1ix/+ctfstJKKyVJ1l577Wy00UZZd911c/rpp+eyyy4rtx8yZEhuv/32XHHFFTn88MPrXf/tt9+eww8/PHvuuWd534YbbljRZmnHOFm6cf4szZs3/8znBAAAAF9FZnZ9yb3zzju56667csQRR1SEIIt8MmSqqanJkCFD0rRp0wwZMiQ1NTV19jl8+PA8++yzuemmm+o8fuONN2bu3Lk56aST6jy+IoOtuowbNy69evVKr169MnTo0IwZMyalUmmZ+nrnnXfy5z//OYcffng56FqkQ4cO+dGPfpRx48ZV9N+mTZucdtppOfvsszNnzpx6X7NDhw65995789Zbby22pqUd42TpxxkAAAC+joRdX3KvvPJKSqVSevfuvcR2s2fPzs0335yhQ4cmSYYOHZqbbrops2fPrtV2zTXXzDHHHJPTTz898+fPr3X85ZdfTps2bdKxY8elqnGttdZKdXV1eevVq9dSnbe0ampqyve1/fbb57333qtzHaul8fLLL6dUKmW99dar8/h6662XGTNm1AqmDj/88LRo0SK/+MUv6n3NX/ziF3nrrbfSoUOHbLDBBjnssMPypz/9qXx8acc4qd84L8kdd9xRMWbV1dU555xzFtv+o48+yuzZsys2AAAA+DISdn3JLZphtGix9cW59tpr061bt/LH477xjW+kW7dutRZWX+Tkk0/OW2+9VeeaT6VS6TOv90kPPPBAJk6cWN7+/Oc/L/W5n2Xy5Ml5/PHHM3jw4CQfrzm29957L/NaVZ9lcc+7efPmOfvss/Pzn/88//nPf+rVZ58+ffLcc8/l0UcfzYEHHph//etf2XnnnXPwwQcv8Zp1qe84L86AAQMqxmzixIl1rg22yMiRI8sfG23btm06d+5cr+sBAADAF0XY9SXXo0ePVFVV5YUXXlhiu9GjR+f5559PkyZNytvzzz+/2I+4tWvXLqeeemrOOuusvP/++xXHevbsmVmzZi12gfdPW2edddK9e/fytrTfUrg0ampqMn/+/HTq1Kl8X5dddlluueWWigXel1b37t1TVVWVSZMm1Xn8xRdfzMorr5xVV1211rGhQ4ema9euOffcc+t93UaNGmXTTTfNcccdl9///vcZO3Zsampq8uqrry71GCf1H+fFadWqVcWYde/ePaussspi25966qmZNWtWeXv99dfrdT0AAAD4ogi7vuRWWWWVDBo0KL/+9a/rXC9q5syZefbZZ/Pkk09mwoQJFTN17r///jzxxBN57rnn6uz7qKOOSqNGjXLxxRdX7N9jjz3SrFmzXHDBBXWe9+kF6leU+fPn5+qrr86oUaMq7uuZZ55Jly5d8rvf/a7efbZv3z4DBw7MpZdemg8++KDi2PTp0/O73/0ue++9d52zrBo1apSRI0fmsssuy9SpU5f1tpJ8PNsr+Xjx/aUZ4yTLPM7LQ/PmzdOmTZuKDQAAAL6MfBvjV8Cll16arbbaKptttlnOPvvsbLDBBpk/f37++te/5rLLLsugQYOy2Wab1fmNfFtuuWVqamoqvlVxkRYtWuSss86q9fG1zp0758ILL8yRRx6Z2bNnZ7/99kvXrl3zxhtv5Oqrr051dXVGjRpVbv/vf/87H374YUUf7du3T9OmTZMkH3zwQSZOnFhxvLq6Ot27d0+SvPXWW7WOd+jQIY8++mhmzJiRYcOG1frWxT322CM1NTU58sgjl/zw6vCrX/0qW221VQYNGpRzzz0366yzTp5//vmceOKJ6dSpU0aMGLHYc3fcccdsvvnm+c1vfpM11lhjqa63xx57ZOutt85WW22VDh065NVXX82pp56anj17ltfp+qwxfuGFF1JTU7PU47xgwYJaz7RZs2blkO2jjz7K9OnTK443adKkzhltAAAA8FViZtdXwDrrrJOnnnoqAwYMyPHHH59+/fpl4MCBueeee3LxxRfnmmuuye67717nubvvvnuuueaazJ07t87j+++/f7p161Zr/+GHH56//OUv+ec//5kf/OAH6d27dw4++OC0adMmJ5xwQkXbXr16pWPHjhXb3/72t/Lxl156KRtttFHFtmi9quTjdag+ffzyyy9PTU1Ntttuu1pB16L7mjhxYp566qmleoaf1KNHjzz55JNZd911s/fee2fdddfNj3/84wwYMCCPPPLIEj/OlyT/9V//VSvcW5JBgwbl9ttvz84775yePXtm//33T+/evfOXv/wlTZp8nDcvaYwvu+yyzJ07t17j/N5779V6pjvssEO5/V133VVrzL71rW8t9T0BAADAl1VVadHq2ABLafbs2R8vVH/sDWnUvGVDlwMAUMvU83ds6BIAWI4W/R06a9asz1xax8wuAAAAAApD2AWfU9++fVNdXV3ntiyL6AMAAADLzgL18DndeeedmTdvXp3HlnYRewAAAGD5EHbB59SlS5eGLgEAAAD4//kYIwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhdGkoQsAvrqeO2tQ2rRp09BlAAAAQJmZXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhNGnoAoCvrn5n/jmNmrds6DI+l6nn79jQJQAAALAcmdkFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdn1BqqqqlrgdcMAB5bZ33HFHtt1227Ru3TotW7bMpptumrFjx5aPDx8+/DP7mzp1apLk4YcfTuPGjbP99tvXqmnq1KmpqqrKxIkT630/Y8eOrbhex44ds9dee+XVV18tt+natWsuuuiiWucOHz483/jGNyr2vfPOOzn22GPTtWvXNGvWLB07dsyBBx6Y1157bYU8w0VuvvnmbL755mnbtm1at26dvn375vjjj//M+x81alTatm2b999/v9axDz/8MO3atcsvfvGLOp9D165d66z//PPPT5J07Ngx//Vf/1XR58knn5yqqqrcc889Ffu/+93vZp999klSe0wWbS1atCi3P+CAA8r7mzZtmjXWWCMDBw7M6NGjs3Dhws+8bwAAAPiyE3Z9QaZNm1beLrroorRp06Zi38UXX5wkueSSS7Lrrrtmq622ymOPPZa///3vGTx4cA477LCccMIJSZITTjih4ty11lorZ599dsW+zp07J0lGjx6do446Kg8++GBFcLQ8LLqHN998M9dee20mTpyYXXbZJQsWLKhXP++880622GKL3H333bn00kvzyiuvZNy4cfnf//3fbLrpppkyZUqS5fsMk+Tuu+/O4MGDs8cee+Txxx/P3/72t4wYMSJz5879zJr322+/fPDBB7n55ptrHbv55pvz/vvvZ999913s+Z8er2nTpuWoo45Kkmy77bYZP358RfsJEyakc+fOFfvnzp2bRx55JAMGDCjv+/QzmTZtWv7xj39U9LX99ttn2rRpmTp1av70pz9lwIABOeaYY7LTTjtl/vz5n3nvAAAA8GXWpKEL+Lro0KFD+d9t27ZNVVVVxb4kef3113P88cfn2GOPzXnnnVfef/zxx6dZs2Y5+uijs+eee2bzzTdPdXV1+Xjjxo3TunXrWv3NmTMnN9xwQ5544olMnz49Y8eOzRlnnLHc7umT99CxY8eceeaZGTp0aF555ZX06tVrqfs5/fTT8+abb+aVV14p97f22mvnz3/+c3r06JEjjjgif/rTn5b7M7zjjjvyrW99KyeeeGK5Xc+ePbPbbrt9Zs2rrbZadt5554wePbpWqDV69OjssssuWW211RZ7fl3jtciAAQNy/PHHZ/78+WnSpEnefffdPP3007noooty7bXXlts99thj+eCDDyrCrrqeyac1b9683KZTp0755je/mS222CLf/e53M3bs2Bx88MGfef8AAADwZWVm15fITTfdlHnz5lXMPlrk0EMPTXV1da677rql7m/cuHHp1atXevXqlaFDh2bMmDEplUrLs+QKK620UpJk3rx5S33OwoULc/311+dHP/pRrZBmpZVWyuGHH54///nPeeedd5aqv/o8ww4dOuT555/Pc889t9T1ftKwYcNy3333VXx0c+rUqRk/fnyGDRu2TH0mH4dd7733Xp544okkyQMPPJCePXtmjz32yBNPPFH+6OT48eOz1lprpXv37st8rUW+853vZMMNN8wtt9xS5/GPPvoos2fPrtgAAADgy0jY9SXy0ksvpW3btunYsWOtY82aNUu3bt3y0ksvLXV/NTU1GTp0aJKPP7r23nvv1VrzaXl544038vOf/zxrrbVWevbsWd5/8sknp7q6umL75Iyrt956KzNnzsx6661XZ7/rrbdeSqVSXnnllaWqoz7P8Kijjsqmm26a9ddfP127ds3gwYMzevTofPTRR0t1rUGDBmXNNdesWAtszJgxWXPNNfO9731viefW9VwmTJiQJOnRo0c6depU/nnChAnp379/Vl999XTr1i0PPfRQef8nZ3UlyaxZs2r1+1m1LNK7d+/yWm+fNnLkyLRt27a8LfqYLAAAAHzZCLu+QkqlUqqqqpaq7eTJk/P4449n8ODBSZImTZpk7733zujRo5dbPYuClVatWqVz586ZO3dubrnlljRr1qzc5sQTT8zEiRMrtsMOO2ypr7FoJtrS3vfS9Leor1atWuWPf/xjXnnllfz0pz9NdXV1jj/++Gy22WZ1Ljz/aY0bN87++++fsWPHZuHChSmVSrnqqqtywAEHpHHjxks8t67nsvnmm5ePb7vtthVh17bbbpsk6d+/fyZMmJCPPvoojz76aL7zne9U9Nu6deta/Y4ZM6bez+bTTj311MyaNau8vf7660vVJwAAAHzRrNn1JdKzZ8/MmjUrb775ZtZcc82KY3Pnzs2UKVNqhRuLU1NTk/nz56dTp07lfaVSKU2bNs2MGTOy8sorf+56W7dunaeeeiqNGjXKGmuskVatWtVqs+qqq9b6mN0qq6xS/vdqq62Wdu3aZdKkSXVe48UXX0xVVVXWXXfdpappWZ7huuuum3XXXTcHH3xwTj/99PTs2TPjxo3LgQce+JnXO+iggzJy5Mjce++9SZLXXnttqc6r67l80qJF499+++08/fTT2WabbZJ8HHZdcskl+d73vldrva4kadSo0TJ/rPGFF17IOuusU+ex5s2bp3nz5svULwAAAHyRzOz6Etl9993TpEmTjBo1qtaxyy+/PHPmzMmQIUM+s5/58+fn6quvzqhRoypm+DzzzDPp0qVLfve73y2XehcFK926dasz6FraPvbaa69ce+21mT59esWxDz74IJdeemkGDRpUEZAtyed9hl27dk3Lli0zZ86cpbreuuuum/79+2fMmDEZPXp0tt1226UO5pZkwIABmTNnTn7xi1+kR48eWWONNZJ8HHY9+eST+eMf/5h11lknXbp0+dzXSpJ77703zz77bHbffffl0h8AAAA0FDO7vkTWXnvtXHDBBTnhhBPSokWL7LvvvmnatGn+8Ic/5LTTTsvxxx9f8VG3xbnjjjsyY8aMDBs2LG3btq04tscee6SmpiZHHnlked/kyZNr9dGnT5+KjyOuSCNGjMg999yTgQMH5oILLki/fv3y6quv5qc//WnmzZuXX//610vdV32e4fDhw/P+++9nhx12SJcuXTJz5sz88pe/zLx58zJw4MClvuawYcNyyCGHJEmuvPLKpTrn3XffrRXutWzZMm3atEmSdOvWLWuvvXYuueSS/OhHPyq3WXPNNdOlS5dcfvnl2XPPPWv1WyqVavWbJKuvvnoaNfo42/7oo48yffr0LFiwIP/6179y1113ZeTIkdlpp52y3377Ld1NAwAAwJeUmV1fMscdd1x+//vf54EHHsgmm2ySfv365dprr81ll12W//7v/16qPmpqarLddtvVCrqSj2c+TZw4MU899VR53+DBg7PRRhtVbG+++eZyu6fPsuqqq+bRRx/NgAEDcuihh6Zbt27Za6+90q1btzzxxBPp1q1bvfpb2mfYv3//TJkyJfvtt1969+6d73//+5k+fXr+8pe/pFevXkt9vd133738Mb8f/vCHS3XOGWeckY4dO1ZsJ510UkWbAQMG5N133y2v1/XJut99991aH2FMktmzZ9fqt2PHjvn3v/9dbnPXXXelY8eO6dq1a7bffvuMHz8+v/zlL/OHP/zhM9caAwAAgC+7qtKiFcABltLs2bM//lbGY29Io+YtG7qcz2Xq+Ts2dAkAAAB8hkV/h86aNav8qajFMbMLAAAAgMIQdlGnvn37prq6us5teS1w/2XnGQAAAMBXjwXqqdOdd96ZefPm1Xls0TcDFp1nAAAAAF89wi7q1KVLl4YuocF5BgAAAPDV42OMAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAURpOGLgD46nrurEFp06ZNQ5cBAAAAZWZ2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAojCYNXQDw1dXvzD+nUfOWDV0GX2FTz9+xoUsAAAAKxswuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwvhShF0PP/xwGjdunO233z5J8q9//StNmzbNNddcU2f7Qw89NBtssEH559mzZ+dnP/tZ+vbtm5VWWint27fPpptumgsuuCAzZsxY4rWnTp2aqqqqJW7Dhw8vt5s4cWLFeU2aNMk///nPij6nTZuWJk2apKqqKlOnTv3M6zz66KOf+YzGjh1bcU7Hjh2z11575dVXXy236dq1a539n3/++XXW0LZt22yxxRa5/fbbP/P6iyxYsCAjR45M7969s9JKK2WVVVbJFltskTFjxpTbHHDAAdltt92S5DOf7QEHHLDEdtdff/0S67n55pvTuHHjvPbaa3Ue7927d44++ugkybbbbptjjz22fGzKlCkZMmRI1lxzzbRo0SJrrbVWdt1117z00kvlNlVVVbn11ltrPf+6tgkTJiyx1rFjx6Zdu3aLPX7AAQfU2e/222+fuXPnZtVVV825555b57kjR47Mqquumrlz5y621hYtWlRca9EYAQAAQJE0aegCkmT06NE56qijcuWVV+a1117L2muvnR133DFjxozJ0KFDK9p+8MEHuf7663P22WcnSd55551861vfyuzZs3POOedk4403TrNmzfLKK6/k2muvzbXXXpsjjjhisdfu3Llzpk2bVv75v//7v3PXXXfl7rvvLu+rrq7Of/7znzrPX3PNNXP11Vfn1FNPLe+76qqr0qlTpzoDmLvvvjt9+/at2Ne+ffslPJ3/06ZNm0yePDmlUikvvvhiDj300Oyyyy6ZOHFiGjdunCQ5++yzc8ghh1Sc17p16zprmDlzZi699NLsvvvueeqpp9KvX7/PrGH48OH57W9/m1/96lfZZJNNMnv27Dz55JOLDRU/+WzHjRuXM844I5MnTy7vW2mllcr/HjNmTDnwXGRJ4VCS7LLLLmnfvn2uuuqq/OxnP6s49tBDD2Xy5MkZN25crfPmzp2bgQMHpnfv3rnlllvSsWPHvPHGG7nzzjsza9asWu333nvvitp++MMfpl+/fuXfwyRZZZVVlljr0th+++0rgsMkad68eZo1a5ahQ4dm7NixOf3001NVVVXRZsyYMdl3333TrFmzJP/3u/JJnz4HAAAAiqjBw645c+bkhhtuyBNPPJHp06dn7NixOeOMMzJs2LDsuuuumTp1arp27Vpuf9NNN+XDDz8sh2CnnXZaXnvttUyePDmdOnUqt+vdu3d22mmnlEqlJV6/cePG6dChQ/nn6urqNGnSpGJfksWGXfvvv3/GjBlTEXaNHTs2+++/f84555xa7du3b1+r76VVVVVVPrdjx44588wzM3To0Lzyyivp1atXko+Drc/qf1ENHTp0yIgRI3LJJZdk/PjxSxV23X777Tn88MOz5557lvdtuOGGi23/yVratm1bcQ+f1q5du3o/m6ZNm2bffffN2LFj89Of/rQi0Bk9enQ23njjOuubNGlSpkyZknvvvTddunRJknTp0iVbb711nddZaaWVKoK5Zs2apWXLlss8lovTvHnzxfY5bNiwXHzxxbn//vvTv3//8v4HHnggL7/8coYNG1bet6TnDAAAAEXW4B9jHDduXHr16pVevXpl6NChGTNmTEqlUnbYYYd06NAhY8eOrWg/evTo7Lbbbmnfvn0WLlyYcePGZejQoRVB1yet6Nksu+yyS2bMmJEHH3wwSfLggw/mnXfeyc4777xCr5v836yoefPmLdP58+bNyxVXXJHk49BoaXTo0CH33ntv3nrrrWW65oowbNiwTJkyJffdd19536IQ9ZMB0CetttpqadSoUW666aYsWLDgiyr1c1l//fWz6aab1pr5NXr06Gy22WZLFVYuq48++iizZ8+u2AAAAODLqMHDrpqamvIsre233z7vvfde7rnnnjRu3Dj77bdfxo4dW56d9eqrr+a+++4rBxhvvfVWZs6cWZ7VtMjGG2+c6urqVFdXZ8iQISu0/qZNm2bo0KEZPXp0ko+Dh6FDhy42PNpqq63KtS3aliVseeONN/Lzn/88a621Vnr27Fnef/LJJ9fq/9NrSS2qoUWLFjn++OPTtWvX7LXXXkt13V/84hd566230qFDh2ywwQY57LDD8qc//ane9ddlyJAhtWqfMmXKZ57Xp0+fbL755hUh0A033JAFCxYsdvw7deqUX/7ylznjjDOy8sor5zvf+U7OOeecpbreinTHHXfUegafnCF40EEH5aabbsp7772XJHnvvfdy44031gr1Zs2aVauf733ve8tc18iRI9O2bdvy1rlz52XuCwAAAFakBg27Jk+enMcffzyDBw9OkjRp0iR77713OTgaNmxY/vGPf+Tee+9N8nGQtNZaa2W77bar6OfTs7d+//vfZ+LEiRk0aFA++OCDFX4fw4YNy4033pjp06fnxhtvzEEHHbTYtuPGjcvEiRMrtkXrbX2WRQFGq1at0rlz58ydOze33HJLeZ2mJDnxxBNr9b/55pvXquHpp5/Obbfdlu7du+fKK69c6vWm+vTpk+eeey6PPvpoDjzwwPzrX//KzjvvnIMPPnipzl+SCy+8sFbtSxuqDBs2LDfddFPefffdJB//rvzwhz9c4ppfRxxxRKZPn55rrrkmW265ZW688cb07ds3f/3rXz/3vSyrAQMG1HoGn1xzbsiQIeUZjcnHY1kqlcrv0CKtW7eu1c+nZ4TVx6mnnppZs2aVt9dff32Z+wIAAIAVqUHX7Kqpqcn8+fMrPoJYKpXStGnTzJgxIz169Mi3v/3tjBkzJgMGDMhVV12VAw88MI0afZzRrbbaamnXrl1efPHFin7XXnvtJB//wT9z5swVfh/9+vVL7969M2TIkKy33nrp169f+VsbP61z587p3r37Ml2ndevWeeqpp9KoUaOsscYaadWqVa02q6666mf237lz5/To0SM9evRIdXV1dt9990yaNCmrr776UtXRqFGjbLrpptl0001z3HHH5Zprrsm+++6b008/Peuss84y3Vvy8Uckl/XZDB48OMcdd1zGjRuXbbfdNg8++GDF4vGL07p16+yyyy7ZZZddcu6552bQoEE599xzM3DgwGWq4/Nq1arVEp9B27Zts8cee2TMmDEZNmxYxowZkz322CNt2rSpaNeoUaNlfpZ1ad68eZo3b77c+gMAAIAVpcFmds2fPz9XX311Ro0aVTH75JlnnkmXLl3yu9/9LsnHM3ZuueWW3HzzzXnjjTdy4IEH/l/xjRplr732yjXXXJN//vOfDXUrST7+eNmECROWOKvr81oUYHTr1q3OoGtZ9O/fP/369cuIESOWuY8+ffok+XidrIbSunXr7LnnnhkzZkxGjx6dbt26Zdttt61XH1VVVendu3eD3sfSGDZsWB566KHccccdeeihhxa7LhkAAAB8HTXYzK477rgjM2bMyLBhw9K2bduKY3vssUdqampy5JFHZs8998zRRx+dQw89NN/97ncrvpkxSc4777xMmDAhm2++ec4+++xssskmadWqVf7+97/nkUceWaGLdn/SIYcckj333HOJH5tLkrfffjvTp0+v2NeuXbu0aNFiudTx7rvv1uq/ZcuWtWb+fNLxxx+fPffcMyeddNJiF/pfZI899sjWW2+drbbaKh06dMirr76aU089NT179kzv3r0/V+0zZ86sVXvr1q2XOtgbNmxYvv3tb2fSpEk54YQTlvjlBBMnTsyZZ56ZfffdN3369EmzZs1y3333ZfTo0Tn55JM/130syYIFC2rN+mvWrFk5MPzoo49qPYMmTZpk1VVXLf/cv3//dO/ePfvtt1+6d++ebbbZptZ1SqVSrX6SZPXVVy/PjJw1a1atWlZZZZXyzEgAAAD4KmqwsKumpibbbbddraArSXbfffecd955eeqpp/LNb34zgwcPzm9/+9s6Z021b98+jz/+eP7rv/4rP//5z/Pqq6+mUaNG6dGjR/bee+8ce+yxX8Dd1A4kFufT640lyXXXXVdrzaVldcYZZ+SMM86o2HfooYfm8ssvX+w5O+20U7p27ZoRI0bk0ksvXWL/gwYNynXXXZeRI0dm1qxZ6dChQ77zne9k+PDhadLk8/06fXLW3iIjR47MKaecslTnf+tb30qvXr3y8ssvZ//9919i27XWWitdu3bNWWedlalTp6aqqqr883HHHbdM9S+N9957LxtttFHFvi5dumTq1KlJkrvuuisdO3asON6rV69aH9U96KCDctppp+XEE0+s8zqzZ8+u1U+STJs2LR06dEiSTJgwoVYt+++/f61vQAUAAICvkqrSoq86BFhKs2fP/vhbGY+9IY2at2zocvgKm3r+jg1dAgAA8BWw6O/QWbNmLfHTa0kDfxsjAAAAACxPX4uw64EHHkh1dfVity+Dvn37Lra+RYv1f53q+KTvf//7i63pvPPOa5Ca6vJlfHYAAADwddNga3Z9kTbZZJNaC3F/2dx5552ZN29encfWWGONr10dn3TllVfmgw8+qPPYKqus8gVXs3hfxmcHAAAAXzdfi7BrpZVWSvfu3Ru6jCXq0qVLQ5eQ5MtTxyd91jdEfll8GZ8dAAAAfN18LT7GCAAAAMDXg7ALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwmjR0AcBX13NnDUqbNm0augwAAAAoM7MLAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBjCLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhFwAAAACFIewCAAAAoDCEXQAAAAAUhrALAAAAgMIQdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhdGkoQsAvnpKpVKSZPbs2Q1cCQAAAF8Hi/7+XPT36JIIu4B6e/vtt5MknTt3buBKAAAA+Dp5991307Zt2yW2EXYB9bbKKqskSV577bXP/B8Zvhpmz56dzp075/XXX0+bNm0auhyWA2NaPMa0WIxn8RjT4jGmxWNMv9pKpVLefffdrLnmmp/ZVtgF1FujRh8v99e2bVv/J1Ewbdq0MaYFY0yLx5gWi/EsHmNaPMa0eIzpV9fSTrawQD0AAAAAhSHsAgAAAKAwhF1AvTVv3jxnnnlmmjdv3tClsJwY0+IxpsVjTIvFeBaPMS0eY1o8xvTro6q0NN/ZCAAAAABfAWZ2AQAAAFAYwi4AAAAACkPYBQAAAEBhCLsAAAAAKAxhF5BLL70066yzTlq0aJGNN944DzzwwBLb33fffdl4443TokWLdOvWLZdffnmtNjfffHP69OmT5s2bp0+fPvn973+/osqnDst7TMeOHZuqqqpa24cffrgib4NPqM+YTps2Lfvss0969eqVRo0a5dhjj62znfe0YS3vMfWeNrz6jOktt9ySgQMHZrXVVkubNm2y5ZZb5s9//nOtdt7ThrW8x9R72rDqM54PPvhgtt5667Rv3z4rrbRSevfunQsvvLBWO+9ow1reY+odLQ5hF3zNjRs3Lscee2xOP/30PP300/n2t7+d73//+3nttdfqbP/qq69mhx12yLe//e08/fTTOe2003L00Ufn5ptvLrd55JFHsvfee2fffffNM888k3333Td77bVXHnvssS/qtr7WVsSYJkmbNm0ybdq0iq1FixZfxC197dV3TD/66KOsttpqOf3007PhhhvW2cZ72rBWxJgm3tOGVN8xvf/++zNw4MDceeed+dvf/pYBAwZk5513ztNPP11u4z1tWCtiTBPvaUOp73i2atUqRx55ZO6///688MIL+elPf5qf/vSn+e1vf1tu4x1tWCtiTBPvaGGUgK+1zTbbrHTYYYdV7Ovdu3fplFNOqbP9SSedVOrdu3fFvkMPPbS0xRZblH/ea6+9Sttvv31Fm0GDBpUGDx68nKpmSVbEmI4ZM6bUtm3b5V4rS6e+Y/pJ/fv3Lx1zzDG19ntPG9aKGFPvacP6PGO6SJ8+fUpnnXVW+WfvacNaEWPqPW04y2M8f/CDH5SGDh1a/tk72rBWxJh6R4vDzC74Gps7d27+9re/5Xvf+17F/u9973t5+OGH6zznkUceqdV+0KBBefLJJzNv3rwltllcnyw/K2pMk+S9995Lly5dstZaa2WnnXaq9V+qWTGWZUyXhve04ayoMU28pw1leYzpwoUL8+6772aVVVYp7/OeNpwVNaaJ97QhLI/xfPrpp/Pwww+nf//+5X3e0YazosY08Y4WhbALvsb+85//ZMGCBVljjTUq9q+xxhqZPn16nedMnz69zvbz58/Pf/7znyW2WVyfLD8rakx79+6dsWPH5rbbbst1112XFi1aZOutt87LL7+8Ym6EsmUZ06XhPW04K2pMvacNZ3mM6ahRozJnzpzstdde5X3e04azosbUe9owPs94rrXWWmnevHk22WSTHHHEETn44IPLx7yjDWdFjal3tDiaNHQBQMOrqqqq+LlUKtXa91ntP72/vn2yfC3vMd1iiy2yxRZblI9vvfXW+eY3v5lLLrkkv/zlL5dX2SzBininvKcNa3k/f+9pw1vWMb3uuusyfPjw/OEPf8jqq6++XPpk+VjeY+o9bVjLMp4PPPBA3nvvvTz66KM55ZRT0r179wwZMuRz9cnys7zH1DtaHMIu+BpbddVV07hx41r/9ePf//53rf9KskiHDh3qbN+kSZO0b99+iW0W1yfLz4oa009r1KhRNt10U/+V6wuwLGO6NLynDWdFjemneU+/OJ9nTMeNG5dhw4blxhtvzHbbbVdxzHvacFbUmH6a9/SL8XnGc5111kmSrL/++vnXv/6V4cOHl4MR72jDWVFj+mne0a8uH2OEr7FmzZpl4403zl//+teK/X/961+z1VZb1XnOlltuWav9X/7yl2yyySZp2rTpEtssrk+WnxU1pp9WKpUyceLEdOzYcfkUzmIty5guDe9pw1lRY/pp3tMvzrKO6XXXXZcDDjgg1157bXbcccdax72nDWdFjemneU+/GMvrf3dLpVI++uij8s/e0Yazosa0ruPe0a+oL3Y9fODL5vrrry81bdq0VFNTU5o0aVLp2GOPLbVq1ao0derUUqlUKp1yyimlfffdt9x+ypQppZYtW5aOO+640qRJk0o1NTWlpk2blm666aZym4ceeqjUuHHj0vnnn1964YUXSueff36pSZMmpUcfffQLv7+voxUxpsOHDy/dddddpf/93/8tPf3006UDDzyw1KRJk9Jjjz32hd/f11F9x7RUKpWefvrp0tNPP13aeOONS/vss0/p6aefLj3//PPl497ThrUixtR72rDqO6bXXnttqUmTJqVf//rXpWnTppW3mTNnltt4TxvWihhT72nDqe94/upXvyrddtttpZdeeqn00ksvlUaPHl1q06ZN6fTTTy+38Y42rBUxpt7R4hB2AaVf//rXpS5dupSaNWtW+uY3v1m67777ysf233//Uv/+/SvaT5gwobTRRhuVmjVrVuratWvpsssuq9XnjTfeWOrVq1epadOmpd69e5duvvnmFX0bfMLyHtNjjz22tPbaa5eaNWtWWm211Urf+973Sg8//PAXcSv8/+o7pklqbV26dKlo4z1tWMt7TL2nDa8+Y9q/f/86x3T//fev6NN72rCW95h6TxtWfcbzl7/8Zalv376lli1bltq0aVPaaKONSpdeemlpwYIFFX16RxvW8h5T72hxVJVK//8qxAAAAADwFWfNLgAAAAAKQ9gFAAAAQGEIuwAAAAAoDGEXAAAAAIUh7AIAAACgMIRdAAAAABSGsAsAAACAwhB2AQDAcrDtttvm2GOPbegyAOBrT9gFAMAKd8ABB6SqqqrW9sorryyX/seOHZt27dotl76W1S233JJzzjmnQWtYkgkTJqSqqiozZ85s6FIAYIVq0tAFAADw9bD99ttnzJgxFftWW221Bqpm8ebNm5emTZvW+7xVVlllBVSzfMybN6+hSwCAL4yZXQAAfCGaN2+eDh06VGyNGzdOktx+++3ZeOON06JFi3Tr1i1nnXVW5s+fXz73F7/4RdZff/20atUqnTt3zuGHH5733nsvycczlg488MDMmjWrPGNs+PDhSZKqqqrceuutFXW0a9cuY8eOTZJMnTo1VVVVueGGG7LtttumRYsWueaaa5IkY8aMyXrrrZcWLVqkd+/eufTSS5d4f5/+GGPXrl1z7rnnZr/99kt1dXW6dOmSP/zhD3nrrbey6667prq6Ouuvv36efPLJ8jmLZqjdeuut6dmzZ1q0aJGBAwfm9ddfr7jWZZddlnXXXTfNmjVLr1698j//8z8Vx6uqqnL55Zdn1113TatWrXLwwQdnwIABSZKVV145VVVVOeCAA5Ikd911V771rW+lXbt2ad++fXbaaaf87//+b7mvRc/olltuyYABA9KyZctsuOGGeeSRRyqu+dBDD6V///5p2bJlVl555QwaNCgzZsxIkpRKpVxwwQXp1q1bVlpppWy44Ya56aablvg8AWBZCbsAAGhQf/7znzN06NAcffTRmTRpUn7zm99k7NixGTFiRLlNo0aN8stf/jLPPfdcrrrqqtx777056aSTkiRbbbVVLrroorRp0ybTpk3LtGnTcsIJJ9SrhpNPPjlHH310XnjhhQwaNChXXHFFTj/99IwYMSIvvPBCzjvvvPzsZz/LVVddVa9+L7zwwmy99dZ5+umns+OOO2bffffNfvvtl6FDh+app55K9+7ds99++6VUKpXPef/99zNixIhcddVVeeihhzJ79uwMHjy4fPz3v/99jjnmmBx//PF57rnncuihh+bAAw/M+PHjK6595plnZtddd82zzz6bs88+OzfffHOSZPLkyZk2bVouvvjiJMmcOXPyk5/8JE888UTuueeeNGrUKD/4wQ+ycOHCiv5OP/30nHDCCZk4cWJ69uyZIUOGlAPJiRMn5rvf/W769u2bRx55JA8++GB23nnnLFiwIEny05/+NGPGjMlll12W559/Pscdd1yGDh2a++67r17PEwCWSgkAAFaw/fffv9S4ceNSq1atytsee+xRKpVKpW9/+9ul8847r6L9//zP/5Q6duy42P5uuOGGUvv27cs/jxkzptS2bdta7ZKUfv/731fsa9u2bWnMmDGlUqlUevXVV0tJShdddFFFm86dO5euvfbain3nnHNOacstt1xsTf379y8dc8wx5Z+7dOlSGjp0aPnnadOmlZKUfvazn5X3PfLII6UkpWnTppXvI0np0UcfLbd54YUXSklKjz32WKlUKpW22mqr0iGHHFJx7T333LO0ww47VNz3scceW9Fm/PjxpSSlGTNmLPYeSqVS6d///ncpSenZZ58tlUr/94yuvPLKcpvnn3++lKT0wgsvlEqlUmnIkCGlrbfeus7+3nvvvVKLFi1KDz/8cMX+YcOGlYYMGbLEWgBgWVizCwCAL8SAAQNy2WWXlX9u1apVkuRvf/tbnnjiiYqZXAsWLMiHH36Y999/Py1btsz48eNz3nnnZdKkSZk9e3bmz5+fDz/8MHPmzCn383lssskm5X+/9dZbef311zNs2LAccsgh5f3z589P27Zt69XvBhtsUP73GmuskSRZf/31a+3797//nQ4dOiRJmjRpUlFP7969065du7zwwgvZbLPN8sILL+THP/5xxXW23nrr8kytuu5pSf73f/83P/vZz/Loo4/mP//5T3lG12uvvZZ+/frVeS8dO3Ys1927d+9MnDgxe+65Z539T5o0KR9++GEGDhxYsX/u3LnZaKONlqpGAKgPYRcAAF+IVq1apXv37rX2L1y4MGeddVZ++MMf1jrWokWL/OMf/8gOO+yQww47LOecc05WWWWVPPjggxk2bNhnLrxeVVVV8RHBpO7F2j8ZmC0Ke6644opsvvnmFe0WrTG2tD650H1VVdVi9336I4OL9i9u36ePl0qlWvuWNgTceeed07lz51xxxRVZc801s3DhwvTr1y9z5879zHtZVPdKK6202P4XtfnjH/+YTp06VRxr3rz5UtUIAPUh7AIAoEF985vfzOTJk+sMwpLkySefzPz58zNq1Kg0avTxkrM33HBDRZtmzZqV14f6pNVWWy3Tpk0r//zyyy/n/fffX2I9a6yxRjp16pQpU6bkRz/6UX1v53ObP39+nnzyyWy22WZJPl5ja+bMmendu3eSZL311suDDz6Y/fbbr3zOww8/nPXWW2+J/TZr1ixJKp7T22+/nRdeeCG/+c1v8u1vfztJ8uCDD9a75g022CD33HNPzjrrrFrH+vTpk+bNm+e1115L//796903ANSXsAsAgAZ1xhlnZKeddkrnzp2z5557plGjRvn73/+eZ599Nueee27WXXfdzJ8/P5dcckl23nnnPPTQQ7n88ssr+ujatWvee++93HPPPdlwww3TsmXLtGzZMt/5znfyq1/9KltssUUWLlyYk08+uWKG0uIMHz48Rx99dNq0aZPvf//7+eijj/Lkk09mxowZ+clPfrKiHkWSj2dQHXXUUfnlL3+Zpk2b5sgjj8wWW2xRDr9OPPHE7LXXXvnmN7+Z7373u7n99ttzyy235O67715iv126dElVVVXuuOOO7LDDDllppZWy8sorp3379vntb3+bjh075rXXXsspp5xS75pPPfXUrL/++jn88MNz2GGHpVmzZhk/fnz23HPPrLrqqjnhhBNy3HHHZeHChfnWt76V2bNn5+GHH051dXX233//ZXpOALA4vo0RAIAGNWjQoNxxxx3561//mk033TRbbLFFfvGLX6RLly5Jkm984xv5xS9+kf/6r/9Kv3798rvf/S4jR46s6GOrrbbKYYcdlr333jurrbZaLrjggiTJqFGj0rlz52yzzTbZZ599csIJJ6Rly5afWdPBBx+cK6+8MmPHjs3666+f/v37Z+zYsVlnnXWW/wP4lJYtW+bkk0/OPvvsky233DIrrbRSrr/++vLx3XbbLRdffHF+/vOfp2/fvvnNb36TMWPGZNttt11iv506dcpZZ52VU045JWussUaOPPLINGrUKNdff33+9re/pV+/fjnuuOPy85//vN419+zZM3/5y1/yzDPPZLPNNsuWW26ZP/zhD2nS5OP/tn7OOefkjDPOyMiRI7Peeutl0KBBuf3227+Q5wnA109V6dOLGAAAAA1i7NixOfbYYzNz5syGLgUAvrLM7AIAAACgMIRdAAAAABSGjzECAAAAUBhmdgEAAABQGMIuAAAAAApD2AUAAABAYQi7AAAAACgMYRcAAAAAhSHsAgAAAKAwhF0AAAAAFIawCwAAAIDCEHYBAAAAUBj/H8Ymt91WSUMbAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1200x900 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plotting feature importance\n",
    "plot_feature_importances(full_tree,\n",
    "                         train = x_train,\n",
    "                         export = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02769b9b",
   "metadata": {},
   "source": [
    "## Pruned Tree Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "e7684973",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "113280"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# declaring a hyperparameter space\n",
    "criterion_range         = [\"gini\", \"entropy\"]\n",
    "splitter_range          = [\"best\", \"random\"] \n",
    "max_depth_range         = range(1, 9, 1)\n",
    "min_samples_split_range = range(2, 61, 1)\n",
    "min_samples_leaf_range  = range(1, 61, 1)\n",
    "\n",
    "# checking the amoung of conbinations\n",
    "len(criterion_range)*len(splitter_range)*len(max_depth_range)*len(min_samples_split_range)*len(min_samples_leaf_range)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "36164d02",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tuned Parameters  : {'splitter': 'best', 'min_samples_split': 60, 'min_samples_leaf': 20, 'max_depth': 3, 'criterion': 'entropy'}\n",
      "Tuned Training R-Square: 0.7247\n"
     ]
    }
   ],
   "source": [
    "# creating a hyperparameter grid\n",
    "param_grid = {'criterion'         : criterion_range,\n",
    "              'splitter'          : splitter_range,\n",
    "              'max_depth'         : max_depth_range ,\n",
    "              'min_samples_split' : min_samples_split_range,\n",
    "              'min_samples_leaf'  : min_samples_leaf_range}\n",
    "\n",
    "\n",
    "# instantiating the model \n",
    "pruned_tree = DecisionTreeClassifier(random_state = 219)\n",
    "\n",
    "\n",
    "# RandomizedSearchCV object\n",
    "pruned_tree_cv = RandomizedSearchCV(estimator            = pruned_tree,\n",
    "                                   param_distributions   = param_grid,\n",
    "                                   cv                    = 5,\n",
    "                                   random_state          = 219)\n",
    "\n",
    "\n",
    "# fitting to data\n",
    "pruned_tree_cv.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# printing the optimal parameters and best score\n",
    "print(\"Tuned Parameters  :\", pruned_tree_cv.best_params_)\n",
    "print(\"Tuned Training R-Square:\", pruned_tree_cv.best_score_.round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "12aa2016",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model_name        : Pruned Tree Model\n",
      "Training ACCURACY : 0.7276\n",
      "Testing  ACCURACY : 0.6974\n",
      "Train-Test Gap    : 0.0302\n",
      "AUC Score         : 0.5691\n",
      "Confusion_matrix: \n",
      "[[ 13  50]\n",
      " [  9 123]]\n"
     ]
    }
   ],
   "source": [
    "# setting model name\n",
    "model_name = 'Pruned Tree Model'\n",
    "\n",
    "# instantiating model \n",
    "pruned_tree = DecisionTreeClassifier(max_depth         = 3,\n",
    "                                     min_samples_leaf  = 20,\n",
    "                                     min_samples_split = 60,\n",
    "                                     criterion         = 'entropy',\n",
    "                                     splitter          = 'best',\n",
    "                                     random_state      = 219)\n",
    "\n",
    "\n",
    "# fitting the training data\n",
    "pruned_tree_fit = pruned_tree.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# predicting on new data\n",
    "pruned_tree_pred = pruned_tree_fit.predict(x_test)\n",
    "\n",
    "# saving scoring data for future use\n",
    "pruned_tree_train_score = pruned_tree_fit.score(x_train, y_train).round(4) # accuracy\n",
    "pruned_tree_test_score  = pruned_tree_fit.score(x_test, y_test).round(4) # accuracy\n",
    "\n",
    "# saving auc score\n",
    "pruned_tree_auc_score   = roc_auc_score(y_true  = y_test,\n",
    "                                        y_score = pruned_tree_pred).round(4) # auc\n",
    "\n",
    "# scoring the model\n",
    "print(f'Model_name        : {model_name}')\n",
    "print(f'Training ACCURACY : {pruned_tree_fit.score(x_train, y_train).round(4)}')\n",
    "print(f'Testing  ACCURACY : {pruned_tree_fit.score(x_test, y_test).round(4)}')\n",
    "print(f'Train-Test Gap    : {abs(pruned_tree_train_score - pruned_tree_test_score).round(4)}')\n",
    "print(f'AUC Score         : {pruned_tree_auc_score.round(4)}')\n",
    "print(f\"\"\"Confusion_matrix: \n",
    "{confusion_matrix(y_true = y_test, y_pred = pruned_tree_pred)}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "91ae9fe3",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "True Negatives : 13\n",
      "False Positives: 50\n",
      "False Negatives: 9\n",
      "True Positives : 123\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# unpacking the confusion matrix\n",
    "pruned_tree_tn, \\\n",
    "pruned_tree_fp, \\\n",
    "pruned_tree_fn, \\\n",
    "pruned_tree_tp = confusion_matrix(y_true = y_test, y_pred = pruned_tree_pred).ravel()\n",
    "\n",
    "\n",
    "# printing each result one-by-one\n",
    "print(f\"\"\"\n",
    "True Negatives : {pruned_tree_tn}\n",
    "False Positives: {pruned_tree_fp}\n",
    "False Negatives: {pruned_tree_fn}\n",
    "True Positives : {pruned_tree_tp}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "b202272e",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calling the visual_cm function\n",
    "visual_cm(true_y = y_test,\n",
    "          pred_y = full_tree_pred,\n",
    "          labels = ['CROSS_SELL_FAIL', 'CROSS_SELL_SUCCESS'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "b7938846",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x900 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plotting feature importance\n",
    "plot_feature_importances(pruned_tree,\n",
    "                         train = x_train,\n",
    "                         export = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9ca1825",
   "metadata": {},
   "source": [
    "## Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "a2322f45",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "64000"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# declaring a hyperparameter space\n",
    "n_estimators_range      = range(100, 1001, 100)\n",
    "criterion_range         = [\"gini\", \"entropy\"] \n",
    "max_depth_range         = range(1, 9, 1)\n",
    "min_samples_split_range = range(2, 101, 5)\n",
    "min_samples_leaf_range  = range(1, 101, 5)\n",
    "\n",
    "# checking the amoung of conbinations\n",
    "len(n_estimators_range)*len(criterion_range )*len(max_depth_range)*len(min_samples_split_range)*len(min_samples_leaf_range)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "808dbcef",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# creating a hyperparameter grid\n",
    "param_grid = {'n_estimators'      : n_estimators_range,\n",
    "              'criterion'         : criterion_range,\n",
    "              'max_depth'         : max_depth_range ,\n",
    "              'min_samples_split' : min_samples_split_range,\n",
    "              'min_samples_leaf'  : min_samples_leaf_range}\n",
    "\n",
    "\n",
    "# instantiating the model \n",
    "random_forest = RandomForestClassifier(random_state = 219)\n",
    "\n",
    "\n",
    "# RandomizedSearchCV object\n",
    "random_forest_cv = RandomizedSearchCV(estimator          = random_forest,\n",
    "                                   param_distributions   = param_grid,\n",
    "                                   cv                    = 5,\n",
    "                                   random_state          = 219)\n",
    "\n",
    "\n",
    "# fitting to data\n",
    "random_forest_cv.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# printing the optimal parameters and best score\n",
    "print(\"Tuned Parameters  :\", random_forest_cv.best_params_)\n",
    "print(\"Tuned Training R-Square:\", random_forest_cv.best_score_.round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec94cbc8",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# setting model name\n",
    "model_name = 'Random Forest'\n",
    "\n",
    "# seting each parameter\n",
    "rondom_forest = RandomForestClassifier(n_estimators      = 800,\n",
    "                                       criterion         = 'gini',\n",
    "                                       max_depth         = 8,\n",
    "                                       min_samples_split = 92,\n",
    "                                       min_samples_leaf  = 31,\n",
    "                                       bootstrap         = True,\n",
    "                                       warm_start        = False,\n",
    "                                       random_state      = 219)\n",
    "\n",
    "# fitting the training data\n",
    "rondom_forest_fit = rondom_forest.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "# predicting based on the testing set\n",
    "random_forest_pred = rondom_forest.predict(x_test)\n",
    "\n",
    "\n",
    "# scoring the results\n",
    "random_forest_train_score = rondom_forest_fit.score(x_train, y_train).round(4) # using R-square\n",
    "random_forest_test_score  = rondom_forest_fit.score(x_test, y_test).round(4)   # using R-square\n",
    "\n",
    "# saving auc score\n",
    "random_forest_auc_score   = roc_auc_score(y_true  = y_test,\n",
    "                                        y_score = random_forest_pred).round(4) # auc\n",
    "# scoring the results\n",
    "print(f'Model_name        : {model_name}')\n",
    "print(f'Training ACCURACY : {rondom_forest_fit.score(x_train, y_train).round(4)}')\n",
    "print(f'Testing  ACCURACY : {rondom_forest_fit.score(x_test, y_test).round(4)}')\n",
    "print(f'Train-Test Gap    : {abs(random_forest_train_score - random_forest_test_score).round(4)}')\n",
    "print(f'AUC Score         : {random_forest_auc_score.round(4)}')\n",
    "print(f\"\"\"Confusion_matrix: \n",
    "{confusion_matrix(y_true = y_test, y_pred = random_forest_pred)}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "908c2a94",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# plotting feature importance\n",
    "plot_feature_importances(rondom_forest,\n",
    "                         train = x_train,\n",
    "                         export = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f512ed0",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# unpacking the confusion matrix\n",
    "random_forest_tn, \\\n",
    "random_forest_fp, \\\n",
    "random_forest_fn, \\\n",
    "random_forest_tp = confusion_matrix(y_true = y_test, y_pred = random_forest_pred).ravel()\n",
    "\n",
    "\n",
    "# printing each result one-by-one\n",
    "print(f\"\"\"\n",
    "Model Name     : {model_name}\n",
    "True Negatives : {random_forest_tn}\n",
    "False Positives: {random_forest_fp}\n",
    "False Negatives: {random_forest_fn}\n",
    "True Positives : {random_forest_tp}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eef32c5b",
   "metadata": {},
   "source": [
    "# Summary of each model results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "256cc5aa",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# comparing results\n",
    "print(f\"\"\"\n",
    "Model         AUC Score      TN, FP, FN, TP\n",
    "-----         ---------      --------------\n",
    "knn           {knn_auc_score}         {knn_tn, knn_fp, knn_fn, knn_tp}\n",
    "Logistic      {logreg_auc_score}         {logreg_tn, logreg_fp, logreg_fn, logreg_tp}\n",
    "Cart          {full_tree_auc_score}         {full_tree_tn, full_tree_fp, full_tree_fn, full_tree_tp}\n",
    "Pruned Tree   {pruned_tree_auc_score}         {pruned_tree_tn, pruned_tree_fp, pruned_tree_fn, pruned_tree_tp}\n",
    "Random Forest {random_forest_auc_score}         {random_forest_tn, random_forest_fp, random_forest_fn, random_forest_tp}\n",
    "\"\"\")\n",
    "\n",
    "\n",
    "# creating a dictionary for model results\n",
    "model_performance = {\n",
    "    \n",
    "    'Model Name'    : ['Knn', 'Logistic', 'Cart', 'Pruned Tree', 'Random Forest' ],\n",
    "           \n",
    "    'AUC Score' : [knn_auc_score,logreg_auc_score, full_tree_auc_score, pruned_tree_auc_score, random_forest_auc_score],\n",
    "    \n",
    "    'Training Accuracy' : [knn_train_score, logreg_train_score, full_tree_train_score, pruned_tree_train_score, \n",
    "                           random_forest_train_score],\n",
    "           \n",
    "    'Testing Accuracy'  : [knn_test_score,logreg_test_score, full_tree_test_score, pruned_tree_test_score, \n",
    "                           random_forest_test_score],\n",
    "\n",
    "    'Confusion Matrix'  : [(knn_tn, knn_fp, knn_fn, knn_tp),\n",
    "                           (logreg_tn, logreg_fp, logreg_fn, logreg_tp),\n",
    "                           (full_tree_tn, full_tree_fp, full_tree_fn, full_tree_tp),\n",
    "                           (pruned_tree_tn, pruned_tree_fp, pruned_tree_fn, pruned_tree_tp),\n",
    "                           (random_forest_tn, random_forest_fp, random_forest_fn, random_forest_tp)]}\n",
    "\n",
    "\n",
    "# converting model_performance into a DataFrame\n",
    "model_performance = pd.DataFrame(model_performance)\n",
    "\n",
    "\n",
    "# sending model results to Excel\n",
    "model_performance.to_excel('./__results/classification_model_performance.xlsx',\n",
    "                           index = False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.15"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
